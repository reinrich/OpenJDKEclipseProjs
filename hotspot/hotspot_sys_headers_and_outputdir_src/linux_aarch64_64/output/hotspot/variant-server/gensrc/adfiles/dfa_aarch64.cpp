#line 1 "dfa_aarch64.cpp"
//
// Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.
// Copyright (c) 2014, 2021, Red Hat, Inc. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 2 only, as
// published by the Free Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// You should have received a copy of the GNU General Public License version
// 2 along with this work; if not, write to the Free Software Foundation,
// Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
//
// Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
// or visit www.oracle.com if you need additional information or have any
// questions.
//
//

// Machine Generated File.  Do Not Edit!

#include "precompiled.hpp"
#include "adfiles/ad_aarch64.hpp"
#include "oops/compressedOops.hpp"
#include "opto/cfgnode.hpp"
#include "opto/intrinsicnode.hpp"
#include "opto/matcher.hpp"
#include "opto/narrowptrnode.hpp"
#include "opto/opcodes.hpp"
#include "opto/convertnode.hpp"
#include "utilities/powerOfTwo.hpp"

//------------------------- Source -----------------------------------------

//------------------------- Attributes -------------------------------------

// AttributeForm 
static const int op_cost = 1;

// AttributeForm 
static const int ins_cost = INSN_COST;

// AttributeForm 
static const int ins_size = 32;

// AttributeForm 
static const int ins_short_branch = 0;

// AttributeForm 
static const int ins_alignment = 4;

//------------------------- Macros -----------------------------------------
#define DFA_PRODUCTION(result, rule, cost)\
  assert(rule < (1 << 15), "too many rules"); _cost[ (result) ] = cost; _rule[ (result) ] = (rule << 1) | 0x1;

//------------------------- DFA --------------------------------------------
// DFA is a large switch with case statements for each ideal opcode encountered
// in any match rule in the ad file.  Each case has a series of if's to handle
// the match or fail decisions.  The matches test the cost function of that
// rule, and prune any cases which are higher cost for the same reduction.
// In order to generate the DFA we walk the table of ideal opcode/MatchList
// pairs generated by the ADLC front end to build the contents of the case
// statements (a series of if statements).


void  State::_sub_Op_RegN(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGNNOSP, iRegNNoSp_rule, c)
        DFA_PRODUCTION(IREGN, iRegN_rule, c)
        DFA_PRODUCTION(IREGN_R0, iRegN_R0_rule, c)
        DFA_PRODUCTION(IREGN_R2, iRegN_R2_rule, c)
        DFA_PRODUCTION(IREGN_R3, iRegN_R3_rule, c)
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegI(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGIHEAPBASE, iRegIHeapbase_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGI_R4, iRegI_R4_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGI_R3, iRegI_R3_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGI_R2, iRegI_R2_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGI_R0, iRegI_R0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGINOSP, iRegINoSp_rule, c)
        DFA_PRODUCTION(IREGI, iRegI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegP(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_FP, iRegP_FP_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R10, iRegP_R10_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R5, iRegP_R5_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R4, iRegP_R4_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R3, iRegP_R3_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R2, iRegP_R2_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R1, iRegP_R1_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGP_R0, iRegP_R0_rule, c)
        DFA_PRODUCTION(IREGP, iRegP_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, inline_cache_RegP_rule, c)
        DFA_PRODUCTION(THREAD_REGP, thread_RegP_rule, c)
        DFA_PRODUCTION(LR_REGP, lr_RegP_rule, c)
        DFA_PRODUCTION(INDIRECT, indirect_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGPNOSP, iRegPNoSp_rule, c)
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegF(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGF, vRegF_rule, c)
    }
}
void  State::_sub_Op_RegD(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V31, vRegD_V31_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V30, vRegD_V30_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V29, vRegD_V29_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V28, vRegD_V28_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V27, vRegD_V27_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V26, vRegD_V26_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V25, vRegD_V25_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V24, vRegD_V24_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V23, vRegD_V23_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V22, vRegD_V22_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V21, vRegD_V21_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V20, vRegD_V20_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V19, vRegD_V19_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V18, vRegD_V18_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V17, vRegD_V17_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V16, vRegD_V16_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V15, vRegD_V15_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V14, vRegD_V14_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V13, vRegD_V13_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V12, vRegD_V12_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V11, vRegD_V11_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V10, vRegD_V10_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V9, vRegD_V9_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V8, vRegD_V8_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V7, vRegD_V7_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V6, vRegD_V6_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V5, vRegD_V5_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V4, vRegD_V4_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V3, vRegD_V3_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V2, vRegD_V2_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V1, vRegD_V1_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD_V0, vRegD_V0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREGD, vRegD_rule, c)
    }
}
void  State::_sub_Op_RegL(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGL_R11, iRegL_R11_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGL_R3, iRegL_R3_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGL_R2, iRegL_R2_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGL_R0, iRegL_R0_rule, c)
        DFA_PRODUCTION(IREGLNOSP, iRegLNoSp_rule, c+1)
        DFA_PRODUCTION(IREGL, iRegL_rule, c+1)
    }
    {
      unsigned int c = 1;
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IREGL, iRegL_rule, c)	  // overwrites higher cost rule
    }
}
void  State::_sub_Op_VecA(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VREG, vReg_rule, c)
    }
}
void  State::_sub_Op_VecD(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VECD, vecD_rule, c)
    }
}
void  State::_sub_Op_VecX(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(VECX, vecX_rule, c)
    }
}
void  State::_sub_Op_RegVectMask(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(PREGGOV_P1, pRegGov_P1_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(PREGGOV_P0, pRegGov_P0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(PREGGOV, pRegGov_rule, c)
        DFA_PRODUCTION(PREG, pReg_rule, c)
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegFlags(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(RFLAGSREGU, rFlagsRegU_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(RFLAGSREG, rFlagsReg_rule, c)
    }
}
void  State::_sub_Op_AbsD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _SUBD_VREGD_VREGD) ) {
      unsigned int c = _kids[0]->_cost[_SUBD_VREGD_VREGD]+INSN_COST * 3;
        DFA_PRODUCTION(VREGD, absdD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, absD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AbsF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _SUBF_VREGF_VREGF) ) {
      unsigned int c = _kids[0]->_cost[_SUBF_VREGF_VREGF]+INSN_COST * 3;
        DFA_PRODUCTION(VREGF, absdF_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, absF_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AbsI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, absI_reg_rule, c)
        DFA_PRODUCTION(IREGI, absI_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, absI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, absI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, absI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, absI_reg_rule, c)
    }
}
void  State::_sub_Op_AbsL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+INSN_COST * 2;
        DFA_PRODUCTION(IREGLNOSP, absL_reg_rule, c)
        DFA_PRODUCTION(IREGL, absL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, absL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, absL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, absL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, absL_reg_rule, c)
    }
}
void  State::_sub_Op_AddD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+INSN_COST * 5;
        DFA_PRODUCTION(VREGD, addD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_AddF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+INSN_COST * 5;
        DFA_PRODUCTION(VREGF, addF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_AddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxth_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGI, AddExtI_uxth_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxth_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxth_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxth_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxth_and_shift_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxth_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_and_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxth_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxth_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxtb_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxtb_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_65535) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_65535]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxth_and_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ANDI_IREGIORL2I_IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ANDI_IREGIORL2I_IMMI_65535] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxth_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_255) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_255]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_and_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ANDI_IREGIORL2I_IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ANDI_IREGIORL2I_IMMI_255] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_uxtb_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxtb_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxtb_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxth_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddExtI_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddExtI_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddExtI_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddExtI_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddExtI_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddExtI_sxth_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) &&
        (
#line 13249 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 31) + (n->in(2)->in(2)->get_int() & 31)) & 31)
#line 868 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extrAddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extrAddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extrAddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extrAddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extrAddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extrAddI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) &&
        (
#line 13249 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 31) + (n->in(2)->in(2)->get_int() & 31)) & 31)
#line 897 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extrAddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extrAddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extrAddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extrAddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extrAddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extrAddI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AddI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AddI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AddI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AddI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AddI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AddI_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULI_IREGIORL2I_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_MULI_IREGIORL2I_IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, maddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, maddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, maddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, maddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, maddI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, maddI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _MULI_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_MULI_IREGIORL2I_IREGIORL2I]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, maddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, maddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, maddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, maddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, maddI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, maddI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVL2I_IREGL_) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[_CONVL2I_IREGL_]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, addI_reg_imm_i2l_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, addI_reg_imm_i2l_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, addI_reg_imm_i2l_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, addI_reg_imm_i2l_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, addI_reg_imm_i2l_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, addI_reg_imm_i2l_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, addI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, addI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, addI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, addI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, addI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, addI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, addI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, addI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, addI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, addI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, addI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, addI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtw_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGL, AddExtL_uxtw_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtw_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtw_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtw_and_shift_0_rule, c)
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtw_and_shift_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtw_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtw_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtw_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtw_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtw_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtw_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxth_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxth_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxth_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxth_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxth_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxth_and_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxth_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_and_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_and_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtI_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtI_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtI_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtI_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtI_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtI_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtI_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtw_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtw_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtw_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtw_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtw_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtw_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtw_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxth_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxth_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxth_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtb_shift_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtb_shift_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtb_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_4294967295) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_4294967295]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtw_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtw_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtw_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtw_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtw_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtw_and_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_4294967295) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_4294967295] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtw_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_65535) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_65535]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxth_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxth_and_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_65535] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxth_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_255) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_255]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_and_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_and_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_255) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_255] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_uxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_uxtb_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtb_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtb_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtb_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtb_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtw_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtw_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtw_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtw_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtw_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtw_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxtw_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxtw_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxtw_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxtw_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxtw_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxtw_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxth_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxth_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtL_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtL_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtL_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtL_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtL_sxth_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtL_sxth_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddExtI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) &&
        (
#line 13231 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 63) + (n->in(2)->in(2)->get_int() & 63)) & 63)
#line 1810 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, extrAddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, extrAddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, extrAddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, extrAddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, extrAddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, extrAddL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) &&
        (
#line 13231 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 63) + (n->in(2)->in(2)->get_int() & 63)) & 63)
#line 1836 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, extrAddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, extrAddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, extrAddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, extrAddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, extrAddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, extrAddL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AddL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AddL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AddL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AddL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AddL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AddL_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IREGLNOSP) ) {
      unsigned int c = _kids[0]->_cost[_MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IREGLNOSP]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, smaddL_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, smaddL_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, smaddL_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, smaddL_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, smaddL_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, smaddL_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGLNOSP) && STATE__VALID_CHILD(_kids[1], _MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IREGLNOSP]+_kids[1]->_cost[_MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, smaddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, smaddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, smaddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, smaddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, smaddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, smaddL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL_IREGL_IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_MULL_IREGL_IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, maddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, maddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, maddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, maddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, maddL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, maddL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _MULL_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_MULL_IREGL_IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, maddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, maddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, maddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, maddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, maddL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, maddL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, addL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, addL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, addL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, addL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, addL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, addL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, addL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, addL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, addL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, addL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, addL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, addL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AddP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
        DFA_PRODUCTION(IREGPNOSP, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP, addP_reg_imm_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, addP_reg_imm_rule, c)
        DFA_PRODUCTION(THREAD_REGP, addP_reg_imm_rule, c)
        DFA_PRODUCTION(LR_REGP, addP_reg_imm_rule, c)
        DFA_PRODUCTION(INDIRECT, addP_reg_imm_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R1, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R2, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R3, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R4, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R5, addP_reg_imm_rule, c)
        DFA_PRODUCTION(IREGP_R10, addP_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_IREGIORL2I__IMMISCALE) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_LSHIFTL__CONVI2L_IREGIORL2I__IMMISCALE]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, addP_reg_reg_ext_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, addP_reg_reg_ext_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMISCALE) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMISCALE]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, addP_reg_reg_lsl_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, addP_reg_reg_lsl_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, addP_reg_reg_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, addP_reg_reg_ext_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, addP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, addP_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], VMEMA_IMMLOFFSET4) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[VMEMA_IMMLOFFSET4];
        DFA_PRODUCTION(VMEMA_INDOFFL4, vmemA_indOffL4_rule, c)
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, vmemA_indOffL4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], VMEMA_IMMIOFFSET4) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[VMEMA_IMMIOFFSET4];
        DFA_PRODUCTION(VMEMA_INDOFFI4, vmemA_indOffI4_rule, c)
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, vmemA_indOffI4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], THREAD_REGP) && STATE__VALID_CHILD(_kids[1], IMML_PC_OFF) ) {
      unsigned int c = _kids[0]->_cost[THREAD_REGP]+_kids[1]->_cost[IMML_PC_OFF];
        DFA_PRODUCTION(THREAD_ANCHOR_PC, thread_anchor_pc_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET) &&
        
#line 6117 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 2448 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[IMMLOFFSET];
        DFA_PRODUCTION(INDOFFLN, indOffLN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indOffLN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indOffLN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffLN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET) &&
        
#line 6102 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 2466 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[IMMIOFFSET];
        DFA_PRODUCTION(INDOFFIN, indOffIN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indOffIN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indOffIN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffIN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        
#line 6087 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 2484 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(INDINDEXN, indIndexN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGI_) &&
        
#line 6072 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 2508 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[_CONVI2L_IREGI_];
        DFA_PRODUCTION(INDINDEXI2LN, indIndexI2LN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexI2LN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMISCALE) &&
        
#line 6057 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0 && size_fits_all_mem_uses(n->as_AddP(), n->in(AddPNode::Offset)->in(2)->get_int())
#line 2532 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMISCALE];
        DFA_PRODUCTION(INDINDEXSCALEDN, indIndexScaledN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexScaledN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexScaledN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexScaledN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexScaledN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexScaledN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_IREGI__IMMISCALE) &&
        
#line 6042 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0 && size_fits_all_mem_uses(n->as_AddP(), n->in(AddPNode::Offset)->in(2)->get_int())
#line 2556 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[_LSHIFTL__CONVI2L_IREGI__IMMISCALE];
        DFA_PRODUCTION(INDINDEXSCALEDI2LN, indIndexScaledI2LN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexScaledI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexScaledI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexScaledI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexScaledI2LN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexScaledI2LN_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET16) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET16];
        DFA_PRODUCTION(INDOFFL16, indOffL16_rule, c)
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indOffL16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET8) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET8];
        DFA_PRODUCTION(INDOFFL8, indOffL8_rule, c)
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indOffL8_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indOffL8_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffL8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET4) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET4];
        DFA_PRODUCTION(INDOFFL4, indOffL4_rule, c)
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indOffL4_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indOffL4_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffL4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET2) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET2];
        DFA_PRODUCTION(INDOFFL2, indOffL2_rule, c)
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indOffL2_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indOffL2_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffL2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET1) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET1];
        DFA_PRODUCTION(INDOFFL1, indOffL1_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indOffL1_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffL1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMLOFFSET) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMLOFFSET];
        DFA_PRODUCTION(INDOFFL, indOffL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET16) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET16];
        DFA_PRODUCTION(INDOFFI16, indOffI16_rule, c)
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indOffI16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET8) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET8];
        DFA_PRODUCTION(INDOFFI8, indOffI8_rule, c)
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indOffI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indOffI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffI8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET4) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET4];
        DFA_PRODUCTION(INDOFFI4, indOffI4_rule, c)
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indOffI4_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indOffI4_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffI4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET2) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET2];
        DFA_PRODUCTION(INDOFFI2, indOffI2_rule, c)
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indOffI2_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indOffI2_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffI2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET1) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET1];
        DFA_PRODUCTION(INDOFFI1, indOffI1_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indOffI1_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indOffI1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMIOFFSET) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMIOFFSET];
        DFA_PRODUCTION(INDOFFI, indOffI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(INDINDEX, indIndex_rule, c)
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndex_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGI_) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_CONVI2L_IREGI_];
        DFA_PRODUCTION(INDINDEXI2L, indIndexI2L_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMISCALE) &&
        
#line 5817 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
size_fits_all_mem_uses(n->as_AddP(), n->in(AddPNode::Offset)->in(2)->get_int())
#line 2750 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMISCALE];
        DFA_PRODUCTION(INDINDEXSCALED, indIndexScaled_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexScaled_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexScaled_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexScaled_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexScaled_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexScaled_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_IREGI__IMMISCALE) &&
        
#line 5802 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
size_fits_all_mem_uses(n->as_AddP(), n->in(AddPNode::Offset)->in(2)->get_int())
#line 2774 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[_LSHIFTL__CONVI2L_IREGI__IMMISCALE];
        DFA_PRODUCTION(INDINDEXSCALEDI2L, indIndexScaledI2L_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indIndexScaledI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indIndexScaledI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indIndexScaledI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indIndexScaledI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indIndexScaledI2L_rule, c)
      }
    }
}
void  State::_sub_Op_AndI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_ANDI_IREGIORL2I_IREGIORL2I, _AndI_iRegIorL2I_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_ANDI_IREGIORL2I_IMMI, _AndI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMILOG) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMILOG] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, andI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI, andI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, andI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R2, andI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R3, andI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R4, andI_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, andI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, andI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, andI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, andI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, andI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, andI_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_65535];
        DFA_PRODUCTION(_ANDI_IREGIORL2I_IMMI_65535, _AndI_iRegIorL2I_immI_65535_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION(_ANDI_IREGIORL2I_IMMI_255, _AndI_iRegIorL2I_immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI_BITMASK];
        DFA_PRODUCTION(_ANDI_IREGI_IMMI_BITMASK, _AndI_iRegI_immI_bitmask_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_BITMASK];
        DFA_PRODUCTION(_ANDI_IREGIORL2I_IMMI_BITMASK, _AndI_iRegIorL2I_immI_bitmask_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_BITMASK];
        DFA_PRODUCTION(_ANDI__URSHIFTI_IREGIORL2I_IMMI_IMMI_BITMASK, _AndI__URShiftI_iRegIorL2I_immI_immI_bitmask_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_BITMASK) &&
        (
#line 12983 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2(n->in(2)->get_int() + 1) + (n->in(1)->in(2)->get_int() & 31)) <= (31 + 1)
#line 2862 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_BITMASK] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, ubfxwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, ubfxwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, ubfxwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, ubfxwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, ubfxwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, ubfxwI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I_IMMI_M1]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI_IREGIORL2I_IMMI_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, AndI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, AndI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, AndI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, AndI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, AndI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, AndI_reg_not_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AndL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_ANDL_IREGL_IREGL, _AndL_iRegL_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML];
        DFA_PRODUCTION(_ANDL_IREGL_IMML, _AndL_iRegL_immL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IMML_32BITS] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, convUI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL, convUI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, convUI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, convUI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, convUI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, convUI2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLLOG) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLLOG] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, andL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, andL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, andL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, andL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, andL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, andL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, andL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, andL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, andL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, andL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, andL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, andL_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_4294967295) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_4294967295];
        DFA_PRODUCTION(_ANDL_IREGL_IMML_4294967295, _AndL_iRegL_immL_4294967295_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_65535];
        DFA_PRODUCTION(_ANDL_IREGL_IMML_65535, _AndL_iRegL_immL_65535_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_255) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_255];
        DFA_PRODUCTION(_ANDL_IREGL_IMML_255, _AndL_iRegL_immL_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_POSITIVE_BITMASKI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_POSITIVE_BITMASKI];
        DFA_PRODUCTION(_ANDL_IREGL_IMML_POSITIVE_BITMASKI, _AndL_iRegL_immL_positive_bitmaskI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_BITMASK];
        DFA_PRODUCTION(_ANDL_IREGL_IMML_BITMASK, _AndL_iRegL_immL_bitmask_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_BITMASK) &&
        (
#line 13003 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2_long(n->in(2)->get_long() + 1) + (n->in(1)->in(2)->get_int() & 63)) <= (63 + 1)
#line 3404 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_BITMASK] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, ubfxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, ubfxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, ubfxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, ubfxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, ubfxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, ubfxL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ROTATERIGHT_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__LSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__LSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__RSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__RSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__URSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__URSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL_IMML_M1]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL_IREGL_IMML_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, AndL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, AndL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, AndL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, AndL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, AndL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, AndL_reg_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L__LOADI_INDIRECT__) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L__LOADI_INDIRECT__]+_kids[1]->_cost[IMML_32BITS] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUI2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUI2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUI2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUI2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUI2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUI2L_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L__LOADI_MEMORY4__) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) &&
        (
#line 7523 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1)->in(1)->as_Load())
#line 3829 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L__LOADI_MEMORY4__]+_kids[1]->_cost[IMML_32BITS]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUI2L_rule, c)
      }
    }
}
void  State::_sub_Op_AryEq(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGP_R2) &&
        (
#line 16982 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU
#line 3857 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGP_R2] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, array_equalsC_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGP_R2) &&
        (
#line 16961 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL
#line 3866 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGP_R2] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, array_equalsB_rule, c)
      }
    }
}
void  State::_sub_Op_Binary(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY_VREG_PREGGOV];
        DFA_PRODUCTION(_BINARY_VREG__BINARY_VREG_PREGGOV, _Binary_vReg__Binary_vReg_pRegGov_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREGD];
        DFA_PRODUCTION(_BINARY_VREG_VREGD, _Binary_vReg_vRegD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_BINARY_VREG_IREGL, _Binary_vReg_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_BINARY_VREG_VREGF, _Binary_vReg_vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_BINARY_VREG_IREGIORL2I, _Binary_vReg_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_BINARY_VREG__LSHIFTCNTV_IMMI_, _Binary_vReg__LShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_BINARY_VREG__RSHIFTCNTV_IMMI_, _Binary_vReg__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY_VREGD_VREG, _Binary_vRegD_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY_VREGF_VREG, _Binary_vRegF_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY_IREGL_VREG, _Binary_iRegL_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY_IREGIORL2I_VREG, _Binary_iRegIorL2I_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) && STATE__VALID_CHILD(_kids[1], PREGGOV) ) {
      unsigned int c = _kids[0]->_cost[IMMI]+_kids[1]->_cost[PREGGOV];
        DFA_PRODUCTION(_BINARY_IMMI_PREGGOV, _Binary_immI_pRegGov_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _NEGVD_VREG_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_NEGVD_VREG_];
        DFA_PRODUCTION(_BINARY_VREG__NEGVD_VREG_, _Binary_vReg__NegVD_vReg__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVD_VREG_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_NEGVD_VREG_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY__NEGVD_VREG__VREG, _Binary__NegVD_vReg__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _NEGVF_VREG_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_NEGVF_VREG_];
        DFA_PRODUCTION(_BINARY_VREG__NEGVF_VREG_, _Binary_vReg__NegVF_vReg__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VREG_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VREG_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY__NEGVF_VREG__VREG, _Binary__NegVF_vReg__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_BINARY_VREG_VREG, _Binary_vReg_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV];
        DFA_PRODUCTION(_BINARY_VREG_PREGGOV, _Binary_vReg_pRegGov_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _NEGVD_VECX_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_NEGVD_VECX_];
        DFA_PRODUCTION(_BINARY_VECX__NEGVD_VECX_, _Binary_vecX__NegVD_vecX__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVD_VECX_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_NEGVD_VECX_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_BINARY__NEGVD_VECX__VECX, _Binary__NegVD_vecX__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _NEGVF_VECX_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_NEGVF_VECX_];
        DFA_PRODUCTION(_BINARY_VECX__NEGVF_VECX_, _Binary_vecX__NegVF_vecX__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VECX_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VECX_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_BINARY__NEGVF_VECX__VECX, _Binary__NegVF_vecX__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _NEGVF_VECD_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_NEGVF_VECD_];
        DFA_PRODUCTION(_BINARY_VECD__NEGVF_VECD_, _Binary_vecD__NegVF_vecD__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VECD_) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VECD_]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_BINARY__NEGVF_VECD__VECD, _Binary__NegVF_vecD__vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_BINARY_VECX_VECX, _Binary_vecX_vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_BINARY_VECD_VECD, _Binary_vecD_vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VREGD];
        DFA_PRODUCTION(_BINARY_VECX_VREGD, _Binary_vecX_vRegD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_BINARY_VECX_VREGF, _Binary_vecX_vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_BINARY_VECD_VREGF, _Binary_vecD_vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_BINARY_VECX_IREGL, _Binary_vecX_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_BINARY_VECX_IREGIORL2I, _Binary_vecX_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_BINARY_VECD_IREGIORL2I, _Binary_vecD_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGI_R3) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGI_R3];
        DFA_PRODUCTION(_BINARY_IREGP_R1_IREGI_R3, _Binary_iRegP_R1_iRegI_R3_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGP_R3) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGP_R3];
        DFA_PRODUCTION(_BINARY_IREGP_R1_IREGP_R3, _Binary_iRegP_R1_iRegP_R3_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R3) && STATE__VALID_CHILD(_kids[1], IMMI_1) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R3]+_kids[1]->_cost[IMMI_1];
        DFA_PRODUCTION(_BINARY_IREGP_R3_IMMI_1, _Binary_iRegP_R3_immI_1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R3) && STATE__VALID_CHILD(_kids[1], IMMI_LE_4) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R3]+_kids[1]->_cost[IMMI_LE_4];
        DFA_PRODUCTION(_BINARY_IREGP_R3_IMMI_LE_4, _Binary_iRegP_R3_immI_le_4_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R3) && STATE__VALID_CHILD(_kids[1], IREGI_R2) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R3]+_kids[1]->_cost[IREGI_R2];
        DFA_PRODUCTION(_BINARY_IREGP_R3_IREGI_R2, _Binary_iRegP_R3_iRegI_R2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGI_R4) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGI_R4];
        DFA_PRODUCTION(_BINARY_IREGP_R1_IREGI_R4, _Binary_iRegP_R1_iRegI_R4_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R3) && STATE__VALID_CHILD(_kids[1], IREGI_R4) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R3]+_kids[1]->_cost[IREGI_R4];
        DFA_PRODUCTION(_BINARY_IREGP_R3_IREGI_R4, _Binary_iRegP_R3_iRegI_R4_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGI_R2) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGI_R2];
        DFA_PRODUCTION(_BINARY_IREGP_R1_IREGI_R2, _Binary_iRegP_R1_iRegI_R2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _NEGD_VREGD_) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_NEGD_VREGD_];
        DFA_PRODUCTION(_BINARY_VREGD__NEGD_VREGD_, _Binary_vRegD__NegD_vRegD__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGD_VREGD_) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[_NEGD_VREGD_]+_kids[1]->_cost[VREGD];
        DFA_PRODUCTION(_BINARY__NEGD_VREGD__VREGD, _Binary__NegD_vRegD__vRegD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], _NEGF_VREGF_) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[_NEGF_VREGF_];
        DFA_PRODUCTION(_BINARY_VREGF__NEGF_VREGF_, _Binary_vRegF__NegF_vRegF__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGF_VREGF_) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[_NEGF_VREGF_]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_BINARY__NEGF_VREGF__VREGF, _Binary__NegF_vRegF__vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD];
        DFA_PRODUCTION(_BINARY_VREGD_VREGD, _Binary_vRegD_vRegD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_BINARY_VREGF_VREGF, _Binary_vRegF_vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMN0) && STATE__VALID_CHILD(_kids[1], IREGN) ) {
      unsigned int c = _kids[0]->_cost[IMMN0]+_kids[1]->_cost[IREGN];
        DFA_PRODUCTION(_BINARY_IMMN0_IREGN, _Binary_immN0_iRegN_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) && STATE__VALID_CHILD(_kids[1], IMMN0) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+_kids[1]->_cost[IMMN0];
        DFA_PRODUCTION(_BINARY_IREGN_IMMN0, _Binary_iRegN_immN0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMP0) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IMMP0]+_kids[1]->_cost[IREGP];
        DFA_PRODUCTION(_BINARY_IMMP0_IREGP, _Binary_immP0_iRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMP0];
        DFA_PRODUCTION(_BINARY_IREGP_IMMP0, _Binary_iRegP_immP0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_BINARY_IMML0_IREGL, _Binary_immL0_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML0];
        DFA_PRODUCTION(_BINARY_IREGL_IMML0, _Binary_iRegL_immL0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_1) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IMMI_1]+_kids[1]->_cost[IMMI0];
        DFA_PRODUCTION(_BINARY_IMMI_1_IMMI0, _Binary_immI_1_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI0];
        DFA_PRODUCTION(_BINARY_IREGIORL2I_IMMI0, _Binary_iRegIorL2I_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_BINARY_IMMI0_IREGIORL2I, _Binary_immI0_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU];
        DFA_PRODUCTION(_BINARY_CMPOPU_RFLAGSREGU, _Binary_cmpOpU_rFlagsRegU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_BINARY_IREGIORL2I_IREGIORL2I, _Binary_iRegIorL2I_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG];
        DFA_PRODUCTION(_BINARY_CMPOP_RFLAGSREG, _Binary_cmpOp_rFlagsReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) && STATE__VALID_CHILD(_kids[1], IREGN) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+_kids[1]->_cost[IREGN];
        DFA_PRODUCTION(_BINARY_IREGN_IREGN, _Binary_iRegN_iRegN_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_BINARY_IREGL_IREGL, _Binary_iRegL_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI];
        DFA_PRODUCTION(_BINARY_IREGI_IREGI, _Binary_iRegI_iRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGNNOSP) && STATE__VALID_CHILD(_kids[1], IREGNNOSP) ) {
      unsigned int c = _kids[0]->_cost[IREGNNOSP]+_kids[1]->_cost[IREGNNOSP];
        DFA_PRODUCTION(_BINARY_IREGNNOSP_IREGNNOSP, _Binary_iRegNNoSp_iRegNNoSp_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGINOSP) && STATE__VALID_CHILD(_kids[1], IREGINOSP) ) {
      unsigned int c = _kids[0]->_cost[IREGINOSP]+_kids[1]->_cost[IREGINOSP];
        DFA_PRODUCTION(_BINARY_IREGINOSP_IREGINOSP, _Binary_iRegINoSp_iRegINoSp_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGLNOSP) && STATE__VALID_CHILD(_kids[1], IREGLNOSP) ) {
      unsigned int c = _kids[0]->_cost[IREGLNOSP]+_kids[1]->_cost[IREGLNOSP];
        DFA_PRODUCTION(_BINARY_IREGLNOSP_IREGLNOSP, _Binary_iRegLNoSp_iRegLNoSp_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGP];
        DFA_PRODUCTION(_BINARY_IREGP_IREGP, _Binary_iRegP_iRegP_rule, c)
    }
}
void  State::_sub_Op_Bool(const Node *n){
    if(         
#line 6333 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_Bool()->_test._test == BoolTest::eq
            || n->as_Bool()->_test._test == BoolTest::ne
            || n->as_Bool()->_test._test == BoolTest::lt
            || n->as_Bool()->_test._test == BoolTest::ge
#line 4143 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(CMPOPUEQNELTGE, cmpOpUEqNeLtGe_rule, c)
    }
    if(         
#line 6309 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_Bool()->_test._test == BoolTest::lt
            || n->as_Bool()->_test._test == BoolTest::ge
#line 4152 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(CMPOPLTGE, cmpOpLtGe_rule, c)
    }
    if(         
#line 6285 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_Bool()->_test._test == BoolTest::ne
            || n->as_Bool()->_test._test == BoolTest::eq
#line 4161 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(CMPOPEQNE, cmpOpEqNe_rule, c)
    }
    {
      unsigned int c = 1;
        DFA_PRODUCTION(CMPOPU, cmpOpU_rule, c)
    }
    {
      unsigned int c = 1;
        DFA_PRODUCTION(CMPOP, cmpOp_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, bytes_reverse_int_rule, c)
        DFA_PRODUCTION(IREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, bytes_reverse_int_rule, c)
        DFA_PRODUCTION(IREGI_R2, bytes_reverse_int_rule, c)
        DFA_PRODUCTION(IREGI_R3, bytes_reverse_int_rule, c)
        DFA_PRODUCTION(IREGI_R4, bytes_reverse_int_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, bytes_reverse_long_rule, c)
        DFA_PRODUCTION(IREGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION(IREGL_R0, bytes_reverse_long_rule, c)
        DFA_PRODUCTION(IREGL_R2, bytes_reverse_long_rule, c)
        DFA_PRODUCTION(IREGL_R3, bytes_reverse_long_rule, c)
        DFA_PRODUCTION(IREGL_R11, bytes_reverse_long_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION(IREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION(IREGI_R2, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION(IREGI_R3, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION(IREGI_R4, bytes_reverse_unsigned_short_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, bytes_reverse_short_rule, c)
        DFA_PRODUCTION(IREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, bytes_reverse_short_rule, c)
        DFA_PRODUCTION(IREGI_R2, bytes_reverse_short_rule, c)
        DFA_PRODUCTION(IREGI_R3, bytes_reverse_short_rule, c)
        DFA_PRODUCTION(IREGI_R4, bytes_reverse_short_rule, c)
    }
}
void  State::_sub_Op_CacheWB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) &&
        (
#line 8401 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
VM_Version::supports_data_cache_line_flush()
#line 4227 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+100;
        DFA_PRODUCTION(UNIVERSE, cacheWB_rule, c)
    }
}
void  State::_sub_Op_CacheWBPreSync(const Node *n){
    if(         (
#line 8416 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
VM_Version::supports_data_cache_line_flush()
#line 4237 "dfa_aarch64.cpp"
) ) {
      unsigned int c = 100;
        DFA_PRODUCTION(UNIVERSE, cacheWBPreSync_rule, c)
    }
}
void  State::_sub_Op_CacheWBPostSync(const Node *n){
    if(         (
#line 8429 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
VM_Version::supports_data_cache_line_flush()
#line 4247 "dfa_aarch64.cpp"
) ) {
      unsigned int c = 100;
        DFA_PRODUCTION(UNIVERSE, cacheWBPostSync_rule, c)
    }
}
void  State::_sub_Op_CallDynamicJava(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallDynamicJavaDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeaf(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallLeafDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeafNoFP(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallLeafNoFPDirect_rule, c)
    }
}
void  State::_sub_Op_CallRuntime(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallRuntimeDirect_rule, c)
    }
}
void  State::_sub_Op_CallNative(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallNativeDirect_rule, c)
    }
}
void  State::_sub_Op_CallStaticJava(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, CallStaticJavaDirect_rule, c)
    }
}
void  State::_sub_Op_CastDD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD];
        DFA_PRODUCTION(VREGD, castDD_rule, c)
    }
}
void  State::_sub_Op_CastFF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF];
        DFA_PRODUCTION(VREGF, castFF_rule, c)
    }
}
void  State::_sub_Op_CastII(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI];
        DFA_PRODUCTION(IREGI, castII_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
    }
}
void  State::_sub_Op_CastLL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL];
        DFA_PRODUCTION(IREGL, castLL_rule, c)
    }
}
void  State::_sub_Op_CastVV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV];
        DFA_PRODUCTION(PREGGOV, castVVMask_rule, c)
        DFA_PRODUCTION(PREG, castVVMask_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG];
        DFA_PRODUCTION(VREG, castVV_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX];
        DFA_PRODUCTION(VECX, castVVX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD];
        DFA_PRODUCTION(VECD, castVVD_rule, c)
    }
}
void  State::_sub_Op_CastX2P(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(IREGPNOSP, castX2P_rule, c)
        DFA_PRODUCTION(IREGP, castX2P_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, castX2P_rule, c)
        DFA_PRODUCTION(THREAD_REGP, castX2P_rule, c)
        DFA_PRODUCTION(LR_REGP, castX2P_rule, c)
        DFA_PRODUCTION(INDIRECT, castX2P_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R1, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R2, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R3, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R4, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R5, castX2P_rule, c)
        DFA_PRODUCTION(IREGP_R10, castX2P_rule, c)
    }
}
void  State::_sub_Op_CastP2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_];
        DFA_PRODUCTION(_CASTP2X__DECODEN_IREGN__, _CastP2X__DecodeN_iRegN___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP];
        DFA_PRODUCTION(_CASTP2X_IREGP_, _CastP2X_iRegP__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, castP2X_rule, c)
        DFA_PRODUCTION(IREGL, castP2X_rule, c)
        DFA_PRODUCTION(IREGL_R0, castP2X_rule, c)
        DFA_PRODUCTION(IREGL_R2, castP2X_rule, c)
        DFA_PRODUCTION(IREGL_R3, castP2X_rule, c)
        DFA_PRODUCTION(IREGL_R11, castP2X_rule, c)
    }
}
void  State::_sub_Op_CastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGPNOSP) ) {
      unsigned int c = _kids[0]->_cost[IREGPNOSP] + INSN_COST;
        DFA_PRODUCTION(IREGPNOSP, castPP_rule, c)
        DFA_PRODUCTION(IREGP, castPP_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, castPP_rule, c)
        DFA_PRODUCTION(THREAD_REGP, castPP_rule, c)
        DFA_PRODUCTION(LR_REGP, castPP_rule, c)
        DFA_PRODUCTION(INDIRECT, castPP_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R1, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R2, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R3, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R4, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R5, castPP_rule, c)
        DFA_PRODUCTION(IREGP_R10, castPP_rule, c)
    }
}
void  State::_sub_Op_CheckCastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGPNOSP) ) {
      unsigned int c = _kids[0]->_cost[IREGPNOSP] + INSN_COST;
        DFA_PRODUCTION(IREGPNOSP, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP, checkCastPP_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION(THREAD_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION(LR_REGP, checkCastPP_rule, c)
        DFA_PRODUCTION(INDIRECT, checkCastPP_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R1, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R2, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R3, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R4, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R5, checkCastPP_rule, c)
        DFA_PRODUCTION(IREGP_R10, checkCastPP_rule, c)
    }
}
void  State::_sub_Op_ClearArray(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML) && STATE__VALID_CHILD(_kids[1], IREGP_R10) &&
        (
#line 15196 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(uint64_t)n->in(2)->get_long()
            < (uint64_t)(BlockZeroingLowLimit >> LogBytesPerWord)
#line 4442 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML]+_kids[1]->_cost[IREGP_R10]+4 * INSN_COST;
        DFA_PRODUCTION(UNIVERSE, clearArray_imm_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL_R11) && STATE__VALID_CHILD(_kids[1], IREGP_R10) ) {
      unsigned int c = _kids[0]->_cost[IREGL_R11]+_kids[1]->_cost[IREGP_R10]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, clearArray_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_VREGD_VREGD]+INSN_COST * 3;
        DFA_PRODUCTION(VREGD, cmovUD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_VREGD_VREGD]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, cmovD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF_VREGF) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_VREGF_VREGF]+INSN_COST * 3;
        DFA_PRODUCTION(VREGF, cmovUF_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF_VREGF) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_VREGF_VREGF]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, cmovF_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMI_1_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IMMI_1_IMMI0]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, cmovUI_reg_zero_one_rule, c)
        DFA_PRODUCTION(IREGI, cmovUI_reg_zero_one_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, cmovUI_reg_zero_one_rule, c)
        DFA_PRODUCTION(IREGI_R2, cmovUI_reg_zero_one_rule, c)
        DFA_PRODUCTION(IREGI_R3, cmovUI_reg_zero_one_rule, c)
        DFA_PRODUCTION(IREGI_R4, cmovUI_reg_zero_one_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMI_1_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IMMI_1_IMMI0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovI_reg_zero_one_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovI_reg_zero_one_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovI_reg_zero_one_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovI_reg_zero_one_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovI_reg_zero_one_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovI_reg_zero_one_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGIORL2I_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGIORL2I_IMMI0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovUI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovUI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovUI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovUI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovUI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovUI_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGIORL2I_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGIORL2I_IMMI0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovI_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovI_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMI0_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IMMI0_IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovUI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovUI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovUI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovUI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovUI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovUI_zero_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMI0_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IMMI0_IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovI_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovI_zero_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGIORL2I_IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovUI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovUI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovUI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovUI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovUI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovUI_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGIORL2I_IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmovI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmovI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmovI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmovI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmovI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmovI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IMML0_IREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IMML0_IREGL]+INSN_COST * 2;
        DFA_PRODUCTION(IREGLNOSP, cmovUL_zero_reg_rule, c)
        DFA_PRODUCTION(IREGL, cmovUL_zero_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, cmovUL_zero_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, cmovUL_zero_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, cmovUL_zero_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, cmovUL_zero_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMML0_IREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IMML0_IREGL]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, cmovL_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, cmovL_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, cmovL_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, cmovL_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, cmovL_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, cmovL_zero_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IMML0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGL_IMML0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, cmovUL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, cmovUL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, cmovUL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, cmovUL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, cmovUL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, cmovUL_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IMML0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGL_IMML0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, cmovL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, cmovL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, cmovL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, cmovL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, cmovL_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, cmovL_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGL_IREGL]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, cmovUL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, cmovUL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, cmovUL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, cmovUL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, cmovUL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, cmovUL_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGL_IREGL]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, cmovL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, cmovL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, cmovL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, cmovL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, cmovL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, cmovL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMP0_IREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IMMP0_IREGP]+INSN_COST * 2;
        DFA_PRODUCTION(IREGPNOSP, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(THREAD_REGP, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(LR_REGP, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(INDIRECT, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R1, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R2, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R3, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R4, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R5, cmovUP_zero_reg_rule, c)
        DFA_PRODUCTION(IREGP_R10, cmovUP_zero_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMP0_IREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IMMP0_IREGP]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, cmovP_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, cmovP_zero_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGP_IMMP0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, cmovUP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, cmovUP_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGP_IMMP0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, cmovP_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, cmovP_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, cmovUP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, cmovUP_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, cmovP_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, cmovP_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMN0_IREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IMMN0_IREGN]+INSN_COST * 2;
        DFA_PRODUCTION(IREGNNOSP, cmovUN_zero_reg_rule, c)
        DFA_PRODUCTION(IREGN, cmovUN_zero_reg_rule, c)
        DFA_PRODUCTION(IREGN_R0, cmovUN_zero_reg_rule, c)
        DFA_PRODUCTION(IREGN_R2, cmovUN_zero_reg_rule, c)
        DFA_PRODUCTION(IREGN_R3, cmovUN_zero_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMN0_IREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IMMN0_IREGN]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, cmovN_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, cmovN_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, cmovN_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, cmovN_zero_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, cmovN_zero_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IMMN0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGN_IMMN0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, cmovUN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, cmovUN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, cmovUN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, cmovUN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, cmovUN_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IMMN0) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGN_IMMN0]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, cmovN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, cmovN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, cmovN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, cmovN_reg_zero_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, cmovN_reg_zero_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_RFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_RFLAGSREGU]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, cmovUN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, cmovUN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, cmovUN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, cmovUN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, cmovUN_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_RFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_RFLAGSREG]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, cmovN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, cmovN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, cmovN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, cmovN_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, cmovN_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGN) && STATE__VALID_CHILD(_kids[1], IMMN0) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+_kids[1]->_cost[IMMN0];
        DFA_PRODUCTION(_CMPN_IREGN_IMMN0, _CmpN_iRegN_immN0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) && STATE__VALID_CHILD(_kids[1], IMMN0) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+_kids[1]->_cost[IMMN0] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREGU, testN_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) && STATE__VALID_CHILD(_kids[1], IREGN) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+_kids[1]->_cost[IREGN] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compN_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], IMMD0) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[IMMD0]+3 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, compD_reg_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+3 * INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compD_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], IMMD0) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[IMMD0]+5 * INSN_COST;
        DFA_PRODUCTION(IREGINOSP, compD3_reg_immD0_rule, c)
        DFA_PRODUCTION(IREGI, compD3_reg_immD0_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compD3_reg_immD0_rule, c)
        DFA_PRODUCTION(IREGI_R2, compD3_reg_immD0_rule, c)
        DFA_PRODUCTION(IREGI_R3, compD3_reg_immD0_rule, c)
        DFA_PRODUCTION(IREGI_R4, compD3_reg_immD0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+5 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compD3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compD3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compD3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compD3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compD3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compD3_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], IMMF0) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[IMMF0]+3 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, compF_reg_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+3 * INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compF_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], IMMF0) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[IMMF0]+5 * INSN_COST;
        DFA_PRODUCTION(IREGINOSP, compF3_reg_immF0_rule, c)
        DFA_PRODUCTION(IREGI, compF3_reg_immF0_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compF3_reg_immF0_rule, c)
        DFA_PRODUCTION(IREGI_R2, compF3_reg_immF0_rule, c)
        DFA_PRODUCTION(IREGI_R3, compF3_reg_immF0_rule, c)
        DFA_PRODUCTION(IREGI_R4, compF3_reg_immF0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+5 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compF3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compF3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compF3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compF3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compF3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compF3_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IREGIORL2I]+_kids[1]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, cmpI_and_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 16322 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_logical_immediate
            (/*is_32*/true, n->in(1)->in(2)->get_int())
#line 5384 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, cmpI_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI0];
        DFA_PRODUCTION(_CMPI__ANDI_IREGIORL2I_IMMI_IMMI0, _CmpI__AndI_iRegIorL2I_immI_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI0];
        DFA_PRODUCTION(_CMPI_IREGIORL2I_IMMI0, _CmpI_iRegIorL2I_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compI_reg_immI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compI_reg_immIAddSub_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compI_reg_immI0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IREGL]+_kids[1]->_cost[IMML0] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, cmpL_and_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML) && STATE__VALID_CHILD(_kids[1], IMML0) &&
        (
#line 16309 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_logical_immediate
            (/*is_32*/false, n->in(1)->in(2)->get_long())
#line 5434 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML]+_kids[1]->_cost[IMML0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, cmpL_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML]+_kids[1]->_cost[IMML0];
        DFA_PRODUCTION(_CMPL__ANDL_IREGL_IMML_IMML0, _CmpL__AndL_iRegL_immL_immL0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML0];
        DFA_PRODUCTION(_CMPL_IREGL_IMML0, _CmpL_iRegL_immL0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compL_reg_immL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compL_reg_immLAddSub_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compL_reg_immL0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, compL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB]+INSN_COST * 6;
        DFA_PRODUCTION(IREGINOSP, cmpL3_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI, cmpL3_reg_imm_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, cmpL3_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R2, cmpL3_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R3, cmpL3_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R4, cmpL3_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 6;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmpL3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmpL3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmpL3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmpL3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmpL3_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmpL3_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpLTMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, cmpLTMask_reg_zero_rule, c)
        DFA_PRODUCTION(IREGI, cmpLTMask_reg_zero_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, cmpLTMask_reg_zero_rule, c)
        DFA_PRODUCTION(IREGI_R2, cmpLTMask_reg_zero_rule, c)
        DFA_PRODUCTION(IREGI_R3, cmpLTMask_reg_zero_rule, c)
        DFA_PRODUCTION(IREGI_R4, cmpLTMask_reg_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+3 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, cmpLTMask_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, cmpLTMask_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, cmpLTMask_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, cmpLTMask_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, cmpLTMask_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, cmpLTMask_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _PARTIALSUBTYPECHECK_IREGP_R4_IREGP_R0) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_PARTIALSUBTYPECHECK_IREGP_R4_IREGP_R0]+_kids[1]->_cost[IMMP0]+1100;
        DFA_PRODUCTION(RFLAGSREG, partialSubtypeCheckVsZero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _DECODEN_IREGN_) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_DECODEN_IREGN_]+_kids[1]->_cost[IMMP0];
        DFA_PRODUCTION(_CMPP__DECODEN_IREGN__IMMP0, _CmpP__DecodeN_iRegN__immP0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMP0];
        DFA_PRODUCTION(_CMPP_IREGP_IMMP0, _CmpP_iRegP_immP0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IMMP0] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREGU, testP_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGP] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compP_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpU(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI0];
        DFA_PRODUCTION(_CMPU_IREGIORL2I_IMMI0, _CmpU_iRegIorL2I_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
        DFA_PRODUCTION(RFLAGSREGU, compU_reg_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compU_reg_immIAddSub_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compU_reg_immI0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compU_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpUL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML0];
        DFA_PRODUCTION(_CMPUL_IREGL_IMML0, _CmpUL_iRegL_immL0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML]+INSN_COST * 2;
        DFA_PRODUCTION(RFLAGSREGU, compUL_reg_immL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compUL_reg_immLAddSub_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML0] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compUL_reg_immL0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREGU) || _cost[RFLAGSREGU] > c) {
        DFA_PRODUCTION(RFLAGSREGU, compUL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) &&
        (
#line 9277 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5631 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapBAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapB_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) &&
        (
#line 9296 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5672 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapSAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapS_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) &&
        (
#line 9315 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5713 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapIAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapI_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGLNOSP_IREGLNOSP) &&
        (
#line 9334 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5754 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGLNOSP_IREGLNOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapLAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGLNOSP_IREGLNOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGLNOSP_IREGLNOSP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapL_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong)
#line 5795 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, zCompareAndSwapPAcq_rule, c)
        DFA_PRODUCTION(IREGI, zCompareAndSwapPAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, zCompareAndSwapPAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, zCompareAndSwapPAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, zCompareAndSwapPAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, zCompareAndSwapPAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 95 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong
#line 5810 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, zCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, zCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, zCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, zCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, zCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, zCompareAndSwapP_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9353 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == 0)
#line 5839 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapPAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9239 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->barrier_data() == 0
#line 5868 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapP_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGNNOSP_IREGNNOSP) &&
        (
#line 9372 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5899 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGNNOSP_IREGNNOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapNAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGNNOSP_IREGNNOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGNNOSP_IREGNNOSP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapN_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9748 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5940 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapBAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapB_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9768 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 5981 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapSAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapS_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9788 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6022 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapIAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapI_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) &&
        (
#line 9808 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6063 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGL_IREGL] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapLAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapLAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGL_IREGL]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapL_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong)
#line 6104 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, zCompareAndSwapPAcq_0_rule, c)
        DFA_PRODUCTION(IREGI, zCompareAndSwapPAcq_0_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, zCompareAndSwapPAcq_0_rule, c)
        DFA_PRODUCTION(IREGI_R2, zCompareAndSwapPAcq_0_rule, c)
        DFA_PRODUCTION(IREGI_R3, zCompareAndSwapPAcq_0_rule, c)
        DFA_PRODUCTION(IREGI_R4, zCompareAndSwapPAcq_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 95 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong
#line 6119 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, zCompareAndSwapP_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, zCompareAndSwapP_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, zCompareAndSwapP_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, zCompareAndSwapP_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, zCompareAndSwapP_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, zCompareAndSwapP_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9848 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == 0)
#line 6148 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapPAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9728 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->barrier_data() == 0
#line 6177 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapP_rule, c)
      }
    }
}
void  State::_sub_Op_WeakCompareAndSwapN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) &&
        (
#line 9828 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6208 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapNAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapN_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9518 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6249 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeBAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndExchangeBAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeBAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeBAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndExchangeB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeB_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9537 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6290 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeSAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndExchangeSAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeSAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeSAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndExchangeS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeS_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) &&
        (
#line 9556 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6331 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeIAcq_rule, c)
        DFA_PRODUCTION(IREGI, compareAndExchangeIAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeIAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGI_IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGI_IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndExchangeI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndExchangeI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndExchangeI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndExchangeI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndExchangeI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndExchangeI_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) &&
        (
#line 9574 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6372 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGL_IREGL] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGLNOSP, compareAndExchangeLAcq_rule, c)
        DFA_PRODUCTION(IREGL, compareAndExchangeLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R0, compareAndExchangeLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R2, compareAndExchangeLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R3, compareAndExchangeLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R11, compareAndExchangeLAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGL_IREGL]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, compareAndExchangeL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, compareAndExchangeL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, compareAndExchangeL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, compareAndExchangeL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, compareAndExchangeL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, compareAndExchangeL_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 186 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong
#line 6409 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGPNOSP, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(THREAD_REGP, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(LR_REGP, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(INDIRECT, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R1, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R2, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R3, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R4, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R5, zCompareAndExchangePAcq_rule, c)
        DFA_PRODUCTION(IREGP_R10, zCompareAndExchangePAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 158 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong
#line 6440 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, zCompareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, zCompareAndExchangeP_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9610 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == 0)
#line 6517 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, compareAndExchangePAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, compareAndExchangePAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 9500 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->barrier_data() == 0
#line 6594 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, compareAndExchangeP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, compareAndExchangeP_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndExchangeN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) &&
        (
#line 9592 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6673 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGNNOSP, compareAndExchangeNAcq_rule, c)
        DFA_PRODUCTION(IREGN, compareAndExchangeNAcq_rule, c)
        DFA_PRODUCTION(IREGN_R0, compareAndExchangeNAcq_rule, c)
        DFA_PRODUCTION(IREGN_R2, compareAndExchangeNAcq_rule, c)
        DFA_PRODUCTION(IREGN_R3, compareAndExchangeNAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, compareAndExchangeN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, compareAndExchangeN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, compareAndExchangeN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, compareAndExchangeN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, compareAndExchangeN_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndAddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) &&
        (
#line 10116 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used() && needs_acquiring_load_exclusive(n)
#line 6706 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMIADDSUB] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, get_and_addIi_no_resAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) &&
        (
#line 10105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6715 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMIADDSUB]+VOLATILE_REF_COST + 1;
        DFA_PRODUCTION(IREGINOSP, get_and_addIiAcq_rule, c)
        DFA_PRODUCTION(IREGI, get_and_addIiAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, get_and_addIiAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, get_and_addIiAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, get_and_addIiAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, get_and_addIiAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 10094 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used() && needs_acquiring_load_exclusive(n)
#line 6730 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addI_no_resAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 10083 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6741 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I]+VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, get_and_addIAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, get_and_addIAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, get_and_addIAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, get_and_addIAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, get_and_addIAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, get_and_addIAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) &&
        (
#line 10028 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used()
#line 6770 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMIADDSUB]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addIi_no_res_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMIADDSUB]+2 * VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, get_and_addIi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, get_and_addIi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, get_and_addIi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, get_and_addIi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, get_and_addIi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, get_and_addIi_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 10007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used()
#line 6805 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addI_no_res_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I]+2 * VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, get_and_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, get_and_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, get_and_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, get_and_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, get_and_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, get_and_addI_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndAddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) &&
        (
#line 10072 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used() && needs_acquiring_load_exclusive(n)
#line 6842 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMLADDSUB] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, get_and_addLi_no_resAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) &&
        (
#line 10061 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6851 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMLADDSUB]+VOLATILE_REF_COST + 1;
        DFA_PRODUCTION(IREGLNOSP, get_and_addLiAcq_rule, c)
        DFA_PRODUCTION(IREGL, get_and_addLiAcq_rule, c)
        DFA_PRODUCTION(IREGL_R0, get_and_addLiAcq_rule, c)
        DFA_PRODUCTION(IREGL_R2, get_and_addLiAcq_rule, c)
        DFA_PRODUCTION(IREGL_R3, get_and_addLiAcq_rule, c)
        DFA_PRODUCTION(IREGL_R11, get_and_addLiAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        (
#line 10050 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used() && needs_acquiring_load_exclusive(n)
#line 6865 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addL_no_resAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        (
#line 10039 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6876 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL]+VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, get_and_addLAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, get_and_addLAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, get_and_addLAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, get_and_addLAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, get_and_addLAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, get_and_addLAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) &&
        (
#line 9986 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used()
#line 6902 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMLADDSUB]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addLi_no_res_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IMMLADDSUB]+2 * VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, get_and_addLi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, get_and_addLi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, get_and_addLi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, get_and_addLi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, get_and_addLi_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, get_and_addLi_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        (
#line 9965 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->result_not_used()
#line 6934 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, get_and_addL_no_res_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL]+2 * VOLATILE_REF_COST + 1;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, get_and_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, get_and_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, get_and_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, get_and_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, get_and_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, get_and_addL_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndSetI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGI) &&
        (
#line 9910 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 6968 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGI] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, get_and_setIAcq_rule, c)
        DFA_PRODUCTION(IREGI, get_and_setIAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, get_and_setIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, get_and_setIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, get_and_setIAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, get_and_setIAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGI]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, get_and_setI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, get_and_setI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, get_and_setI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, get_and_setI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, get_and_setI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, get_and_setI_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndSetL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        (
#line 9921 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 7009 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGLNOSP, get_and_setLAcq_rule, c)
        DFA_PRODUCTION(IREGL, get_and_setLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R0, get_and_setLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R2, get_and_setLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R3, get_and_setLAcq_rule, c)
        DFA_PRODUCTION(IREGL_R11, get_and_setLAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, get_and_setL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, get_and_setL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, get_and_setL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, get_and_setL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, get_and_setL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, get_and_setL_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndSetP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGP) &&
        (
#line 231 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() != 0)
#line 7046 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGPNOSP, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(THREAD_REGP, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(LR_REGP, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(INDIRECT, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R1, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R2, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R3, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R4, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R5, zGetAndSetPAcq_rule, c)
        DFA_PRODUCTION(IREGP_R10, zGetAndSetPAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGP) &&
        (
#line 214 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() != 0
#line 7077 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, zGetAndSetP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, zGetAndSetP_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGP) &&
        (
#line 9943 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == 0)
#line 7154 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGP] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, get_and_setPAcq_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, get_and_setPAcq_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGP) &&
        (
#line 9899 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_LoadStore()->barrier_data() == 0
#line 7231 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, get_and_setP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, get_and_setP_rule, c)
      }
    }
}
void  State::_sub_Op_GetAndSetN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGN) &&
        (
#line 9932 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 7310 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, get_and_setNAcq_rule, c)
        DFA_PRODUCTION(IREGI, get_and_setNAcq_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, get_and_setNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R2, get_and_setNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R3, get_and_setNAcq_rule, c)
        DFA_PRODUCTION(IREGI_R4, get_and_setNAcq_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, get_and_setN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, get_and_setN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, get_and_setN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, get_and_setN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, get_and_setN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, get_and_setN_rule, c)
      }
    }
}
void  State::_sub_Op_ConN(const Node *n){
    if(         
#line 4991 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->get_narrowcon() == 0
#line 7350 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMN0, immN0_rule, c)
        DFA_PRODUCTION(IREGNNOSP, loadConN0_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN, loadConN0_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R0, loadConN0_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R2, loadConN0_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R3, loadConN0_rule, c+INSN_COST)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMN, immN_rule, c)
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGNNOSP, loadConN_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGN, loadConN_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGN_R0, loadConN_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGN_R2, loadConN_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGN_R3, loadConN_rule, c+INSN_COST * 4)
      }
    }
   if ( /* IREGNNOSP KNOWN_VALID || */ _cost[IREGNNOSP] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGNNOSP, loadConN_rule, INSN_COST * 4)
   }
   if ( /* IREGN KNOWN_VALID || */ _cost[IREGN] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGN, loadConN_rule, INSN_COST * 4)
   }
   if ( /* IREGN_R0 KNOWN_VALID || */ _cost[IREGN_R0] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGN_R0, loadConN_rule, INSN_COST * 4)
   }
   if ( /* IREGN_R2 KNOWN_VALID || */ _cost[IREGN_R2] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGN_R2, loadConN_rule, INSN_COST * 4)
   }
   if ( /* IREGN_R3 KNOWN_VALID || */ _cost[IREGN_R3] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGN_R3, loadConN_rule, INSN_COST * 4)
   }
}
void  State::_sub_Op_ConNKlass(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMNKLASS, immNKlass_rule, c)
        DFA_PRODUCTION(IREGNNOSP, loadConNKlass_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN, loadConNKlass_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R0, loadConNKlass_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R2, loadConNKlass_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGN_R3, loadConNKlass_rule, c+INSN_COST)
    }
}
void  State::_sub_Op_ConD(const Node *n){
    if(         
#line 4940 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_float_immediate(n->getd())
#line 7410 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMDPACKED, immDPacked_rule, c)
        DFA_PRODUCTION(VREGD, loadConD_packed_rule, c+INSN_COST)
    }
    if(         
#line 4929 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
jlong_cast(n->getd()) == 0
#line 7419 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMD0, immD0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMD, immD_rule, c)
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c+INSN_COST * 5) {
        DFA_PRODUCTION(VREGD, loadConD_rule, c+INSN_COST * 5)
      }
    }
   if ( /* VREGD KNOWN_VALID || */ _cost[VREGD] > INSN_COST * 5) {
     DFA_PRODUCTION(VREGD, loadConD_rule, INSN_COST * 5)
   }
}
void  State::_sub_Op_ConF(const Node *n){
    if(         
#line 4970 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_float_immediate((double)n->getf())
#line 7439 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMFPACKED, immFPacked_rule, c)
        DFA_PRODUCTION(VREGF, loadConF_packed_rule, c+INSN_COST * 4)
    }
    if(         
#line 4959 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
jint_cast(n->getf()) == 0
#line 7448 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMF0, immF0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMF, immF_rule, c)
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VREGF, loadConF_rule, c+INSN_COST * 4)
      }
    }
   if ( /* VREGF KNOWN_VALID || */ _cost[VREGF] > INSN_COST * 4) {
     DFA_PRODUCTION(VREGF, loadConF_rule, INSN_COST * 4)
   }
}
void  State::_sub_Op_ConI(const Node *n){
    int _n_get_int__ = n->get_int();
    if(         
#line 36 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
Address::offset_ok_for_sve_immed(_n_get_int__, 4,
            Matcher::scalable_vector_reg_size(T_BYTE))
#line 7470 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(VMEMA_IMMIOFFSET4, vmemA_immIOffset4_rule, c)
    }
    if(         
#line 4739 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_logical_immediate(/*is32*/true, (uint64_t)n->get_int())
#line 7478 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMILOG, immILog_rule, c)
    }
    if(         
#line 4729 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_sve_logical_immediate(BitsPerShort, (uint64_t)n->get_int())
#line 7486 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMSLOG, immSLog_rule, c)
    }
    if(         
#line 4719 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_sve_logical_immediate(BitsPerByte, (uint64_t)n->get_int())
#line 7494 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMBLOG, immBLog_rule, c)
    }
    if(         
#line 4707 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_sve_add_sub_immediate((int64_t)n->get_int())
#line 7502 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIADDSUBV, immIAddSubV_rule, c)
    }
    if(         
#line 4697 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_add_sub_immediate((int64_t)n->get_int())
#line 7510 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIADDSUB, immIAddSub_rule, c)
    }
    if(         
#line 4686 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ <= 255 && _n_get_int__ >= -255
#line 7518 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMBADDSUBV, immBAddSubV_rule, c)
    }
    if(         
#line 4662 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(_n_get_int__ <= 127 && _n_get_int__ >= -128) ||
            (_n_get_int__ <= 32512 && _n_get_int__ >= -32768 && (_n_get_int__ & 0xff) == 0)
#line 7527 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI8_SHIFT8, immI8_shift8_rule, c)
    }
    if(         
#line 4651 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ <= 127 && _n_get_int__ >= -128
#line 7535 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI8, immI8_rule, c)
    }
    if(         
#line 4580 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 4)
#line 7543 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET16, immIOffset16_rule, c)
    }
    if(         
#line 4570 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 3)
#line 7551 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET8, immIOffset8_rule, c)
    }
    if(         
#line 4560 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 2)
#line 7559 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET4, immIOffset4_rule, c)
    }
    if(         
#line 4550 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 1)
#line 7567 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET2, immIOffset2_rule, c)
    }
    if(         
#line 4540 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 0)
#line 7575 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET1, immIOffset1_rule, c)
    }
    if(         
#line 4530 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_int__, 0)
#line 7583 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIOFFSET, immIOffset_rule, c)
    }
    if(         
#line 4509 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(0 <= _n_get_int__) && (_n_get_int__ < (1 << 12))
#line 7591 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIU12, immIU12_rule, c)
    }
    if(         
#line 4498 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((-(1 << 18)) <= _n_get_int__) && (_n_get_int__ < (1 << 18))
#line 7599 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI19, immI19_rule, c)
    }
    if(         
#line 4487 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((-(1 << 25)) <= _n_get_int__) && (_n_get_int__ < (1 << 25))
#line 7607 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI26, immI26_rule, c)
    }
    if(         
#line 4476 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 <= _n_get_int__ && (_n_get_int__ <= 3)
#line 7615 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMISCALE, immIScale_rule, c)
    }
    if(         
#line 4451 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(_n_get_int__ != 0)
            && ((_n_get_int__ & 0xc0000000) == 0)
            && is_power_of_2(_n_get_int__ + 1)
#line 7625 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_BITMASK, immI_bitmask_rule, c)
    }
    if(         
#line 4399 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 65535
#line 7633 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_65535, immI_65535_rule, c)
    }
    if(         
#line 4389 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 255
#line 7641 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_255, immI_255_rule, c)
    }
    if(         
#line 4379 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 64
#line 7649 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_64, immI_64_rule, c)
    }
    if(         
#line 4369 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 63
#line 7657 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_63, immI_63_rule, c)
    }
    if(         
#line 4359 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 56
#line 7665 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_56, immI_56_rule, c)
    }
    if(         
#line 4349 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 48
#line 7673 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_48, immI_48_rule, c)
    }
    if(         
#line 4339 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 32
#line 7681 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_32, immI_32_rule, c)
    }
    if(         
#line 4329 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 24
#line 7689 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_24, immI_24_rule, c)
    }
    if(         
#line 4319 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 16
#line 7697 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_16, immI_16_rule, c)
    }
    if(         
#line 4309 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 8
#line 7705 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_8, immI_8_rule, c)
    }
    if(         
#line 4299 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 4
#line 7713 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_4, immI_4_rule, c)
    }
    if(         
#line 4289 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 2
#line 7721 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_2, immI_2_rule, c)
    }
    if(         
#line 4279 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 31
#line 7729 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_31, immI_31_rule, c)
    }
    if(         
#line 4269 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ <= 4
#line 7737 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_LE_4, immI_le_4_rule, c)
    }
    if(         
#line 4259 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ > 1
#line 7745 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_GT_1, immI_gt_1_rule, c)
    }
    if(         
#line 4249 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 <= _n_get_int__ && (_n_get_int__ <= 4)
#line 7753 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMIEXT, immIExt_rule, c)
    }
    if(         
#line 4238 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == -1
#line 7761 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_M1, immI_M1_rule, c)
    }
    if(         
#line 4227 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 1
#line 7769 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI_1, immI_1_rule, c)
    }
    if(         
#line 4216 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_int__ == 0
#line 7777 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI0, immI0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMI, immI_rule, c)
        DFA_PRODUCTION(IREGINOSP, loadConI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGI, loadConI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGI_R0, loadConI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGI_R2, loadConI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGI_R3, loadConI_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGI_R4, loadConI_rule, c+INSN_COST)
    }
}
void  State::_sub_Op_ConL(const Node *n){
    jlong _n_get_long__ = n->get_long();
    if(         
#line 48 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
Address::offset_ok_for_sve_immed(_n_get_long__, 4,
            Matcher::scalable_vector_reg_size(T_BYTE))
#line 7800 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(VMEMA_IMMLOFFSET4, vmemA_immLOffset4_rule, c)
    }
    if(         
#line 4838 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 0xFFFFFFFFL
#line 7808 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_32BITS, immL_32bits_rule, c)
    }
    if(         
#line 4828 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_logical_immediate(/*is32*/false, (uint64_t)n->get_long())
#line 7816 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLLOG, immLLog_rule, c)
    }
    if(         
#line 4817 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_sve_add_sub_immediate(_n_get_long__)
#line 7824 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLADDSUBV, immLAddSubV_rule, c)
    }
    if(         
#line 4807 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Assembler::operand_valid_for_add_sub_immediate(_n_get_long__)
#line 7832 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLADDSUB, immLAddSub_rule, c)
    }
    if(         
#line 4795 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == in_bytes(JavaThread::frame_anchor_offset()) +
                             in_bytes(JavaFrameAnchor::last_Java_pc_offset())
#line 7841 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_PC_OFF, immL_pc_off_rule, c)
    }
    if(         
#line 4783 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == -1
#line 7849 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_M1, immL_M1_rule, c)
    }
    if(         
#line 4772 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 1
#line 7857 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_1, immL_1_rule, c)
    }
    if(         
#line 4761 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 0
#line 7865 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML0, immL0_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML, immL_rule, c)
        DFA_PRODUCTION(IREGLNOSP, loadConL_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGL, loadConL_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGL_R0, loadConL_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGL_R2, loadConL_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGL_R3, loadConL_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGL_R11, loadConL_rule, c+INSN_COST)
    }
    if(         
#line 4674 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(_n_get_long__ <= 127 && _n_get_long__ >= -128) ||
            (_n_get_long__ <= 32512 && _n_get_long__ >= -32768 && (_n_get_long__ & 0xff) == 0)
#line 7884 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML8_SHIFT8, immL8_shift8_rule, c)
    }
    if(         
#line 4640 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 4)
#line 7892 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET16, immLoffset16_rule, c)
    }
    if(         
#line 4630 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 3)
#line 7900 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET8, immLoffset8_rule, c)
    }
    if(         
#line 4620 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 2)
#line 7908 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET4, immLoffset4_rule, c)
    }
    if(         
#line 4610 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 1)
#line 7916 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET2, immLoffset2_rule, c)
    }
    if(         
#line 4600 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 0)
#line 7924 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET1, immLoffset1_rule, c)
    }
    if(         
#line 4590 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
Address::offset_ok_for_immed(_n_get_long__, 0)
#line 7932 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLOFFSET, immLoffset_rule, c)
    }
    if(         
#line 4519 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(0 <= _n_get_long__) && (_n_get_long__ < (1 << 12))
#line 7940 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMLU12, immLU12_rule, c)
    }
    if(         
#line 4463 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(_n_get_long__ != 0)
            && ((julong)n->get_long() < 0x80000000ULL)
            && is_power_of_2(n->get_long() + 1)
#line 7950 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_POSITIVE_BITMASKI, immL_positive_bitmaskI_rule, c)
    }
    if(         
#line 4439 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(_n_get_long__ != 0)
            && ((_n_get_long__ & 0xc000000000000000l) == 0)
            && is_power_of_2(_n_get_long__ + 1)
#line 7960 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_BITMASK, immL_bitmask_rule, c)
    }
    if(         
#line 4429 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 4294967295L
#line 7968 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_4294967295, immL_4294967295_rule, c)
    }
    if(         
#line 4419 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 65535L
#line 7976 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_65535, immL_65535_rule, c)
    }
    if(         
#line 4409 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
_n_get_long__ == 255L
#line 7984 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMML_255, immL_255_rule, c)
    }
}
void  State::_sub_Op_ConP(const Node *n){
    if(         
#line 4908 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->get_ptr() == -2
#line 7994 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMP_M2, immP_M2_rule, c)
    }
    if(         
#line 4896 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->get_ptr() == -1
#line 8002 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMP_M1, immP_M1_rule, c)
    }
    if(         
#line 4883 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
BarrierSet::barrier_set()->is_a(BarrierSet::CardTableBarrierSet) &&
            (CardTable::CardValue*)n->get_ptr() == ((CardTableBarrierSet*)(BarrierSet::barrier_set()))->card_table()->byte_map_base()
#line 8011 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMBYTEMAPBASE, immByteMapBase_rule, c)
        DFA_PRODUCTION(IREGPNOSP, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(THREAD_REGP, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(LR_REGP, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(INDIRECT, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(VMEM2, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(VMEM4, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(VMEM8, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(VMEM16, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(MEMORY, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(VMEMA, indirect_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R0, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R1, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R2, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R3, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R4, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R5, loadByteMapBase_rule, c+INSN_COST)
        DFA_PRODUCTION(IREGP_R10, loadByteMapBase_rule, c+INSN_COST)
    }
    if(         
#line 4871 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->get_ptr() == 1
#line 8042 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMP_1, immP_1_rule, c)
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c+INSN_COST) {
        DFA_PRODUCTION(IREGPNOSP, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(THREAD_REGP, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(LR_REGP, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+INSN_COST) {
        DFA_PRODUCTION(INDIRECT, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c+INSN_COST) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R0, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R1, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R2, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R3, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R4, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R5, loadConP1_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R10, loadConP1_rule, c+INSN_COST)
      }
    }
    if(         
#line 4859 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->get_ptr() == 0
#line 8119 "dfa_aarch64.cpp"
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMP0, immP0_rule, c)
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c+INSN_COST) {
        DFA_PRODUCTION(IREGPNOSP, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(THREAD_REGP, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c+INSN_COST) {
        DFA_PRODUCTION(LR_REGP, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+INSN_COST) {
        DFA_PRODUCTION(INDIRECT, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c+INSN_COST) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+INSN_COST) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c+INSN_COST) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R0, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R1, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R2, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R3, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R4, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R5, loadConP0_rule, c+INSN_COST)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c+INSN_COST) {
        DFA_PRODUCTION(IREGP_R10, loadConP0_rule, c+INSN_COST)
      }
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION(IMMP, immP_rule, c)
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGPNOSP, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(THREAD_REGP, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c+INSN_COST * 4) {
        DFA_PRODUCTION(LR_REGP, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+INSN_COST * 4) {
        DFA_PRODUCTION(INDIRECT, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c+INSN_COST * 4) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c+INSN_COST * 4) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c+INSN_COST * 4) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c+INSN_COST * 4) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+INSN_COST * 4) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c+INSN_COST * 4) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R0, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R1, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R2, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R3, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R4, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R5, loadConP_rule, c+INSN_COST * 4)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c+INSN_COST * 4) {
        DFA_PRODUCTION(IREGP_R10, loadConP_rule, c+INSN_COST * 4)
      }
    }
   if ( /* IREGPNOSP KNOWN_VALID || */ _cost[IREGPNOSP] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGPNOSP, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP KNOWN_VALID || */ _cost[IREGP] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP, loadConP_rule, INSN_COST * 4)
   }
   if ( /* INLINE_CACHE_REGP KNOWN_VALID || */ _cost[INLINE_CACHE_REGP] > INSN_COST * 4) {
     DFA_PRODUCTION(INLINE_CACHE_REGP, loadConP_rule, INSN_COST * 4)
   }
   if ( /* THREAD_REGP KNOWN_VALID || */ _cost[THREAD_REGP] > INSN_COST * 4) {
     DFA_PRODUCTION(THREAD_REGP, loadConP_rule, INSN_COST * 4)
   }
   if ( /* LR_REGP KNOWN_VALID || */ _cost[LR_REGP] > INSN_COST * 4) {
     DFA_PRODUCTION(LR_REGP, loadConP_rule, INSN_COST * 4)
   }
   if ( /* INDIRECT KNOWN_VALID || */ _cost[INDIRECT] > INSN_COST * 4) {
     DFA_PRODUCTION(INDIRECT, loadConP_rule, INSN_COST * 4)
   }
   if ( /* VMEM2 KNOWN_VALID || */ _cost[VMEM2] > INSN_COST * 4) {
     DFA_PRODUCTION(VMEM2, indirect_rule, INSN_COST * 4)
   }
   if ( /* VMEM4 KNOWN_VALID || */ _cost[VMEM4] > INSN_COST * 4) {
     DFA_PRODUCTION(VMEM4, indirect_rule, INSN_COST * 4)
   }
   if ( /* VMEM8 KNOWN_VALID || */ _cost[VMEM8] > INSN_COST * 4) {
     DFA_PRODUCTION(VMEM8, indirect_rule, INSN_COST * 4)
   }
   if ( /* VMEM16 KNOWN_VALID || */ _cost[VMEM16] > INSN_COST * 4) {
     DFA_PRODUCTION(VMEM16, indirect_rule, INSN_COST * 4)
   }
   if ( /* MEMORY1 KNOWN_VALID || */ _cost[MEMORY1] > INSN_COST * 4) {
     DFA_PRODUCTION(MEMORY1, indirect_rule, INSN_COST * 4)
   }
   if ( /* MEMORY2 KNOWN_VALID || */ _cost[MEMORY2] > INSN_COST * 4) {
     DFA_PRODUCTION(MEMORY2, indirect_rule, INSN_COST * 4)
   }
   if ( /* MEMORY4 KNOWN_VALID || */ _cost[MEMORY4] > INSN_COST * 4) {
     DFA_PRODUCTION(MEMORY4, indirect_rule, INSN_COST * 4)
   }
   if ( /* MEMORY8 KNOWN_VALID || */ _cost[MEMORY8] > INSN_COST * 4) {
     DFA_PRODUCTION(MEMORY8, indirect_rule, INSN_COST * 4)
   }
   if ( /* MEMORY KNOWN_VALID || */ _cost[MEMORY] > INSN_COST * 4) {
     DFA_PRODUCTION(MEMORY, indirect_rule, INSN_COST * 4)
   }
   if ( /* VMEMA KNOWN_VALID || */ _cost[VMEMA] > INSN_COST * 4) {
     DFA_PRODUCTION(VMEMA, indirect_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R0 KNOWN_VALID || */ _cost[IREGP_R0] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R0, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R1 KNOWN_VALID || */ _cost[IREGP_R1] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R1, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R2 KNOWN_VALID || */ _cost[IREGP_R2] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R2, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R3 KNOWN_VALID || */ _cost[IREGP_R3] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R3, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R4 KNOWN_VALID || */ _cost[IREGP_R4] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R4, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R5 KNOWN_VALID || */ _cost[IREGP_R5] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R5, loadConP_rule, INSN_COST * 4)
   }
   if ( /* IREGP_R10 KNOWN_VALID || */ _cost[IREGP_R10] > INSN_COST * 4) {
     DFA_PRODUCTION(IREGP_R10, loadConP_rule, INSN_COST * 4)
   }
}
void  State::_sub_Op_Conv2B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, convP2B_rule, c)
        DFA_PRODUCTION(IREGI, convP2B_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, convP2B_rule, c)
        DFA_PRODUCTION(IREGI_R2, convP2B_rule, c)
        DFA_PRODUCTION(IREGI_R3, convP2B_rule, c)
        DFA_PRODUCTION(IREGI_R4, convP2B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, convI2B_rule, c)
      }
    }
}
void  State::_sub_Op_ConvD2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 5;
        DFA_PRODUCTION(VREGF, convD2F_reg_rule, c)
    }
}
void  State::_sub_Op_ConvD2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 5;
        DFA_PRODUCTION(IREGINOSP, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, convD2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, convD2I_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 5;
        DFA_PRODUCTION(IREGLNOSP, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, convD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, convD2L_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvF2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 5;
        DFA_PRODUCTION(VREGD, convF2D_reg_rule, c)
    }
}
void  State::_sub_Op_ConvF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 5;
        DFA_PRODUCTION(IREGINOSP, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, convF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, convF2I_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvF2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 5;
        DFA_PRODUCTION(IREGLNOSP, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, convF2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, convF2L_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvI2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+INSN_COST * 5;
        DFA_PRODUCTION(VREGD, convI2D_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvI2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+INSN_COST * 5;
        DFA_PRODUCTION(VREGF, convI2F_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvI2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, convI2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, convI2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGI_IMMI_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGI_IMMI_BITMASK] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, ubfizIConvI2LAndI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, ubfizIConvI2LAndI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, ubfizIConvI2LAndI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, ubfizIConvI2LAndI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, ubfizIConvI2LAndI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, ubfizIConvI2LAndI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_BITMASK) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_BITMASK];
        DFA_PRODUCTION(_CONVI2L__ANDI_IREGIORL2I_IMMI_BITMASK_, _ConvI2L__AndI_iRegIorL2I_immI_bitmask__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__ANDI_IREGIORL2I_IMMI_BITMASK_IMMI) &&
        (
#line 13094 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2(n->in(1)->in(1)->in(2)->get_int() + 1) + (n->in(1)->in(2)->get_int() & 31)) <= 31
#line 8481 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_BITMASK_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, ubfizwIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, ubfizwIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, ubfizwIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, ubfizwIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, ubfizwIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, ubfizwIConvI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__URSHIFTI_IREGIORL2I_IMMI_IMMI_BITMASK) &&
        (
#line 13027 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2(n->in(1)->in(2)->get_int() + 1) + (n->in(1)->in(1)->in(2)->get_int() & 31)) <= (31 + 1)
#line 8507 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__URSHIFTI_IREGIORL2I_IMMI_IMMI_BITMASK]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, ubfxIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, ubfxIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, ubfxIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, ubfxIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, ubfxIConvI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, ubfxIConvI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_CONVI2L_IREGIORL2I_, _ConvI2L_iRegIorL2I__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_INDIRECT_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_INDIRECT_];
        DFA_PRODUCTION(_CONVI2L__LOADI_INDIRECT__, _ConvI2L__LoadI_indirect___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_INDIRECT_) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_INDIRECT_] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadS2L_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_INDIRECT_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_INDIRECT_] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUS2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUS2L_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_INDIRECT_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_INDIRECT_] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUB2L_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADB_INDIRECT_) ) {
      unsigned int c = _kids[0]->_cost[_LOADB_INDIRECT_] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadB2L_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadB2L_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY4_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY4_];
        DFA_PRODUCTION(_CONVI2L__LOADI_MEMORY4__, _ConvI2L__LoadI_memory4___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY4_) &&
        (
#line 7509 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1))
#line 8629 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY4_]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY2_) &&
        (
#line 7481 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1))
#line 8655 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY2_]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_MEMORY2_) &&
        (
#line 7453 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1))
#line 8681 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_MEMORY2_]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_MEMORY1_) &&
        (
#line 7425 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1))
#line 8707 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_MEMORY1_]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadUB2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADB_MEMORY1_) &&
        (
#line 7397 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n->in(1))
#line 8733 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADB_MEMORY1_]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadB2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI];
        DFA_PRODUCTION(_CONVI2L_IREGI_, _ConvI2L_iRegI__rule, c)
    }
}
void  State::_sub_Op_ConvL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+INSN_COST * 5;
        DFA_PRODUCTION(VREGD, convL2D_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvL2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+INSN_COST * 5;
        DFA_PRODUCTION(VREGF, convL2F_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ConvL2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, convL2I_reg_rule, c)
        DFA_PRODUCTION(IREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, convL2I_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, convL2I_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, convL2I_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, convL2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_POSITIVE_BITMASKI) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_POSITIVE_BITMASKI];
        DFA_PRODUCTION(_CONVL2I__ANDL_IREGL_IMML_POSITIVE_BITMASKI_, _ConvL2I__AndL_iRegL_immL_positive_bitmaskI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL__ANDL_IREGL_IMML_POSITIVE_BITMASKI_IMMI) &&
        (
#line 13116 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2_long(n->in(1)->in(1)->in(2)->get_long() + 1) + (n->in(1)->in(2)->get_int() & 63)) <= 31
#line 8791 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL__ANDL_IREGL_IMML_POSITIVE_BITMASKI_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, ubfizLConvL2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, ubfizLConvL2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, ubfizLConvL2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, ubfizLConvL2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, ubfizLConvL2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, ubfizLConvL2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL];
        DFA_PRODUCTION(_CONVL2I_IREGL_, _ConvL2I_iRegL__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X__DECODEN_IREGN__) &&
        (
#line 8844 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 8824 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X__DECODEN_IREGN__] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, convN2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, convN2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X_IREGP_) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X_IREGP_] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, convP2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, convP2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL];
        DFA_PRODUCTION(IREGL2I, iRegL2I_rule, c)
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegL2I_rule, c)
      }
    }
}
void  State::_sub_Op_CountedLoopEnd(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU] + BRANCH_COST;
        DFA_PRODUCTION(UNIVERSE, branchLoopEndU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, branchLoopEnd_rule, c)
      }
    }
}
void  State::_sub_Op_CountLeadingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, countLeadingZerosI_rule, c)
        DFA_PRODUCTION(IREGI, countLeadingZerosI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, countLeadingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R2, countLeadingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R3, countLeadingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R4, countLeadingZerosI_rule, c)
    }
}
void  State::_sub_Op_CountLeadingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, countLeadingZerosL_rule, c)
        DFA_PRODUCTION(IREGI, countLeadingZerosL_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, countLeadingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R2, countLeadingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R3, countLeadingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R4, countLeadingZerosL_rule, c)
    }
}
void  State::_sub_Op_CountTrailingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, countTrailingZerosI_rule, c)
        DFA_PRODUCTION(IREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, countTrailingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R2, countTrailingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R3, countTrailingZerosI_rule, c)
        DFA_PRODUCTION(IREGI_R4, countTrailingZerosI_rule, c)
    }
}
void  State::_sub_Op_CountTrailingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, countTrailingZerosL_rule, c)
        DFA_PRODUCTION(IREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, countTrailingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R2, countTrailingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R3, countTrailingZerosL_rule, c)
        DFA_PRODUCTION(IREGI_R4, countTrailingZerosL_rule, c)
    }
}
void  State::_sub_Op_CreateEx(const Node *n){
    {
      unsigned int c = INSN_COST;
        DFA_PRODUCTION(IREGP_R0, CreateException_rule, c)
        DFA_PRODUCTION(IREGP, CreateException_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, CreateException_rule, c)
        DFA_PRODUCTION(THREAD_REGP, CreateException_rule, c)
        DFA_PRODUCTION(LR_REGP, CreateException_rule, c)
        DFA_PRODUCTION(INDIRECT, CreateException_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
    }
}
void  State::_sub_Op_DecodeN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGN) &&
        (
#line 8898 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->bottom_type()->is_ptr()->ptr() == TypePtr::NotNull ||
            n->bottom_type()->is_ptr()->ptr() == TypePtr::Constant
#line 8968 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+INSN_COST * 3;
        DFA_PRODUCTION(IREGPNOSP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(THREAD_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(LR_REGP, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(INDIRECT, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R1, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R2, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R3, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R4, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R5, decodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R10, decodeHeapOop_not_null_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) &&
        (
#line 8884 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->bottom_type()->is_ptr()->ptr() != TypePtr::NotNull &&
            n->bottom_type()->is_ptr()->ptr() != TypePtr::Constant
#line 9000 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, decodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, decodeHeapOop_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) ) {
      unsigned int c = _kids[0]->_cost[IREGN];
        DFA_PRODUCTION(_DECODEN_IREGN_, _DecodeN_iRegN__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGN) &&
        
#line 6027 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
CompressedOops::shift() == 0
#line 9081 "dfa_aarch64.cpp"
 ) {
      unsigned int c = _kids[0]->_cost[IREGN];
        DFA_PRODUCTION(INDIRECTN, indirectN_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirectN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirectN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirectN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirectN_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirectN_rule, c)
      }
    }
}
void  State::_sub_Op_DecodeNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGN) ) {
      unsigned int c = _kids[0]->_cost[IREGN]+INSN_COST * 3;
        DFA_PRODUCTION(IREGPNOSP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(THREAD_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(LR_REGP, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(INDIRECT, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R1, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R2, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R3, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R4, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R5, decodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGP_R10, decodeKlass_not_null_rule, c)
    }
}
void  State::_sub_Op_DivD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+INSN_COST * 32;
        DFA_PRODUCTION(VREGD, divD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_DivF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+INSN_COST * 18;
        DFA_PRODUCTION(VREGF, divF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_DivI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 19;
        DFA_PRODUCTION(IREGINOSP, divI_rule, c)
        DFA_PRODUCTION(IREGI, divI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, divI_rule, c)
        DFA_PRODUCTION(IREGI_R2, divI_rule, c)
        DFA_PRODUCTION(IREGI_R3, divI_rule, c)
        DFA_PRODUCTION(IREGI_R4, divI_rule, c)
    }
}
void  State::_sub_Op_DivL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 35;
        DFA_PRODUCTION(IREGLNOSP, divL_rule, c)
        DFA_PRODUCTION(IREGL, divL_rule, c)
        DFA_PRODUCTION(IREGL_R0, divL_rule, c)
        DFA_PRODUCTION(IREGL_R2, divL_rule, c)
        DFA_PRODUCTION(IREGL_R3, divL_rule, c)
        DFA_PRODUCTION(IREGL_R11, divL_rule, c)
    }
}
void  State::_sub_Op_EncodeISOArray(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R1_IREGI_R3) &&
        (
#line 17059 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!((EncodeISOArrayNode*)n)->is_ascii()
#line 9170 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R2]+_kids[1]->_cost[_BINARY_IREGP_R1_IREGI_R3] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, encode_iso_array_rule, c)
    }
}
void  State::_sub_Op_EncodeP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) &&
        (
#line 8873 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->bottom_type()->make_ptr()->ptr() == TypePtr::NotNull
#line 9181 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+INSN_COST * 3;
        DFA_PRODUCTION(IREGNNOSP, encodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGN, encodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R0, encodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R2, encodeHeapOop_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R3, encodeHeapOop_not_null_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP) &&
        (
#line 8859 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->bottom_type()->make_ptr()->ptr() != TypePtr::NotNull
#line 9194 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, encodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, encodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, encodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, encodeHeapOop_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, encodeHeapOop_rule, c)
      }
    }
}
void  State::_sub_Op_EncodePKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+INSN_COST * 3;
        DFA_PRODUCTION(IREGNNOSP, encodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGN, encodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R0, encodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R2, encodeKlass_not_null_rule, c)
        DFA_PRODUCTION(IREGN_R3, encodeKlass_not_null_rule, c)
    }
}
void  State::_sub_Op_FastLock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGP]+5 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, cmpFastLock_rule, c)
    }
}
void  State::_sub_Op_FastUnlock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP]+_kids[1]->_cost[IREGP]+5 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, cmpFastUnlock_rule, c)
    }
}
void  State::_sub_Op_FmaD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _NEGD_VREGD_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) &&
        (
#line 14198 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9241 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGD_VREGD_]+_kids[1]->_cost[_BINARY_VREGD_VREGD] + INSN_COST;
        DFA_PRODUCTION(VREGD, mnsubD_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGD_VREGD_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD__NEGD_VREGD_) &&
        (
#line 14163 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9250 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGD_VREGD_]+_kids[1]->_cost[_BINARY_VREGD__NEGD_VREGD_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, mnaddD_reg_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGD_VREGD_) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGD_VREGD__VREGD) &&
        (
#line 14163 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9261 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGD_VREGD_]+_kids[1]->_cost[_BINARY__NEGD_VREGD__VREGD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, mnaddD_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD__NEGD_VREGD_) &&
        (
#line 14127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9272 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_BINARY_VREGD__NEGD_VREGD_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, msubD_reg_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGD_VREGD__VREGD) &&
        (
#line 14127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9283 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_BINARY__NEGD_VREGD__VREGD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, msubD_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) &&
        (
#line 14092 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9294 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_BINARY_VREGD_VREGD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, maddD_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_FmaF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _NEGF_VREGF_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF_VREGF) &&
        (
#line 14181 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9307 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGF_VREGF_]+_kids[1]->_cost[_BINARY_VREGF_VREGF] + INSN_COST;
        DFA_PRODUCTION(VREGF, mnsubF_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGF_VREGF_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF__NEGF_VREGF_) &&
        (
#line 14145 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9316 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGF_VREGF_]+_kids[1]->_cost[_BINARY_VREGF__NEGF_VREGF_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, mnaddF_reg_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGF_VREGF_) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGF_VREGF__VREGF) &&
        (
#line 14145 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9327 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGF_VREGF_]+_kids[1]->_cost[_BINARY__NEGF_VREGF__VREGF] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, mnaddF_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF__NEGF_VREGF_) &&
        (
#line 14109 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9338 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[_BINARY_VREGF__NEGF_VREGF_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, msubF_reg_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGF_VREGF__VREGF) &&
        (
#line 14109 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9349 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[_BINARY__NEGF_VREGF__VREGF] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, msubF_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF_VREGF) &&
        (
#line 14075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UseFMA
#line 9360 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[_BINARY_VREGF_VREGF] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, maddF_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Goto(const Node *n){
    {
      unsigned int c = BRANCH_COST;
        DFA_PRODUCTION(UNIVERSE, branch_rule, c)
    }
}
void  State::_sub_Op_Halt(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, ShouldNotReachHere_rule, c)
    }
}
void  State::_sub_Op_HasNegatives(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R1) && STATE__VALID_CHILD(_kids[1], IREGI_R2) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R1]+_kids[1]->_cost[IREGI_R2] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, has_negatives_rule, c)
    }
}
void  State::_sub_Op_If(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPI__ANDI_IREGIORL2I_IMMI_IMMI0) &&
        (
#line 16291 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
is_power_of_2((juint)n->in(2)->in(1)->in(2)->get_int())
#line 9391 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPI__ANDI_IREGIORL2I_IMMI_IMMI0] + BRANCH_COST;
        DFA_PRODUCTION(UNIVERSE, far_cmpI_branch_bit_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPL__ANDL_IREGL_IMML_IMML0) &&
        (
#line 16275 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
is_power_of_2((julong)n->in(2)->in(1)->in(2)->get_long())
#line 9400 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPL__ANDL_IREGL_IMML_IMML0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, far_cmpL_branch_bit_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPLTGE) && STATE__VALID_CHILD(_kids[1], _CMPI_IREGIORL2I_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPLTGE]+_kids[1]->_cost[_CMPI_IREGIORL2I_IMMI0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, far_cmpI_branch_sign_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPLTGE) && STATE__VALID_CHILD(_kids[1], _CMPL_IREGL_IMML0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPLTGE]+_kids[1]->_cost[_CMPL_IREGL_IMML0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, far_cmpL_branch_sign_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUEQNELTGE) && STATE__VALID_CHILD(_kids[1], _CMPUL_IREGL_IMML0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUEQNELTGE]+_kids[1]->_cost[_CMPUL_IREGL_IMML0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpUL_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUEQNELTGE) && STATE__VALID_CHILD(_kids[1], _CMPU_IREGIORL2I_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUEQNELTGE]+_kids[1]->_cost[_CMPU_IREGIORL2I_IMMI0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpUI_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPP__DECODEN_IREGN__IMMP0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPP__DECODEN_IREGN__IMMP0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpP_narrowOop_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPN_IREGN_IMMN0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPN_IREGN_IMMN0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpN_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPP_IREGP_IMMP0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPP_IREGP_IMMP0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpP_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPL_IREGL_IMML0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPL_IREGL_IMML0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpL_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPEQNE) && STATE__VALID_CHILD(_kids[1], _CMPI_IREGIORL2I_IMMI0) ) {
      unsigned int c = _kids[0]->_cost[CMPOPEQNE]+_kids[1]->_cost[_CMPI_IREGIORL2I_IMMI0] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, cmpI_imm0_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], RFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[RFLAGSREGU] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, branchConU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], RFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[RFLAGSREG] + BRANCH_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, branchCon_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], _OVERFLOWMULL_IREGL_IREGL) &&
        (
#line 15413 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->in(1)->as_Bool()->_test._test == BoolTest::overflow
            || n->in(1)->as_Bool()->_test._test == BoolTest::no_overflow
#line 9478 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[_OVERFLOWMULL_IREGL_IREGL]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, overflowMulL_reg_branch_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], _OVERFLOWMULI_IREGIORL2I_IREGIORL2I) &&
        (
#line 15368 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->in(1)->as_Bool()->_test._test == BoolTest::overflow
            || n->in(1)->as_Bool()->_test._test == BoolTest::no_overflow
#line 9490 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[_OVERFLOWMULI_IREGIORL2I_IREGIORL2I]+3 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, overflowMulI_reg_branch_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_65535) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_65535]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT, _LShiftI__AndI_iRegIorL2I_immI_65535_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_255) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_255]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT, _LShiftI__AndI_iRegIorL2I_immI_255_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT, _LShiftI__RShiftI__LShiftI_iRegIorL2I_immI_16_immI_16_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT, _LShiftI__RShiftI__LShiftI_iRegIorL2I_immI_24_immI_24_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION(_LSHIFTI_IREGIORL2I_IMMI_24, _LShiftI_iRegIorL2I_immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION(_LSHIFTI_IREGIORL2I_IMMI_16, _LShiftI_iRegIorL2I_immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVL2I__ANDL_IREGL_IMML_POSITIVE_BITMASKI_) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 13159 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2_long(n->in(1)->in(1)->in(2)->get_long() + 1) + (n->in(2)->get_int() & 31)) <= 31
#line 9527 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_CONVL2I__ANDL_IREGL_IMML_POSITIVE_BITMASKI_]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, ubfizLConvL2Ix_rule, c)
        DFA_PRODUCTION(IREGI, ubfizLConvL2Ix_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, ubfizLConvL2Ix_rule, c)
        DFA_PRODUCTION(IREGI_R2, ubfizLConvL2Ix_rule, c)
        DFA_PRODUCTION(IREGI_R3, ubfizLConvL2Ix_rule, c)
        DFA_PRODUCTION(IREGI_R4, ubfizLConvL2Ix_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_BITMASK) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_BITMASK]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_LSHIFTI__ANDI_IREGIORL2I_IMMI_BITMASK_IMMI, _LShiftI__AndI_iRegIorL2I_immI_bitmask_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_IREGIORL2I_IMMI_BITMASK) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 13050 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2(n->in(1)->in(2)->get_int() + 1) + (n->in(2)->get_int() & 31)) <= (31 + 1)
#line 9546 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_IREGIORL2I_IMMI_BITMASK]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, ubfizwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, ubfizwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, ubfizwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, ubfizwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, ubfizwI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, ubfizwI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_LSHIFTI_IREGIORL2I_IMMI, _LShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, lShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, lShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, lShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, lShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, lShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, lShiftI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, lShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, lShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, lShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, lShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, lShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, lShiftI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_4294967295) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_4294967295]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT, _LShiftL__AndL_iRegL_immL_4294967295_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_65535) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_65535]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT, _LShiftL__AndL_iRegL_immL_65535_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_255) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_255]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT, _LShiftL__AndL_iRegL_immL_255_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT, _LShiftL__ConvI2L_iRegIorL2I__immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT, _LShiftL__RShiftL__LShiftL_iRegL_immI_32_immI_32_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT, _LShiftL__RShiftL__LShiftL_iRegL_immI_48_immI_48_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56) && STATE__VALID_CHILD(_kids[1], IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56]+_kids[1]->_cost[IMMIEXT];
        DFA_PRODUCTION(_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT, _LShiftL__RShiftL__LShiftL_iRegL_immI_56_immI_56_immIExt_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI_56) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI_56];
        DFA_PRODUCTION(_LSHIFTL_IREGL_IMMI_56, _LShiftL_iRegL_immI_56_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI_32) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI_32];
        DFA_PRODUCTION(_LSHIFTL_IREGL_IMMI_32, _LShiftL_iRegL_immI_32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI_48) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI_48];
        DFA_PRODUCTION(_LSHIFTL_IREGL_IMMI_48, _LShiftL_iRegL_immI_48_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L__ANDI_IREGIORL2I_IMMI_BITMASK_) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 13138 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2(n->in(1)->in(1)->in(2)->get_int() + 1) + (n->in(2)->get_int() & 63)) <= (63 + 1)
#line 9669 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L__ANDI_IREGIORL2I_IMMI_BITMASK_]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, ubfizIConvI2L_rule, c)
        DFA_PRODUCTION(IREGL, ubfizIConvI2L_rule, c)
        DFA_PRODUCTION(IREGL_R0, ubfizIConvI2L_rule, c)
        DFA_PRODUCTION(IREGL_R2, ubfizIConvI2L_rule, c)
        DFA_PRODUCTION(IREGL_R3, ubfizIConvI2L_rule, c)
        DFA_PRODUCTION(IREGL_R11, ubfizIConvI2L_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_POSITIVE_BITMASKI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_POSITIVE_BITMASKI]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_LSHIFTL__ANDL_IREGL_IMML_POSITIVE_BITMASKI_IMMI, _LShiftL__AndL_iRegL_immL_positive_bitmaskI_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL_IREGL_IMML_BITMASK) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 13072 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(exact_log2_long(n->in(1)->in(2)->get_long() + 1) + (n->in(2)->get_int() & 63)) <= (63 + 1)
#line 9687 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_ANDL_IREGL_IMML_BITMASK]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, ubfizL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, ubfizL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, ubfizL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, ubfizL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, ubfizL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, ubfizL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_LSHIFTL_IREGL_IMMI, _LShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, lShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, lShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, lShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, lShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, lShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, lShiftL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, lShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, lShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, lShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, lShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, lShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, lShiftL_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, lshift_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, lshift_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, lshift_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, lshift_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, lshift_ext_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, lshift_ext_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], IMMISCALE) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[IMMISCALE];
        DFA_PRODUCTION(_LSHIFTL__CONVI2L_IREGIORL2I__IMMISCALE, _LShiftL__ConvI2L_iRegIorL2I__immIScale_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMISCALE) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMISCALE];
        DFA_PRODUCTION(_LSHIFTL_IREGL_IMMISCALE, _LShiftL_iRegL_immIScale_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGI_) && STATE__VALID_CHILD(_kids[1], IMMISCALE) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGI_]+_kids[1]->_cost[IMMISCALE];
        DFA_PRODUCTION(_LSHIFTL__CONVI2L_IREGI__IMMISCALE, _LShiftL__ConvI2L_iRegI__immIScale_rule, c)
    }
}
void  State::_sub_Op_LoadB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADB_INDIRECT_, _LoadB_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, loadB_volatile_rule, c)
        DFA_PRODUCTION(IREGI, loadB_volatile_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadB_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1];
        DFA_PRODUCTION(_LOADB_MEMORY1_, _LoadB_memory1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) &&
        (
#line 7383 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9812 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, loadB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, loadB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, loadB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, loadB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, loadB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, loadB_rule, c)
      }
    }
}
void  State::_sub_Op_LoadUB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADUB_INDIRECT_, _LoadUB_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, loadUB_volatile_rule, c)
        DFA_PRODUCTION(IREGI, loadUB_volatile_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadUB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadUB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadUB_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadUB_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1];
        DFA_PRODUCTION(_LOADUB_MEMORY1_, _LoadUB_memory1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) &&
        (
#line 7411 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9861 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, loadUB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, loadUB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, loadUB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, loadUB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, loadUB_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, loadUB_rule, c)
      }
    }
}
void  State::_sub_Op_LoadUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADUS_INDIRECT_, _LoadUS_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, loadUS_volatile_rule, c)
        DFA_PRODUCTION(IREGI, loadUS_volatile_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadUS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadUS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadUS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadUS_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2];
        DFA_PRODUCTION(_LOADUS_MEMORY2_, _LoadUS_memory2__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) &&
        (
#line 7467 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9910 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, loadUS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, loadUS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, loadUS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, loadUS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, loadUS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, loadUS_rule, c)
      }
    }
}
void  State::_sub_Op_LoadD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(VREGD, loadD_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) &&
        (
#line 7634 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9945 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, loadD_rule, c)
      }
    }
}
void  State::_sub_Op_LoadF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(VREGF, loadF_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) &&
        (
#line 7620 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9962 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, loadF_rule, c)
      }
    }
}
void  State::_sub_Op_LoadI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADI_INDIRECT_, _LoadI_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, loadI_volatile_rule, c)
        DFA_PRODUCTION(IREGI, loadI_volatile_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadI_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadI_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadI_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadI_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4];
        DFA_PRODUCTION(_LOADI_MEMORY4_, _LoadI_memory4__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) &&
        (
#line 7495 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 9993 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, loadI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, loadI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, loadI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, loadI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, loadI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, loadI_rule, c)
      }
    }
}
void  State::_sub_Op_LoadKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) &&
        (
#line 7592 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 10024 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+4 * INSN_COST;
        DFA_PRODUCTION(IREGPNOSP, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP, loadKlass_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadKlass_rule, c)
        DFA_PRODUCTION(THREAD_REGP, loadKlass_rule, c)
        DFA_PRODUCTION(LR_REGP, loadKlass_rule, c)
        DFA_PRODUCTION(INDIRECT, loadKlass_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R1, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R2, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R3, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R4, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R5, loadKlass_rule, c)
        DFA_PRODUCTION(IREGP_R10, loadKlass_rule, c)
    }
}
void  State::_sub_Op_LoadNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) &&
        (
#line 7606 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 10057 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+4 * INSN_COST;
        DFA_PRODUCTION(IREGNNOSP, loadNKlass_rule, c)
        DFA_PRODUCTION(IREGN, loadNKlass_rule, c)
        DFA_PRODUCTION(IREGN_R0, loadNKlass_rule, c)
        DFA_PRODUCTION(IREGN_R2, loadNKlass_rule, c)
        DFA_PRODUCTION(IREGN_R3, loadNKlass_rule, c)
    }
}
void  State::_sub_Op_LoadL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8];
        DFA_PRODUCTION(_LOADL_MEMORY8_, _LoadL_memory8__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGLNOSP, loadL_volatile_rule, c)
        DFA_PRODUCTION(IREGL, loadL_volatile_rule, c)
        DFA_PRODUCTION(IREGL_R0, loadL_volatile_rule, c)
        DFA_PRODUCTION(IREGL_R2, loadL_volatile_rule, c)
        DFA_PRODUCTION(IREGL_R3, loadL_volatile_rule, c)
        DFA_PRODUCTION(IREGL_R11, loadL_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) &&
        (
#line 7537 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 10085 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, loadL_rule, c)
      }
    }
}
void  State::_sub_Op_LoadPLocked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGPNOSP, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP, loadPLocked_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION(THREAD_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION(LR_REGP, loadPLocked_rule, c)
        DFA_PRODUCTION(INDIRECT, loadPLocked_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R1, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R2, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R3, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R4, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R5, loadPLocked_rule, c)
        DFA_PRODUCTION(IREGP_R10, loadPLocked_rule, c)
    }
}
void  State::_sub_Op_LoadP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) &&
        (
#line 77 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && needs_acquiring_load(n) && n->as_Load()->barrier_data() != 0
#line 10141 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGPNOSP, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(THREAD_REGP, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(LR_REGP, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(INDIRECT, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R1, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R2, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R3, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R4, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R5, zLoadPVolatile_rule, c)
        DFA_PRODUCTION(IREGP_R10, zLoadPVolatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) &&
        (
#line 57 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/z/z_aarch64.ad"
UseZGC && !needs_acquiring_load(n) && (n->as_Load()->barrier_data() != 0)
#line 10172 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, zLoadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, zLoadP_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) &&
        (
#line 8240 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
n->as_Load()->barrier_data() == 0
#line 10249 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, loadP_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, loadP_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) &&
        (
#line 7564 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n) && (n->as_Load()->barrier_data() == 0)
#line 10326 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, loadP_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, loadP_rule, c)
      }
    }
}
void  State::_sub_Op_LoadN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGNNOSP, loadN_volatile_rule, c)
        DFA_PRODUCTION(IREGN, loadN_volatile_rule, c)
        DFA_PRODUCTION(IREGN_R0, loadN_volatile_rule, c)
        DFA_PRODUCTION(IREGN_R2, loadN_volatile_rule, c)
        DFA_PRODUCTION(IREGN_R3, loadN_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) &&
        (
#line 7578 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 10413 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, loadN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, loadN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, loadN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, loadN_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, loadN_rule, c)
      }
    }
}
void  State::_sub_Op_LoadRange(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+4 * INSN_COST;
        DFA_PRODUCTION(IREGINOSP, loadRange_rule, c)
        DFA_PRODUCTION(IREGI, loadRange_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadRange_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadRange_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadRange_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadRange_rule, c)
    }
}
void  State::_sub_Op_LoadS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADS_INDIRECT_, _LoadS_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, loadS_volatile_rule, c)
        DFA_PRODUCTION(IREGI, loadS_volatile_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, loadS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R2, loadS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R3, loadS_volatile_rule, c)
        DFA_PRODUCTION(IREGI_R4, loadS_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2];
        DFA_PRODUCTION(_LOADS_MEMORY2_, _LoadS_memory2__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) &&
        (
#line 7439 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_acquiring_load(n)
#line 10468 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, loadS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, loadS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, loadS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, loadS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, loadS_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, loadS_rule, c)
      }
    }
}
void  State::_sub_Op_MulAddS2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_IREGIORL2I]+_kids[1]->_cost[_BINARY_IREGIORL2I_IREGIORL2I]+INSN_COST * 5;
        DFA_PRODUCTION(IREGINOSP, muladdS2I_rule, c)
        DFA_PRODUCTION(IREGI, muladdS2I_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, muladdS2I_rule, c)
        DFA_PRODUCTION(IREGI_R2, muladdS2I_rule, c)
        DFA_PRODUCTION(IREGI_R3, muladdS2I_rule, c)
        DFA_PRODUCTION(IREGI_R4, muladdS2I_rule, c)
    }
}
void  State::_sub_Op_MaxI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI]+INSN_COST * 3;
        DFA_PRODUCTION(IREGINOSP, maxI_rReg_rule, c)
        DFA_PRODUCTION(IREGI, maxI_rReg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, maxI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R2, maxI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R3, maxI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R4, maxI_rReg_rule, c)
    }
}
void  State::_sub_Op_MaxD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD] + INSN_COST;
        DFA_PRODUCTION(VREGD, maxD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_MaxF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(VREGF, maxF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_MemBarAcquire(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_acquire_rule, c)
    }
    if(         (
#line 8658 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
unnecessary_acquire(n)
#line 10538 "dfa_aarch64.cpp"
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION(UNIVERSE, unnecessary_membar_acquire_rule, c)	  // overwrites higher cost rule
    }
}
void  State::_sub_Op_LoadFence(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, load_fence_rule, c)
    }
}
void  State::_sub_Op_MemBarAcquireLock(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_acquire_lock_rule, c)
    }
}
void  State::_sub_Op_MemBarRelease(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_release_rule, c)
    }
    if(         (
#line 8713 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
unnecessary_release(n)
#line 10564 "dfa_aarch64.cpp"
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION(UNIVERSE, unnecessary_membar_release_rule, c)	  // overwrites higher cost rule
    }
}
void  State::_sub_Op_StoreFence(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, store_fence_rule, c)
    }
}
void  State::_sub_Op_StoreStoreFence(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_storestore_0_rule, c)
    }
}
void  State::_sub_Op_MemBarReleaseLock(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_release_lock_rule, c)
    }
}
void  State::_sub_Op_MemBarVolatile(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST*100;
        DFA_PRODUCTION(UNIVERSE, membar_volatile_rule, c)
    }
    if(         (
#line 8766 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
unnecessary_volatile(n)
#line 10596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION(UNIVERSE, unnecessary_membar_volatile_rule, c)	  // overwrites higher cost rule
    }
}
void  State::_sub_Op_MemBarStoreStore(const Node *n){
    {
      unsigned int c = VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, membar_storestore_rule, c)
    }
}
void  State::_sub_Op_MinI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI]+INSN_COST * 3;
        DFA_PRODUCTION(IREGINOSP, minI_rReg_rule, c)
        DFA_PRODUCTION(IREGI, minI_rReg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, minI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R2, minI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R3, minI_rReg_rule, c)
        DFA_PRODUCTION(IREGI_R4, minI_rReg_rule, c)
    }
}
void  State::_sub_Op_MinF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(VREGF, minF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_MinD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD] + INSN_COST;
        DFA_PRODUCTION(VREGD, minD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_ModI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 22;
        DFA_PRODUCTION(IREGINOSP, modI_rule, c)
        DFA_PRODUCTION(IREGI, modI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, modI_rule, c)
        DFA_PRODUCTION(IREGI_R2, modI_rule, c)
        DFA_PRODUCTION(IREGI_R3, modI_rule, c)
        DFA_PRODUCTION(IREGI_R4, modI_rule, c)
    }
}
void  State::_sub_Op_ModL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 38;
        DFA_PRODUCTION(IREGLNOSP, modL_rule, c)
        DFA_PRODUCTION(IREGL, modL_rule, c)
        DFA_PRODUCTION(IREGL_R0, modL_rule, c)
        DFA_PRODUCTION(IREGL_R2, modL_rule, c)
        DFA_PRODUCTION(IREGL_R3, modL_rule, c)
        DFA_PRODUCTION(IREGL_R11, modL_rule, c)
    }
}
void  State::_sub_Op_MoveI2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(VREGF, MoveI2F_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(STACKSLOTF, MoveI2F_reg_stack_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, MoveI2F_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MoveF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, MoveF2I_reg_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, MoveF2I_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(STACKSLOTI, MoveF2I_reg_stack_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTF) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTF]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, MoveF2I_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MoveL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(VREGD, MoveL2D_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(STACKSLOTD, MoveL2D_reg_stack_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, MoveL2D_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MoveD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, MoveD2L_reg_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, MoveD2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD] + INSN_COST;
        DFA_PRODUCTION(STACKSLOTL, MoveD2L_reg_stack_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTD) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, MoveD2L_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MulD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+INSN_COST * 6;
        DFA_PRODUCTION(VREGD, mulD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_MulF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+INSN_COST * 6;
        DFA_PRODUCTION(VREGF, mulF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_MulHiL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 7;
        DFA_PRODUCTION(IREGLNOSP, mulHiL_rReg_rule, c)
        DFA_PRODUCTION(IREGL, mulHiL_rReg_rule, c)
        DFA_PRODUCTION(IREGL_R0, mulHiL_rReg_rule, c)
        DFA_PRODUCTION(IREGL_R2, mulHiL_rReg_rule, c)
        DFA_PRODUCTION(IREGL_R3, mulHiL_rReg_rule, c)
        DFA_PRODUCTION(IREGL_R11, mulHiL_rReg_rule, c)
    }
}
void  State::_sub_Op_MulI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_SUBI_IMMI0_IREGIORL2I]+INSN_COST * 3;
        DFA_PRODUCTION(IREGINOSP, mnegI_0_rule, c)
        DFA_PRODUCTION(IREGI, mnegI_0_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, mnegI_0_rule, c)
        DFA_PRODUCTION(IREGI_R2, mnegI_0_rule, c)
        DFA_PRODUCTION(IREGI_R3, mnegI_0_rule, c)
        DFA_PRODUCTION(IREGI_R4, mnegI_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBI_IMMI0_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_IMMI0_IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, mnegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, mnegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, mnegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, mnegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, mnegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, mnegI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_MULI_IREGIORL2I_IREGIORL2I, _MulI_iRegIorL2I_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, mulI_rule, c)
      }
    }
}
void  State::_sub_Op_MulL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], _SUBL_IMML0__CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[_SUBL_IMML0__CONVI2L_IREGIORL2I_]+INSN_COST * 3;
        DFA_PRODUCTION(IREGLNOSP, smnegL_0_rule, c)
        DFA_PRODUCTION(IREGL, smnegL_0_rule, c)
        DFA_PRODUCTION(IREGL_R0, smnegL_0_rule, c)
        DFA_PRODUCTION(IREGL_R2, smnegL_0_rule, c)
        DFA_PRODUCTION(IREGL_R3, smnegL_0_rule, c)
        DFA_PRODUCTION(IREGL_R11, smnegL_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBL_IMML0__CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[_SUBL_IMML0__CONVI2L_IREGIORL2I_]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, smnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, smnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, smnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, smnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, smnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, smnegL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_];
        DFA_PRODUCTION(_MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_, _MulL__ConvI2L_iRegIorL2I___ConvI2L_iRegIorL2I__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _SUBL_IMML0_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_SUBL_IMML0_IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, mnegL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, mnegL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, mnegL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, mnegL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, mnegL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, mnegL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBL_IMML0_IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_SUBL_IMML0_IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, mnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, mnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, mnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, mnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, mnegL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, mnegL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_MULL_IREGL_IREGL, _MulL_iRegL_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, mulL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, mulL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, mulL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, mulL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, mulL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, mulL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_IREGIORL2I_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_IREGIORL2I_]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, smulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, smulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, smulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, smulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, smulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, smulI_rule, c)
      }
    }
}
void  State::_sub_Op_NegD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 3;
        DFA_PRODUCTION(VREGD, negD_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD];
        DFA_PRODUCTION(_NEGD_VREGD_, _NegD_vRegD__rule, c)
    }
}
void  State::_sub_Op_NegF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 3;
        DFA_PRODUCTION(VREGF, negF_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF];
        DFA_PRODUCTION(_NEGF_VREGF_, _NegF_vRegF__rule, c)
    }
}
void  State::_sub_Op_OnSpinWait(const Node *n){
    {
      unsigned int c = INSN_COST;
        DFA_PRODUCTION(UNIVERSE, onspinwait_rule, c)
    }
}
void  State::_sub_Op_OrI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMILOG) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMILOG] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, orI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI, orI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, orI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R2, orI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R3, orI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R4, orI_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, orI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, orI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, orI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, orI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, orI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, orI_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) &&
        (
#line 13213 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 31) + (n->in(2)->in(2)->get_int() & 31)) & 31)
#line 11039 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extrOrI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extrOrI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extrOrI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extrOrI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extrOrI_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extrOrI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) &&
        (
#line 13213 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 31) + (n->in(2)->in(2)->get_int() & 31)) & 31)
#line 11068 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extrOrI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extrOrI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extrOrI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extrOrI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extrOrI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extrOrI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I_IMMI_M1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I_IMMI_M1]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I_IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_XORI_IREGIORL2I_IMMI_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, OrI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, OrI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, OrI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, OrI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, OrI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, OrI_reg_not_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OrL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLLOG) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLLOG] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, orL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL, orL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R0, orL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R2, orL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R3, orL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R11, orL_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, orL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, orL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, orL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, orL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, orL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, orL_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) &&
        (
#line 13195 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 63) + (n->in(2)->in(2)->get_int() & 63)) & 63)
#line 11561 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, extrOrL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, extrOrL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, extrOrL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, extrOrL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, extrOrL_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, extrOrL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) &&
        (
#line 13195 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
0 == (((n->in(1)->in(2)->get_int() & 63) + (n->in(2)->in(2)->get_int() & 63)) & 63)
#line 11587 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, extrOrL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, extrOrL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, extrOrL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, extrOrL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, extrOrL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, extrOrL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ROTATERIGHT_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__LSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__LSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__RSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__RSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__URSHIFTL_IREGL_IMMI_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IMML_M1]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL__URSHIFTL_IREGL_IMMI_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL_IMML_M1) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL_IMML_M1]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL_IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_XORL_IREGL_IMML_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, OrL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, OrL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, OrL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, OrL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, OrL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, OrL_reg_not_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowAddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowAddI_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowAddI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowSubI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowNegI_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowSubI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowSubI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowMulI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_OVERFLOWMULI_IREGIORL2I_IREGIORL2I, _OverflowMulI_iRegIorL2I_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+5 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowMulI_reg_rule, c)
    }
}
void  State::_sub_Op_OverflowAddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowAddL_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowAddL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowSubL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowNegL_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowSubL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(RFLAGSREG) || _cost[RFLAGSREG] > c) {
        DFA_PRODUCTION(RFLAGSREG, overflowSubL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_OverflowMulL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_OVERFLOWMULL_IREGL_IREGL, _OverflowMulL_iRegL_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL]+6 * INSN_COST;
        DFA_PRODUCTION(RFLAGSREG, overflowMulL_reg_rule, c)
    }
}
void  State::_sub_Op_PartialSubtypeCheck(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R4) && STATE__VALID_CHILD(_kids[1], IREGP_R0) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R4]+_kids[1]->_cost[IREGP_R0];
        DFA_PRODUCTION(_PARTIALSUBTYPECHECK_IREGP_R4_IREGP_R0, _PartialSubtypeCheck_iRegP_R4_iRegP_R0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGP_R4) && STATE__VALID_CHILD(_kids[1], IREGP_R0) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R4]+_kids[1]->_cost[IREGP_R0]+1100;
        DFA_PRODUCTION(IREGP_R5, partialSubtypeCheck_rule, c)
    }
}
void  State::_sub_Op_PopCountI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY4_) &&
        (
#line 8578 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UsePopCountInstruction
#line 12083 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY4_]+INSN_COST * 13;
        DFA_PRODUCTION(IREGINOSP, popCountI_mem_rule, c)
        DFA_PRODUCTION(IREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, popCountI_mem_rule, c)
        DFA_PRODUCTION(IREGI_R2, popCountI_mem_rule, c)
        DFA_PRODUCTION(IREGI_R3, popCountI_mem_rule, c)
        DFA_PRODUCTION(IREGI_R4, popCountI_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 8556 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UsePopCountInstruction
#line 12098 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+INSN_COST * 13;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, popCountI_rule, c)
      }
    }
}
void  State::_sub_Op_PopCountL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY8_) &&
        (
#line 8621 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UsePopCountInstruction
#line 12129 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY8_]+INSN_COST * 13;
        DFA_PRODUCTION(IREGINOSP, popCountL_mem_rule, c)
        DFA_PRODUCTION(IREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, popCountL_mem_rule, c)
        DFA_PRODUCTION(IREGI_R2, popCountL_mem_rule, c)
        DFA_PRODUCTION(IREGI_R3, popCountL_mem_rule, c)
        DFA_PRODUCTION(IREGI_R4, popCountL_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) &&
        (
#line 8601 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
UsePopCountInstruction
#line 12144 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+INSN_COST * 13;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, popCountL_rule, c)
      }
    }
}
void  State::_sub_Op_PopCountVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 1920 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 12175 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + INSN_COST;
        DFA_PRODUCTION(VREG, vpopcountI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 5434 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UsePopCountInstruction && n->as_Vector()->length() == 2
#line 12184 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vpopcount2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 5415 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UsePopCountInstruction && n->as_Vector()->length() == 4
#line 12193 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vpopcount4I_rule, c)
    }
}
void  State::_sub_Op_PrefetchAllocation(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8] + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, prefetchalloc_rule, c)
    }
}
void  State::_sub_Op_RShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI_24]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION(_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24, _RShiftI__LShiftI_iRegIorL2I_immI_24_immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI_16]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION(_RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16, _RShiftI__LShiftI_iRegIorL2I_immI_16_immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, sbfmwI_rule, c)
        DFA_PRODUCTION(IREGI, sbfmwI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, sbfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R2, sbfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R3, sbfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R4, sbfmwI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_RSHIFTI_IREGIORL2I_IMMI, _RShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, rShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, rShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, rShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, rShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, rShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, rShiftI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, rShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, rShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, rShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, rShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, rShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, rShiftI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI_56) && STATE__VALID_CHILD(_kids[1], IMMI_56) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI_56]+_kids[1]->_cost[IMMI_56];
        DFA_PRODUCTION(_RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56, _RShiftL__LShiftL_iRegL_immI_56_immI_56_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI_32) && STATE__VALID_CHILD(_kids[1], IMMI_32) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI_32]+_kids[1]->_cost[IMMI_32];
        DFA_PRODUCTION(_RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32, _RShiftL__LShiftL_iRegL_immI_32_immI_32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI_48) && STATE__VALID_CHILD(_kids[1], IMMI_48) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI_48]+_kids[1]->_cost[IMMI_48];
        DFA_PRODUCTION(_RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48, _RShiftL__LShiftL_iRegL_immI_48_immI_48_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
        DFA_PRODUCTION(IREGLNOSP, sbfmL_rule, c)
        DFA_PRODUCTION(IREGL, sbfmL_rule, c)
        DFA_PRODUCTION(IREGL_R0, sbfmL_rule, c)
        DFA_PRODUCTION(IREGL_R2, sbfmL_rule, c)
        DFA_PRODUCTION(IREGL_R3, sbfmL_rule, c)
        DFA_PRODUCTION(IREGL_R11, sbfmL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_RSHIFTL_IREGL_IMMI, _RShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, rShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, rShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, rShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, rShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, rShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, rShiftL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, rShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, rShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, rShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, rShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, rShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, rShiftL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Rethrow(const Node *n){
    {
      unsigned int c = CALL_COST;
        DFA_PRODUCTION(UNIVERSE, RethrowException_rule, c)
    }
}
void  State::_sub_Op_Return(const Node *n){
    {
      unsigned int c = INSN_COST;
        DFA_PRODUCTION(UNIVERSE, Ret_rule, c)
    }
}
void  State::_sub_Op_RoundDoubleMode(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VREGD, roundD_reg_rule, c)
    }
}
void  State::_sub_Op_RoundDoubleModeV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 3450 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 12370 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VREG, vroundD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5392 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 12379 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECX, vround2D_reg_rule, c)
    }
}
void  State::_sub_Op_RotateLeft(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, rolL_reg_rule, c)
        DFA_PRODUCTION(IREGL, rolL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, rolL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, rolL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, rolL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, rolL_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, rolI_reg_rule, c)
        DFA_PRODUCTION(IREGI, rolI_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, rolI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, rolI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, rolI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, rolI_reg_rule, c)
    }
}
void  State::_sub_Op_RotateRight(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, rorL_reg_rule, c)
        DFA_PRODUCTION(IREGL, rorL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R0, rorL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R2, rorL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R3, rorL_reg_rule, c)
        DFA_PRODUCTION(IREGL_R11, rorL_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IREGI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IREGI] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, rorI_reg_rule, c)
        DFA_PRODUCTION(IREGI, rorI_reg_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, rorI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R2, rorI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R3, rorI_reg_rule, c)
        DFA_PRODUCTION(IREGI_R4, rorI_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, rorL_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, rorL_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, rorL_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, rorL_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, rorL_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, rorL_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGI]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, rorI_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, rorI_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, rorI_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, rorI_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, rorI_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, rorI_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_ROTATERIGHT_IREGL_IMMI, _RotateRight_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_ROTATERIGHT_IREGIORL2I_IMMI, _RotateRight_iRegIorL2I_immI_rule, c)
    }
}
void  State::_sub_Op_SafePoint(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP) ) {
      unsigned int c = _kids[0]->_cost[IREGP] + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, safePoint_rule, c)
    }
}
void  State::_sub_Op_ShenandoahCompareAndExchangeP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 174 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12491 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGPNOSP, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(THREAD_REGP, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(LR_REGP, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(INDIRECT, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
        DFA_PRODUCTION(IREGP_R0, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R1, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R2, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R3, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R4, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R5, compareAndExchangePAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGP_R10, compareAndExchangePAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGPNOSP) || _cost[IREGPNOSP] > c) {
        DFA_PRODUCTION(IREGPNOSP, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP) || _cost[IREGP] > c) {
        DFA_PRODUCTION(IREGP, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(INLINE_CACHE_REGP) || _cost[INLINE_CACHE_REGP] > c) {
        DFA_PRODUCTION(INLINE_CACHE_REGP, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(THREAD_REGP) || _cost[THREAD_REGP] > c) {
        DFA_PRODUCTION(THREAD_REGP, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(LR_REGP) || _cost[LR_REGP] > c) {
        DFA_PRODUCTION(LR_REGP, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION(INDIRECT, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM2) || _cost[VMEM2] > c) {
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM4) || _cost[VMEM4] > c) {
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM8) || _cost[VMEM8] > c) {
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEM16) || _cost[VMEM16] > c) {
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY1) || _cost[MEMORY1] > c) {
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY2) || _cost[MEMORY2] > c) {
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY4) || _cost[MEMORY4] > c) {
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY8) || _cost[MEMORY8] > c) {
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(VMEMA) || _cost[VMEMA] > c) {
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R0) || _cost[IREGP_R0] > c) {
        DFA_PRODUCTION(IREGP_R0, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R1) || _cost[IREGP_R1] > c) {
        DFA_PRODUCTION(IREGP_R1, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R2) || _cost[IREGP_R2] > c) {
        DFA_PRODUCTION(IREGP_R2, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R3) || _cost[IREGP_R3] > c) {
        DFA_PRODUCTION(IREGP_R3, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R4) || _cost[IREGP_R4] > c) {
        DFA_PRODUCTION(IREGP_R4, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R5) || _cost[IREGP_R5] > c) {
        DFA_PRODUCTION(IREGP_R5, compareAndExchangeP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGP_R10) || _cost[IREGP_R10] > c) {
        DFA_PRODUCTION(IREGP_R10, compareAndExchangeP_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_ShenandoahCompareAndExchangeN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) &&
        (
#line 157 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGNNOSP, compareAndExchangeNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGN, compareAndExchangeNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGN_R0, compareAndExchangeNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGN_R2, compareAndExchangeNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGN_R3, compareAndExchangeNAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGNNOSP) || _cost[IREGNNOSP] > c) {
        DFA_PRODUCTION(IREGNNOSP, compareAndExchangeN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN) || _cost[IREGN] > c) {
        DFA_PRODUCTION(IREGN, compareAndExchangeN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R0) || _cost[IREGN_R0] > c) {
        DFA_PRODUCTION(IREGN_R0, compareAndExchangeN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R2) || _cost[IREGN_R2] > c) {
        DFA_PRODUCTION(IREGN_R2, compareAndExchangeN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGN_R3) || _cost[IREGN_R3] > c) {
        DFA_PRODUCTION(IREGN_R3, compareAndExchangeN_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_ShenandoahCompareAndSwapN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) &&
        (
#line 105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12629 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapNAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapN_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_ShenandoahCompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 88 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12670 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, compareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI, compareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, compareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R2, compareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R3, compareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R4, compareAndSwapPAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, compareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, compareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, compareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, compareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, compareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, compareAndSwapP_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_ShenandoahWeakCompareAndSwapN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) &&
        (
#line 226 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12711 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapNAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapNAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGN_IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGN_IREGN]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapN_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapN_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_ShenandoahWeakCompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) &&
        (
#line 245 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/gc/shenandoah/shenandoah_aarch64.ad"
needs_acquiring_load_exclusive(n)
#line 12752 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI, weakCompareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapPAcq_shenandoah_rule, c)
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapPAcq_shenandoah_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGP_IREGP]+2 * VOLATILE_REF_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, weakCompareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, weakCompareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, weakCompareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, weakCompareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, weakCompareAndSwapP_shenandoah_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, weakCompareAndSwapP_shenandoah_rule, c)
      }
    }
}
void  State::_sub_Op_CopySignD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_BINARY_VREGD_VREGD] + INSN_COST;
        DFA_PRODUCTION(VREGD, copySignD_reg_rule, c)
    }
}
void  State::_sub_Op_CopySignF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(VREGF, copySignF_reg_rule, c)
    }
}
void  State::_sub_Op_SignumD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGD_VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[_BINARY_VREGD_VREGD] + INSN_COST;
        DFA_PRODUCTION(VREGD, signumD_reg_rule, c)
    }
}
void  State::_sub_Op_SignumF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], _BINARY_VREGF_VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[_BINARY_VREGF_VREGF] + INSN_COST;
        DFA_PRODUCTION(VREGF, signumF_reg_rule, c)
    }
}
void  State::_sub_Op_SqrtD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+INSN_COST * 50;
        DFA_PRODUCTION(VREGD, sqrtD_reg_rule, c)
    }
}
void  State::_sub_Op_SqrtF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+INSN_COST * 50;
        DFA_PRODUCTION(VREGF, sqrtF_reg_rule, c)
    }
}
void  State::_sub_Op_StoreB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeB_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 7882 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12833 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeimmB0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 7868 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12844 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeB_rule, c)
      }
    }
}
void  State::_sub_Op_StoreC(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeC_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 7909 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12861 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeimmC0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY2) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 7896 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12872 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY2]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeC_rule, c)
      }
    }
}
void  State::_sub_Op_StoreCM(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY1) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[MEMORY1]+_kids[1]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, storeimmCM0_rule, c)
    }
}
void  State::_sub_Op_StorePConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_IREGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[_BINARY_IREGP_IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(RFLAGSREG, storePConditional_rule, c)
    }
}
void  State::_sub_Op_StoreIConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGINOSP_IREGINOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGINOSP_IREGINOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(RFLAGSREG, storeIConditional_rule, c)
    }
}
void  State::_sub_Op_StoreLConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGLNOSP_IREGLNOSP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_IREGLNOSP_IREGLNOSP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(RFLAGSREG, storeLConditional_rule, c)
    }
}
void  State::_sub_Op_StoreD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREGD] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeD_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], VREGD) &&
        (
#line 8051 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12913 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[VREGD] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeD_rule, c)
      }
    }
}
void  State::_sub_Op_StoreF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREGF] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeF_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], VREGF) &&
        (
#line 8034 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12930 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[VREGF] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeF_rule, c)
      }
    }
}
void  State::_sub_Op_StoreI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGIORL2I] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeI_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], IMMI0) &&
        (
#line 7937 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12947 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[IMMI0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeimmI0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) &&
        (
#line 7924 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12958 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeI_rule, c)
      }
    }
}
void  State::_sub_Op_StoreL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGL] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeL_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], IMML0) &&
        (
#line 7965 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12975 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[IMML0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeimmL0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], IREGL) &&
        (
#line 7951 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 12986 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeL_rule, c)
      }
    }
}
void  State::_sub_Op_StoreP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGP) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGP] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeP_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], IMMP0) &&
        (
#line 7993 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 13003 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[IMMP0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeimmP0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY8) && STATE__VALID_CHILD(_kids[1], IREGP) &&
        (
#line 7979 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 13014 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY8]+_kids[1]->_cost[IREGP] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeP_rule, c)
      }
    }
}
void  State::_sub_Op_StoreN(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], IREGN) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[IREGN] + VOLATILE_REF_COST;
        DFA_PRODUCTION(UNIVERSE, storeN_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], IMMN0) &&
        (
#line 8020 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 13031 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[IMMN0] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeImmN0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], IREGN) &&
        (
#line 8007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 13042 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[IREGN] + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeN_rule, c)
      }
    }
}
void  State::_sub_Op_StoreNKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY4) && STATE__VALID_CHILD(_kids[1], IREGN) &&
        (
#line 8064 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
!needs_releasing_store(n)
#line 13055 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY4]+_kids[1]->_cost[IREGN] + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, storeNKlass_rule, c)
    }
}
void  State::_sub_Op_StrComp(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 5635 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU)
#line 13066 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, string_compareUU_sve_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 5612 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL)
#line 13075 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareUL_sve_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 5589 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU)
#line 13086 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareLU_sve_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 5566 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL)
#line 13097 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareLL_sve_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 16745 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU)
#line 13108 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareLU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 16725 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL)
#line 13119 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareUL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 16707 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL)
#line 13130 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R4) &&
        (
#line 16689 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU)
#line 13141 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_compareU_rule, c)
      }
    }
}
void  State::_sub_Op_StrCompressedCopy(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R2) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R1_IREGI_R3) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R2]+_kids[1]->_cost[_BINARY_IREGP_R1_IREGI_R3] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, string_compress_rule, c)
    }
}
void  State::_sub_Op_StrEquals(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGP_R3) && STATE__VALID_CHILD(_kids[1], IREGI_R4) &&
        (
#line 16944 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrEqualsNode*)n)->encoding() == StrIntrinsicNode::UU
#line 13160 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGP_R3]+_kids[1]->_cost[IREGI_R4] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, string_equalsU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGP_R3) && STATE__VALID_CHILD(_kids[1], IREGI_R4) &&
        (
#line 16928 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrEqualsNode*)n)->encoding() == StrIntrinsicNode::LL
#line 13169 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGP_R3]+_kids[1]->_cost[IREGI_R4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_equalsL_rule, c)
      }
    }
}
void  State::_sub_Op_StrIndexOf(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IMMI_1) &&
        (
#line 16870 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::UL
#line 13182 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IMMI_1] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, string_indexof_conUL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IMMI_LE_4) &&
        (
#line 16849 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::LL
#line 13191 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IMMI_LE_4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexof_conLL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IMMI_LE_4) &&
        (
#line 16828 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::UU
#line 13202 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IMMI_LE_4] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexof_conUU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R2) &&
        (
#line 16807 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::UL
#line 13213 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R2] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexofUL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R2) &&
        (
#line 16786 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::LL
#line 13224 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R2] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexofLL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R4) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R3_IREGI_R2) &&
        (
#line 16765 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
((StrIndexOfNode*)n)->encoding() == StrIntrinsicNode::UU
#line 13235 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R4]+_kids[1]->_cost[_BINARY_IREGP_R3_IREGI_R2] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexofUU_rule, c)
      }
    }
}
void  State::_sub_Op_StrIndexOfChar(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], IREGI_R3) &&
        (
#line 5541 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::U)
#line 13248 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[IREGI_R3] + INSN_COST;
        DFA_PRODUCTION(IREGI_R0, stringU_indexof_char_sve_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], IREGI_R3) &&
        (
#line 5523 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
(UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::L)
#line 13257 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[IREGI_R3] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, stringL_indexof_char_sve_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], IREGI_R3) &&
        (
#line 16911 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::L)
#line 13268 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[IREGI_R3] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, stringL_indexof_char_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGP_R1_IREGI_R2) && STATE__VALID_CHILD(_kids[1], IREGI_R3) &&
        (
#line 16892 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64.ad"
(UseSVE == 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::U)
#line 13279 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGP_R1_IREGI_R2]+_kids[1]->_cost[IREGI_R3] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, string_indexof_char_rule, c)
      }
    }
}
void  State::_sub_Op_StrInflatedCopy(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGP_R0) && STATE__VALID_CHILD(_kids[1], _BINARY_IREGP_R1_IREGI_R2) ) {
      unsigned int c = _kids[0]->_cost[IREGP_R0]+_kids[1]->_cost[_BINARY_IREGP_R1_IREGI_R2] + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, string_inflate_rule, c)
    }
}
void  State::_sub_Op_SubD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD];
        DFA_PRODUCTION(_SUBD_VREGD_VREGD, _SubD_vRegD_vRegD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREGD) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREGD]+INSN_COST * 5;
        DFA_PRODUCTION(VREGD, subD_reg_reg_rule, c)
    }
}
void  State::_sub_Op_SubF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF];
        DFA_PRODUCTION(_SUBF_VREGF_VREGF, _SubF_vRegF_vRegF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREGF) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREGF]+INSN_COST * 5;
        DFA_PRODUCTION(VREGF, subF_reg_reg_rule, c)
    }
}
void  State::_sub_Op_SubI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_65535_IMMIEXT]+1.9 * INSN_COST;
        DFA_PRODUCTION(IREGINOSP, SubExtI_uxth_and_shift_rule, c)
        DFA_PRODUCTION(IREGI, SubExtI_uxth_and_shift_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, SubExtI_uxth_and_shift_rule, c)
        DFA_PRODUCTION(IREGI_R2, SubExtI_uxth_and_shift_rule, c)
        DFA_PRODUCTION(IREGI_R3, SubExtI_uxth_and_shift_rule, c)
        DFA_PRODUCTION(IREGI_R4, SubExtI_uxth_and_shift_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__ANDI_IREGIORL2I_IMMI_255_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubExtI_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubExtI_uxtb_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_16_IMMI_16_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubExtI_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubExtI_sxth_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI__RSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubExtI_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubExtI_sxtb_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ANDI_IREGIORL2I_IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ANDI_IREGIORL2I_IMMI_65535] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubExtI_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubExtI_uxth_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ANDI_IREGIORL2I_IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ANDI_IREGIORL2I_IMMI_255] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubExtI_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubExtI_uxtb_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubI_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubI_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, SubI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, SubI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, SubI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, SubI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, SubI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, SubI_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_SUBI_IMMI0_IREGIORL2I, _SubI_immI0_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _MULI_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_MULI_IREGIORL2I_IREGIORL2I]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, msubI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, msubI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, msubI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, msubI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, msubI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, msubI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, negI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, negI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, negI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, negI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, negI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, negI_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMIADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMIADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, subI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, subI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, subI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, subI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, subI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, subI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, subI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, subI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, subI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, subI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, subI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, subI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_SubL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_4294967295_IMMIEXT]+1.9 * INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxtw_and_shift_rule, c)
        DFA_PRODUCTION(IREGL, SubExtL_uxtw_and_shift_rule, c)
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxtw_and_shift_rule, c)
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxtw_and_shift_rule, c)
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxtw_and_shift_rule, c)
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxtw_and_shift_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_65535_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxth_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxth_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__ANDL_IREGL_IMML_255_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxtb_and_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxtb_and_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__CONVI2L_IREGIORL2I__IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtI_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtI_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_32_IMMI_32_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_sxtw_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_sxtw_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_48_IMMI_48_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_sxth_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_sxth_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL__RSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56_IMMIEXT]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_sxtb_shift_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_sxtb_shift_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_4294967295) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_4294967295] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxtw_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxtw_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_65535) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_65535] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxth_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxth_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ANDL_IREGL_IMML_255) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ANDL_IREGL_IMML_255] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtL_uxtb_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtL_uxtb_and_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubExtI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubExtI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubL_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubL_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, SubL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, SubL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, SubL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, SubL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, SubL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, SubL_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], _CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[_CONVI2L_IREGIORL2I_];
        DFA_PRODUCTION(_SUBL_IMML0__CONVI2L_IREGIORL2I_, _SubL_immL0__ConvI2L_iRegIorL2I__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGLNOSP) && STATE__VALID_CHILD(_kids[1], _MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_) ) {
      unsigned int c = _kids[0]->_cost[IREGLNOSP]+_kids[1]->_cost[_MULL__CONVI2L_IREGIORL2I___CONVI2L_IREGIORL2I_]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, smsubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, smsubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, smsubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, smsubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, smsubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, smsubL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_SUBL_IMML0_IREGL, _SubL_immL0_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _MULL_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_MULL_IREGL_IREGL]+INSN_COST * 5;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, msubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, msubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, msubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, msubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, msubL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, msubL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, negL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, negL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, negL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, negL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, negL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, negL_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLADDSUB) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLADDSUB] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, subL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, subL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, subL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, subL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, subL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, subL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, subL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, subL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, subL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, subL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, subL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, subL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_TailCall(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGPNOSP) && STATE__VALID_CHILD(_kids[1], INLINE_CACHE_REGP) ) {
      unsigned int c = _kids[0]->_cost[IREGPNOSP]+_kids[1]->_cost[INLINE_CACHE_REGP] + CALL_COST;
        DFA_PRODUCTION(UNIVERSE, TailCalljmpInd_rule, c)
    }
}
void  State::_sub_Op_TailJump(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGPNOSP) && STATE__VALID_CHILD(_kids[1], IREGP_R0) ) {
      unsigned int c = _kids[0]->_cost[IREGPNOSP]+_kids[1]->_cost[IREGP_R0] + CALL_COST;
        DFA_PRODUCTION(UNIVERSE, TailjmpInd_rule, c)
    }
}
void  State::_sub_Op_ThreadLocal(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION(THREAD_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION(IREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION(INLINE_CACHE_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION(LR_REGP, tlsLoadP_rule, c)
        DFA_PRODUCTION(INDIRECT, tlsLoadP_rule, c)
        DFA_PRODUCTION(VMEM2, indirect_rule, c)
        DFA_PRODUCTION(VMEM4, indirect_rule, c)
        DFA_PRODUCTION(VMEM8, indirect_rule, c)
        DFA_PRODUCTION(VMEM16, indirect_rule, c)
        DFA_PRODUCTION(MEMORY1, indirect_rule, c)
        DFA_PRODUCTION(MEMORY2, indirect_rule, c)
        DFA_PRODUCTION(MEMORY4, indirect_rule, c)
        DFA_PRODUCTION(MEMORY8, indirect_rule, c)
        DFA_PRODUCTION(MEMORY, indirect_rule, c)
        DFA_PRODUCTION(VMEMA, indirect_rule, c)
    }
}
void  State::_sub_Op_URShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI_24]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION(_URSHIFTI__LSHIFTI_IREGIORL2I_IMMI_24_IMMI_24, _URShiftI__LShiftI_iRegIorL2I_immI_24_immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
        DFA_PRODUCTION(IREGINOSP, ubfmwI_rule, c)
        DFA_PRODUCTION(IREGI, ubfmwI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, ubfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R2, ubfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R3, ubfmwI_rule, c)
        DFA_PRODUCTION(IREGI_R4, ubfmwI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_URSHIFTI_IREGIORL2I_IMMI, _URShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, urShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, urShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, urShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, urShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, urShiftI_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, urShiftI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, urShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, urShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, urShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, urShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, urShiftI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, urShiftI_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI_56) && STATE__VALID_CHILD(_kids[1], IMMI_56) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI_56]+_kids[1]->_cost[IMMI_56];
        DFA_PRODUCTION(_URSHIFTL__LSHIFTL_IREGL_IMMI_56_IMMI_56, _URShiftL__LShiftL_iRegL_immI_56_immI_56_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMMI]+INSN_COST * 2;
        DFA_PRODUCTION(IREGLNOSP, ubfmL_rule, c)
        DFA_PRODUCTION(IREGL, ubfmL_rule, c)
        DFA_PRODUCTION(IREGL_R0, ubfmL_rule, c)
        DFA_PRODUCTION(IREGL_R2, ubfmL_rule, c)
        DFA_PRODUCTION(IREGL_R3, ubfmL_rule, c)
        DFA_PRODUCTION(IREGL_R11, ubfmL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION(_URSHIFTL_IREGL_IMMI, _URShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X_IREGP_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X_IREGP_]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, urShiftP_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, urShiftP_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, urShiftP_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, urShiftP_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, urShiftP_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, urShiftP_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, urShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, urShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, urShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, urShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, urShiftL_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, urShiftL_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGIORL2I]+INSN_COST * 2;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, urShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, urShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, urShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, urShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, urShiftL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, urShiftL_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_XorI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMILOG) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMILOG] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, xorI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI, xorI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, xorI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R2, xorI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R3, xorI_reg_imm_rule, c)
        DFA_PRODUCTION(IREGI_R4, xorI_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, xorI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, xorI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, xorI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, xorI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, xorI_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, xorI_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I__LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I__LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I__LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI_IREGIORL2I__LSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_LSHIFTI_IREGIORL2I_IMMI];
        DFA_PRODUCTION(_XORI_IREGIORL2I__LSHIFTI_IREGIORL2I_IMMI, _XorI_iRegIorL2I__LShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__LSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI__LSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI__LSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_XORI__LSHIFTI_IREGIORL2I_IMMI_IREGIORL2I, _XorI__LShiftI_iRegIorL2I_immI_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I__ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I__ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I__ROTATERIGHT_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI_IREGIORL2I__ROTATERIGHT_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI];
        DFA_PRODUCTION(_XORI_IREGIORL2I__ROTATERIGHT_IREGIORL2I_IMMI, _XorI_iRegIorL2I__RotateRight_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IREGIORL2I]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI__ROTATERIGHT_IREGIORL2I_IMMI_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IREGIORL2I, _XorI__RotateRight_iRegIorL2I_immI_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I__RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I__RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I__RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI_IREGIORL2I__RSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _RSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_RSHIFTI_IREGIORL2I_IMMI];
        DFA_PRODUCTION(_XORI_IREGIORL2I__RSHIFTI_IREGIORL2I_IMMI, _XorI_iRegIorL2I__RShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__RSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI__RSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI__RSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_XORI__RSHIFTI_IREGIORL2I_IMMI_IREGIORL2I, _XorI__RShiftI_iRegIorL2I_immI_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I__URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I__URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I__URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI_IREGIORL2I__URSHIFTI_IREGIORL2I_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_IREGIORL2I_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[_URSHIFTI_IREGIORL2I_IMMI];
        DFA_PRODUCTION(_XORI_IREGIORL2I__URSHIFTI_IREGIORL2I_IMMI, _XorI_iRegIorL2I__URShiftI_iRegIorL2I_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI__URSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+_kids[1]->_cost[IMMI_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI__URSHIFTI_IREGIORL2I_IMMI_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI__URSHIFTI_IREGIORL2I_IMMI_IREGIORL2I]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_XORI__URSHIFTI_IREGIORL2I_IMMI_IREGIORL2I, _XorI__URShiftI_iRegIorL2I_immI_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION(_XORI__LSHIFTI_IREGIORL2I_IMMI_IMMI_M1, _XorI__LShiftI_iRegIorL2I_immI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION(_XORI__ROTATERIGHT_IREGIORL2I_IMMI_IMMI_M1, _XorI__RotateRight_iRegIorL2I_immI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION(_XORI__RSHIFTI_IREGIORL2I_IMMI_IMMI_M1, _XorI__RShiftI_iRegIorL2I_immI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_IREGIORL2I_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_IREGIORL2I_IMMI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION(_XORI__URSHIFTI_IREGIORL2I_IMMI_IMMI_M1, _XorI__URShiftI_iRegIorL2I_immI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORI_IREGIORL2I_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORI_IREGIORL2I_IREGIORL2I]+_kids[1]->_cost[IMMI_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) && STATE__VALID_CHILD(_kids[1], _XORI_IREGIORL2I_IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1]+_kids[1]->_cost[_XORI_IREGIORL2I_IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, XorI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, XorI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, XorI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, XorI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, XorI_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, XorI_reg_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IREGIORL2I) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IREGIORL2I];
        DFA_PRODUCTION(_XORI_IREGIORL2I_IREGIORL2I, _XorI_iRegIorL2I_iRegIorL2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION(_XORI_IREGIORL2I_IMMI_M1, _XorI_iRegIorL2I_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[IMMI_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, regI_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, regI_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, regI_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, regI_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, regI_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, regI_not_reg_rule, c)
      }
    }
}
void  State::_sub_Op_XorL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMMLLOG) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMMLLOG] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, xorL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL, xorL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R0, xorL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R2, xorL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R3, xorL_reg_imm_rule, c)
        DFA_PRODUCTION(IREGL_R11, xorL_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, xorL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, xorL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, xorL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, xorL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, xorL_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, xorL_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ROTATERIGHT_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL__LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL__LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL__LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL_IREGL__LSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _LSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_LSHIFTL_IREGL_IMMI];
        DFA_PRODUCTION(_XORL_IREGL__LSHIFTL_IREGL_IMMI, _XorL_iRegL__LShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__LSHIFTL_IREGL_IMMI_IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IREGL]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL__LSHIFTL_IREGL_IMMI_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL__LSHIFTL_IREGL_IMMI_IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_LShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_LShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_XORL__LSHIFTL_IREGL_IMMI_IREGL, _XorL__LShiftL_iRegL_immI_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL__ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL__ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL__ROTATERIGHT_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL_IREGL__ROTATERIGHT_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _ROTATERIGHT_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_ROTATERIGHT_IREGL_IMMI];
        DFA_PRODUCTION(_XORL_IREGL__ROTATERIGHT_IREGL_IMMI, _XorL_iRegL__RotateRight_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__ROTATERIGHT_IREGL_IMMI_IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IREGL]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL__ROTATERIGHT_IREGL_IMMI_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL__ROTATERIGHT_IREGL_IMMI_IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RotateRight_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RotateRight_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_XORL__ROTATERIGHT_IREGL_IMMI_IREGL, _XorL__RotateRight_iRegL_immI_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL__RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL__RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL__RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL_IREGL__RSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _RSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_RSHIFTL_IREGL_IMMI];
        DFA_PRODUCTION(_XORL_IREGL__RSHIFTL_IREGL_IMMI, _XorL_iRegL__RShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__RSHIFTL_IREGL_IMMI_IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IREGL]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL__RSHIFTL_IREGL_IMMI_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL__RSHIFTL_IREGL_IMMI_IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_RShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_RShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_XORL__RSHIFTL_IREGL_IMMI_IREGL, _XorL__RShiftL_iRegL_immI_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL__URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL__URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_not_reg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_not_reg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL__URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL_IREGL__URSHIFTL_IREGL_IMMI]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], _URSHIFTL_IREGL_IMMI) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[_URSHIFTL_IREGL_IMMI];
        DFA_PRODUCTION(_XORL_IREGL__URSHIFTL_IREGL_IMMI, _XorL_iRegL__URShiftL_iRegL_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL__URSHIFTL_IREGL_IMMI_IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IREGL]+_kids[1]->_cost[IMML_M1]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_not_reg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_not_reg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL__URSHIFTL_IREGL_IMMI_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL__URSHIFTL_IREGL_IMMI_IREGL]+1.9 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_URShift_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_URShift_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_XORL__URSHIFTL_IREGL_IMMI_IREGL, _XorL__URShiftL_iRegL_immI_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION(_XORL__LSHIFTL_IREGL_IMMI_IMML_M1, _XorL__LShiftL_iRegL_immI_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ROTATERIGHT_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_ROTATERIGHT_IREGL_IMMI]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION(_XORL__ROTATERIGHT_IREGL_IMMI_IMML_M1, _XorL__RotateRight_iRegL_immI_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION(_XORL__RSHIFTL_IREGL_IMMI_IMML_M1, _XorL__RShiftL_iRegL_immI_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTL_IREGL_IMMI) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTL_IREGL_IMMI]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION(_XORL__URSHIFTL_IREGL_IMMI_IMML_M1, _XorL__URShiftL_iRegL_immI_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORL_IREGL_IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[_XORL_IREGL_IREGL]+_kids[1]->_cost[IMML_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_not_reg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_not_reg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) && STATE__VALID_CHILD(_kids[1], _XORL_IREGL_IREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1]+_kids[1]->_cost[_XORL_IREGL_IREGL] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, XorL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, XorL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, XorL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, XorL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, XorL_reg_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, XorL_reg_not_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IREGL) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IREGL];
        DFA_PRODUCTION(_XORL_IREGL_IREGL, _XorL_iRegL_iRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_M1];
        DFA_PRODUCTION(_XORL_IREGL_IMML_M1, _XorL_iRegL_immL_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[IMML_M1] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, regL_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, regL_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, regL_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, regL_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, regL_not_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, regL_not_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AddVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _MULVB_VREG_VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1594 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVB_VREG_VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vmlaB_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVB_VREG_VREG) &&
        (
#line 1594 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15605 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVB_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlaB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMBADDSUBV_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 941 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15616 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMBADDSUBV_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmB_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMBADDSUBV_) &&
        (
#line 941 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15627 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMBADDSUBV_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 861 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15638 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddB_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 781 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15649 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVB_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5224 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 15660 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVB_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrla16B_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _URSHIFTVB_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5224 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 15669 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_URSHIFTVB_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrla16B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVB_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5209 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15680 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVB_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrla8B_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _URSHIFTVB_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5209 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15689 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_URSHIFTVB_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrla8B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVB_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5128 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 15700 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVB_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa16B_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTVB_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5128 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 15711 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTVB_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa16B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVB_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5114 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15722 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVB_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa8B_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTVB_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5114 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15733 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTVB_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa8B_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3562 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 15744 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vadd16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3547 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 15756 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vadd8B_rule, c)
      }
    }
}
void  State::_sub_Op_AddVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _MULVS_VREG_VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1608 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15769 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVS_VREG_VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vmlaS_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVS_VREG_VREG) &&
        (
#line 1608 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15778 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVS_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlaS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMIADDSUBV_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 957 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15789 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMIADDSUBV_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmS_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMIADDSUBV_) &&
        (
#line 957 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15800 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMIADDSUBV_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 874 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15811 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddS_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 794 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15822 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVS_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5254 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15833 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVS_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrla8S_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _URSHIFTVS_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5254 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15842 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_URSHIFTVS_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrla8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVS_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5239 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 15853 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVS_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrla4S_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _URSHIFTVS_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5239 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 15862 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_URSHIFTVS_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrla4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVS_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5156 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15873 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVS_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa8S_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTVS_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5156 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15884 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTVS_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa8S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVS_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5142 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 15895 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVS_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa4S_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTVS_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5142 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 15906 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTVS_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa4S_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULVS_VECX_VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3979 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15917 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVS_VECX_VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla8S_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _MULVS_VECX_VECX) &&
        (
#line 3979 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15928 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_MULVS_VECX_VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULVS_VECD_VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3964 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 15940 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVS_VECD_VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmla4S_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _MULVS_VECD_VECD) &&
        (
#line 3964 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 15952 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_MULVS_VECD_VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmla4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3591 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 15963 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vadd8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3576 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 15975 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vadd4S_rule, c)
      }
    }
}
void  State::_sub_Op_AddVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _MULVI_VREG_VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1622 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15988 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVI_VREG_VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vmlaI_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVI_VREG_VREG) &&
        (
#line 1622 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 15997 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVI_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlaI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMIADDSUBV_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 973 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16008 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMIADDSUBV_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMIADDSUBV_) &&
        (
#line 973 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16019 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMIADDSUBV_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 887 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16030 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 807 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16041 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVI_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5282 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16052 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVI_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrla4I_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _URSHIFTVI_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5282 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16061 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_URSHIFTVI_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrla4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVI_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5269 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16072 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVI_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrla2I_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _URSHIFTVI_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5269 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16081 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_URSHIFTVI_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrla2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVI_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5183 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16092 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVI_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa4I_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTVI_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5183 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16103 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTVI_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVI_VECD__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5170 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16114 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVI_VECD__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa2I_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTVI_VECD__RSHIFTCNTV_IMMI_) &&
        (
#line 5170 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16125 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTVI_VECD__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsraa2I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULVI_VECX_VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16136 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVI_VECX_VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla4I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _MULVI_VECX_VECX) &&
        (
#line 4007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16147 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_MULVI_VECX_VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULVI_VECD_VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3993 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16158 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVI_VECD_VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmla2I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _MULVI_VECD_VECD) &&
        (
#line 3993 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16169 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_MULVI_VECD_VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmla2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3619 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16180 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vadd4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3605 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16191 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vadd2I_rule, c)
      }
    }
}
void  State::_sub_Op_AddReductionVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2317 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16205 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_addI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_addI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_addI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_addI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_addI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_addI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2259 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16221 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_addI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_addI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_addI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_addI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_addI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_addI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2188 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16251 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_addI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_addI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_addI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_addI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_addI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_addI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2130 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16281 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_addI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_addI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3334 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 16310 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3315 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 16339 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 630 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 16368 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 610 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 16397 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 590 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 16426 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 570 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 16455 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_add8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_add8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_add8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_add8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_add8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_add8B_rule, c)
      }
    }
}
void  State::_sub_Op_AddVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _MULVL_VREG_VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1636 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16486 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_MULVL_VREG_VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vmlaL_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVL_VREG_VREG) &&
        (
#line 1636 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16495 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVL_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlaL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMMLADDSUBV_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 989 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16506 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMMLADDSUBV_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMMLADDSUBV_) &&
        (
#line 989 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16517 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMMLADDSUBV_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddImmL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 900 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16528 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 820 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16539 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTVL_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5295 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16550 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTVL_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrla2L_imm_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _URSHIFTVL_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5295 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16559 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_URSHIFTVL_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrla2L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTVL_VECX__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5196 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16570 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTVL_VECX__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa2L_imm_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTVL_VECX__RSHIFTCNTV_IMMI_) &&
        (
#line 5196 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16581 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTVL_VECX__RSHIFTCNTV_IMMI_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsraa2L_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3633 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16592 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vadd2L_rule, c)
      }
    }
}
void  State::_sub_Op_AddReductionVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2339 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16606 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_addL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_addL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_addL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_addL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_addL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_addL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2275 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16621 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_addL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_addL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_addL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_addL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_addL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_addL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2208 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16648 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_addL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_addL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_addL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_addL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_addL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_addL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2146 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16675 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_addL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_addL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_add2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_add2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_add2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_add2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_add2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_add2L_rule, c)
      }
    }
}
void  State::_sub_Op_AddVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 913 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16724 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vaddF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 833 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16733 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3661 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 16744 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vadd4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3647 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 16753 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vadd2F_rule, c)
    }
}
void  State::_sub_Op_AddReductionVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2358 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16765 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREGF, reduce_addF_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2290 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16775 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_addF_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2225 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16787 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_addF_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2161 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16799 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_addF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_add4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_add2F_rule, c)
      }
    }
}
void  State::_sub_Op_AddVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 926 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16824 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vaddD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 846 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16833 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vaddD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vadd2D_rule, c)
    }
}
void  State::_sub_Op_AddReductionVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2376 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16851 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREGD, reduce_addD_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2303 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16861 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_addD_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2241 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 16873 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_addD_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2174 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 16885 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_addD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_add2D_rule, c)
      }
    }
}
void  State::_sub_Op_SubVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4453 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16904 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubB_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4373 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16913 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVB_VREG_VREG) &&
        (
#line 1652 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16924 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVB_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlsB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3705 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 16935 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsub16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3690 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 16945 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsub8B_rule, c)
    }
}
void  State::_sub_Op_SubVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4466 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16956 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubS_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4386 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16965 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVS_VREG_VREG) &&
        (
#line 1666 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 16976 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVS_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlsS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _MULVS_VECX_VECX) &&
        (
#line 4081 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 16987 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_MULVS_VECX_VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmls8S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _MULVS_VECD_VECD) &&
        (
#line 4067 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 16997 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_MULVS_VECD_VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmls4S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3734 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 17006 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsub8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3719 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 17018 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsub4S_rule, c)
      }
    }
}
void  State::_sub_Op_SubVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4479 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17031 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubI_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4399 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17040 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVI_VREG_VREG) &&
        (
#line 1680 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17051 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVI_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlsI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _MULVI_VECX_VECX) &&
        (
#line 4107 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17062 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_MULVI_VECX_VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmls4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _MULVI_VECD_VECD) &&
        (
#line 4094 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17071 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_MULVI_VECD_VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmls2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3762 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17080 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsub4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3748 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17091 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsub2I_rule, c)
      }
    }
}
void  State::_sub_Op_SubVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4492 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17104 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubL_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4412 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17113 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _MULVL_VREG_VREG) &&
        (
#line 1694 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17124 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_MULVL_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmlsL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3776 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17135 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsub2L_rule, c)
    }
}
void  State::_sub_Op_SubVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4505 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17146 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4425 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17155 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3804 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17166 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsub4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3790 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17175 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsub2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_SUBVF_VECX_VECX, _SubVF_vecX_vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_SUBVF_VECD_VECD, _SubVF_vecD_vecD_rule, c)
    }
}
void  State::_sub_Op_SubVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4518 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17194 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsubD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 4438 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17203 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsubD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3818 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17214 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsub2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_SUBVD_VECX_VECX, _SubVD_vecX_vecX_rule, c)
    }
}
void  State::_sub_Op_MulVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1784 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17229 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulB_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1708 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17238 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_MULVB_VREG_VREG, _MulVB_vReg_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3849 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 17253 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3834 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 17263 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmul8B_rule, c)
    }
}
void  State::_sub_Op_MulVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1797 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17274 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulS_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1720 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17283 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_MULVS_VREG_VREG, _MulVS_vReg_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_MULVS_VECX_VECX, _MulVS_vecX_vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_MULVS_VECD_VECD, _MulVS_vecD_vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3878 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 17306 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul8S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3863 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 17316 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmul4S_rule, c)
    }
}
void  State::_sub_Op_MulVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1810 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17327 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulI_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1732 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17336 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_MULVI_VREG_VREG, _MulVI_vReg_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_MULVI_VECX_VECX, _MulVI_vecX_vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_MULVI_VECD_VECD, _MulVI_vecD_vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3906 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17359 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3892 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17368 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmul2I_rule, c)
    }
}
void  State::_sub_Op_MulReductionVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3373 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 17379 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_mul4I_rule, c)
        DFA_PRODUCTION(IREGI, reduce_mul4I_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_mul4I_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_mul4I_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_mul4I_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_mul4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3353 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 17394 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_mul2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_mul2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_mul2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_mul2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_mul2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_mul2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 775 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 17423 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_mul8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_mul8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_mul8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_mul8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_mul8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_mul8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 745 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 17452 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_mul4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_mul4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_mul4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_mul4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_mul4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_mul4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 703 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 17481 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_mul16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_mul16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_mul16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_mul16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_mul16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_mul16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 667 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 17510 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_mul8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_mul8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_mul8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_mul8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_mul8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_mul8B_rule, c)
      }
    }
}
void  State::_sub_Op_MulVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1823 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17541 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulL_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1744 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17550 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_MULVL_VREG_VREG, _MulVL_vReg_vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2030 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17565 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul2L_rule, c)
    }
}
void  State::_sub_Op_MulReductionVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_mul2L_rule, c)
        DFA_PRODUCTION(IREGL, reduce_mul2L_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_mul2L_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_mul2L_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_mul2L_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_mul2L_rule, c)
    }
}
void  State::_sub_Op_MulVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1836 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17587 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1756 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3934 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17607 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 3920 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17616 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmul2F_rule, c)
    }
}
void  State::_sub_Op_MulReductionVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VREGF, reduce_mul4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_mul2F_rule, c)
      }
    }
}
void  State::_sub_Op_MulVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1849 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17639 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmulD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1769 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17648 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmulD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 3948 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17659 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmul2D_rule, c)
    }
}
void  State::_sub_Op_MulReductionVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VREGD, reduce_mul2D_rule, c)
    }
}
void  State::_sub_Op_MulAddVS2VI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4167 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 17676 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmuladdS2I_rule, c)
    }
}
void  State::_sub_Op_FmaVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _NEGVD_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 1578 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17687 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVD_VREG_]+_kids[1]->_cost[_BINARY_VREG_VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vfnmlsD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVD_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__NEGVD_VREG_) &&
        (
#line 1549 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17696 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVD_VREG_]+_kids[1]->_cost[_BINARY_VREG__NEGVD_VREG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfnmlaD_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVD_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVD_VREG__VREG) &&
        (
#line 1549 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17707 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVD_VREG_]+_kids[1]->_cost[_BINARY__NEGVD_VREG__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfnmlaD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__NEGVD_VREG_) &&
        (
#line 1517 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17718 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY_VREG__NEGVD_VREG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlsD_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVD_VREG__VREG) &&
        (
#line 1517 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17729 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY__NEGVD_VREG__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlsD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 1486 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17740 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[_BINARY_VREG_PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlaD_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 1458 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17751 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlaD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY_VECX__NEGVD_VECX_) &&
        (
#line 4151 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17762 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY_VECX__NEGVD_VECX_] + INSN_COST;
        DFA_PRODUCTION(VECX, vmls2D_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVD_VECX__VECX) &&
        (
#line 4151 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17771 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY__NEGVD_VECX__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmls2D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY_VECX_VECX) &&
        (
#line 4052 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17782 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY_VECX_VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla2D_rule, c)
      }
    }
}
void  State::_sub_Op_FmaVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 1565 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17795 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VREG_]+_kids[1]->_cost[_BINARY_VREG_VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vfnmlsF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__NEGVF_VREG_) &&
        (
#line 1534 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17804 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VREG_]+_kids[1]->_cost[_BINARY_VREG__NEGVF_VREG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfnmlaF_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _NEGVF_VREG_) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVF_VREG__VREG) &&
        (
#line 1534 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17815 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_NEGVF_VREG_]+_kids[1]->_cost[_BINARY__NEGVF_VREG__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfnmlaF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__NEGVF_VREG_) &&
        (
#line 1502 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17826 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY_VREG__NEGVF_VREG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlsF_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVF_VREG__VREG) &&
        (
#line 1502 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17837 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY__NEGVF_VREG__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlsF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 1473 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17848 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[_BINARY_VREG_PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlaF_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 1445 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseFMA && UseSVE > 0
#line 17859 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_BINARY_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vfmlaF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY_VECX__NEGVF_VECX_) &&
        (
#line 4136 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 4
#line 17870 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY_VECX__NEGVF_VECX_] + INSN_COST;
        DFA_PRODUCTION(VECX, vmls4F_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVF_VECX__VECX) &&
        (
#line 4136 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 4
#line 17879 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY__NEGVF_VECX__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmls4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _BINARY_VECD__NEGVF_VECD_) &&
        (
#line 4121 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17890 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_BINARY_VECD__NEGVF_VECD_] + INSN_COST;
        DFA_PRODUCTION(VECD, vmls2F_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _BINARY__NEGVF_VECD__VECD) &&
        (
#line 4121 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17899 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_BINARY__NEGVF_VECD__VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmls2F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _BINARY_VECX_VECX) &&
        (
#line 4037 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 4
#line 17910 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_BINARY_VECX_VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmla4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _BINARY_VECD_VECD) &&
        (
#line 4022 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseFMA && n->as_Vector()->length() == 2
#line 17921 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_BINARY_VECD_VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmla2F_rule, c)
      }
    }
}
void  State::_sub_Op_DivVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1332 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17934 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vfdivF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1306 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17943 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vdivF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4206 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 17954 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vdiv4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4192 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17963 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vdiv2F_rule, c)
    }
}
void  State::_sub_Op_DivVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1345 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17974 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vfdivD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1318 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 17983 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vdivD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4220 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 17994 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vdiv2D_rule, c)
    }
}
void  State::_sub_Op_AbsVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 701 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18005 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsB_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 621 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18015 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2951 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 18026 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vabs16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2939 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 || n->as_Vector()->length() == 8
#line 18035 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vabs8B_rule, c)
    }
}
void  State::_sub_Op_AbsVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 714 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18046 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsS_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 634 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18056 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2975 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 18067 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vabs8S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2963 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18076 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vabs4S_rule, c)
    }
}
void  State::_sub_Op_AbsVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 727 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18087 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsI_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 647 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18097 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2999 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18108 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vabs4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2987 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18117 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vabs2I_rule, c)
    }
}
void  State::_sub_Op_AbsVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 740 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18128 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsL_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 660 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18138 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 3011 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18149 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vabs2L_rule, c)
    }
}
void  State::_sub_Op_AbsVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 753 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18160 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 673 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18170 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBVF_VECX_VECX) &&
        (
#line 3074 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18181 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SUBVF_VECX_VECX]+INSN_COST * 3;
        DFA_PRODUCTION(VECX, vabd4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBVF_VECD_VECD) &&
        (
#line 3061 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18190 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SUBVF_VECD_VECD]+INSN_COST * 3;
        DFA_PRODUCTION(VECD, vabd2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 3035 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18199 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vabs4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 3023 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18210 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vabs2F_rule, c)
      }
    }
}
void  State::_sub_Op_AbsVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 766 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18223 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vabsD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 686 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18233 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vabsD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBVD_VECX_VECX) &&
        (
#line 3087 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18244 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_SUBVD_VECX_VECX]+INSN_COST * 3;
        DFA_PRODUCTION(VECX, vabd2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 3047 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18253 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+INSN_COST * 3;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vabs2D_rule, c)
      }
    }
}
void  State::_sub_Op_NegVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1892 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18266 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vnegF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 1864 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18276 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnegF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG];
        DFA_PRODUCTION(_NEGVF_VREG_, _NegVF_vReg__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 4284 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18291 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+INSN_COST * 3;
        DFA_PRODUCTION(VECX, vneg4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 4271 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18300 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+INSN_COST * 3;
        DFA_PRODUCTION(VECD, vneg2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX];
        DFA_PRODUCTION(_NEGVF_VECX_, _NegVF_vecX__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD];
        DFA_PRODUCTION(_NEGVF_VECD_, _NegVF_vecD__rule, c)
    }
}
void  State::_sub_Op_NegVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1905 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18319 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vnegD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 1877 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18329 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnegD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) ) {
      unsigned int c = _kids[0]->_cost[VREG];
        DFA_PRODUCTION(_NEGVD_VREG_, _NegVD_vReg__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 4297 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18344 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+INSN_COST * 3;
        DFA_PRODUCTION(VECX, vneg2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX];
        DFA_PRODUCTION(_NEGVD_VECX_, _NegVD_vecX__rule, c)
    }
}
void  State::_sub_Op_SqrtVD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4358 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18359 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsqrtD_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4330 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18369 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsqrtD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 4258 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18380 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsqrt2D_rule, c)
    }
}
void  State::_sub_Op_SqrtVF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4345 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18391 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vsqrtF_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4317 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            !n->as_Vector()->is_predicated_vector()
#line 18401 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vsqrtF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 4247 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18412 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vsqrt4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 4236 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18421 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vsqrt2F_rule, c)
    }
}
void  State::_sub_Op_LShiftCntV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3989 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG)
#line 18433 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VREG, vshiftcntL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3977 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 18443 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3964 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_SHORT ||
            (n->bottom_type()->is_vect()->element_basic_type() == T_CHAR))
#line 18456 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3952 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE)
#line 18468 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI];
        DFA_PRODUCTION(_LSHIFTCNTV_IMMI_, _LShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 4416 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length_in_bytes() == 16)
#line 18483 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VECX, vshiftcnt16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 4404 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length_in_bytes() == 4 ||
            n->as_Vector()->length_in_bytes() == 8)
#line 18493 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VECD, vshiftcnt8B_rule, c)
    }
}
void  State::_sub_Op_RShiftCntV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3989 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG)
#line 18505 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VREG, vshiftcntL_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3977 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 18515 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3964 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_SHORT ||
            (n->bottom_type()->is_vect()->element_basic_type() == T_CHAR))
#line 18528 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntS_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3952 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE)
#line 18540 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vshiftcntB_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) ) {
      unsigned int c = _kids[0]->_cost[IMMI];
        DFA_PRODUCTION(_RSHIFTCNTV_IMMI_, _RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 4416 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length_in_bytes() == 16)
#line 18555 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VECX, vshiftcnt16B_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 4404 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length_in_bytes() == 4 ||
            n->as_Vector()->length_in_bytes() == 8)
#line 18565 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
        DFA_PRODUCTION(VECD, vshiftcnt8B_0_rule, c)
    }
}
void  State::_sub_Op_LShiftVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__LSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4263 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18576 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__LSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlslB_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4055 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18585 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslB_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 3890 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslB_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3638 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18607 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4565 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 18618 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsll16B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4545 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 18628 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsll8B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4441 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 18637 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsll16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4427 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 18649 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsll8B_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__LSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18662 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__LSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlslS_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4068 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18671 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslS_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 3908 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18682 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslS_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3650 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18693 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4769 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 18704 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsll8S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4749 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 18714 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsll4S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4666 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 18723 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsll8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4652 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 18735 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsll4S_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__LSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4289 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18748 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__LSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlslI_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4081 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18757 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 3926 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18768 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslI_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3662 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18779 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4963 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18790 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsll4I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 4950 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18799 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsll2I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4869 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 18808 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsll4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4856 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18819 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsll2I_rule, c)
      }
    }
}
void  State::_sub_Op_LShiftVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__LSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4302 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18832 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__LSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlslL_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4094 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18841 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 3939 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18852 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslL_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3674 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18863 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlslL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _LSHIFTCNTV_IMMI_) &&
        (
#line 5075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18874 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_LSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsll2L_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5028 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 18883 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsll2L_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4159 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18896 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vasrB_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4003 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18905 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrB_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3734 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18916 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrB_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3590 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18927 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVB_VECX__RSHIFTCNTV_IMMI_, _RShiftVB_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVB_VECD__RSHIFTCNTV_IMMI_, _RShiftVB_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4599 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 18946 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsra16B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4584 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 18956 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsra8B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4493 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 18965 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsra16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4475 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 18977 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsra8B_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4172 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18990 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vasrS_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4016 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 18999 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrS_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3753 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19010 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrS_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3602 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19021 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVS_VECX__RSHIFTCNTV_IMMI_, _RShiftVS_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVS_VECD__RSHIFTCNTV_IMMI_, _RShiftVS_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4803 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 19040 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsra8S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4788 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 19050 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsra4S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4697 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 19059 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsra8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4679 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 19071 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsra4S_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4185 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19084 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vasrI_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4029 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19093 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3772 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19104 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrI_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3614 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19115 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVI_VECX__RSHIFTCNTV_IMMI_, _RShiftVI_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVI_VECD__RSHIFTCNTV_IMMI_, _RShiftVI_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4989 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 19134 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsra4I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4976 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19143 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsra2I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4899 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 19152 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsra4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4882 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19163 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsra2I_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4198 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19176 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vasrL_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4042 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19185 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3790 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19196 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrL_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3626 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19207 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vasrL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_RSHIFTVL_VECX__RSHIFTCNTV_IMMI_, _RShiftVL_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 5088 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19222 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsra2L_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5041 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19231 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsra2L_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4211 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19244 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlsrB_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4107 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19253 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrB_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3808 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19264 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrB_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3686 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19275 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVB_VECX__RSHIFTCNTV_IMMI_, _URShiftVB_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVB_VECD__RSHIFTCNTV_IMMI_, _URShiftVB_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4633 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 19294 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrl16B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4613 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 19304 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrl8B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4528 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 19313 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrl16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4510 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8
#line 19325 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrl8B_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4224 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19338 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlsrS_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19347 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrS_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3831 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19358 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrS_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3698 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19369 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVS_VECX__RSHIFTCNTV_IMMI_, _URShiftVS_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVS_VECD__RSHIFTCNTV_IMMI_, _URShiftVS_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4837 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 19388 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrl8S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 4817 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 19398 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrl4S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4732 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 19407 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrl8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4714 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 ||
            n->as_Vector()->length() == 4
#line 19419 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrl4S_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4237 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19432 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlsrI_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4133 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19441 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3854 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19452 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrI_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3710 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19463 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVI_VECX__RSHIFTCNTV_IMMI_, _URShiftVI_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVI_VECD__RSHIFTCNTV_IMMI_, _URShiftVI_vecD__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 5015 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 19482 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrl4I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 5002 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19491 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECD, vsrl2I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4933 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 19500 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrl4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4916 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19511 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vsrl2I_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftVL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG__RSHIFTCNTV_IMMI_) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4250 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19524 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG__RSHIFTCNTV_IMMI_]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vlsrL_imm_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4146 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19533 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 3872 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19544 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrL_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3722 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19555 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vlsrL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_];
        DFA_PRODUCTION(_URSHIFTVL_VECX__RSHIFTCNTV_IMMI_, _URShiftVL_vecX__RShiftCntV_immI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _RSHIFTCNTV_IMMI_) &&
        (
#line 5101 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19570 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_RSHIFTCNTV_IMMI_] + INSN_COST;
        DFA_PRODUCTION(VECX, vsrl2L_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5058 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 19579 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vsrl2L_rule, c)
      }
    }
}
void  State::_sub_Op_AndV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEL_IMML_M1__VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1291 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19592 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEL_IMML_M1__VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vand_notL_2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEL_IMML_M1__VREG) &&
        (
#line 1291 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19601 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV__REPLICATEL_IMML_M1__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notL_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VREG__REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1291 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19612 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VREG__REPLICATEL_IMML_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notL_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV_VREG__REPLICATEL_IMML_M1_) &&
        (
#line 1291 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19623 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV_VREG__REPLICATEL_IMML_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEI_IMMI_M1__VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19634 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEI_IMMI_M1__VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_10_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEI_IMMI_M1__VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19645 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV__REPLICATEI_IMMI_M1__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VREG__REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19656 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VREG__REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_9_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV_VREG__REPLICATEI_IMMI_M1_) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19667 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV_VREG__REPLICATEI_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_7_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATES_IMMI_M1__VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19678 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATES_IMMI_M1__VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_6_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATES_IMMI_M1__VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19689 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV__REPLICATES_IMMI_M1__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VREG__REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19700 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VREG__REPLICATES_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_5_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV_VREG__REPLICATES_IMMI_M1_) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19711 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV_VREG__REPLICATES_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEB_IMMI_M1__VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19722 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEB_IMMI_M1__VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEB_IMMI_M1__VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19733 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV__REPLICATEB_IMMI_M1__VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VREG__REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19744 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VREG__REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _XORV_VREG__REPLICATEB_IMMI_M1_) &&
        (
#line 1276 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19755 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_XORV_VREG__REPLICATEB_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_notI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1197 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19766 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1152 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19777 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vand_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMMLLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1043 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19788 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMMLLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandD_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMMLLOG_) &&
        (
#line 1043 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19799 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMMLLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMILOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1031 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19810 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMILOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandS_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMILOG_) &&
        (
#line 1031 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19821 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMILOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMSLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1019 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19832 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMSLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandH_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMSLOG_) &&
        (
#line 1019 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19843 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMSLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandH_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMBLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19854 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMBLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandB_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMBLOG_) &&
        (
#line 1007 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 19865 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMBLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vandB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4327 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19876 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vand16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4312 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 4 ||
            n->as_Vector()->length_in_bytes() == 8
#line 19886 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vand8B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEL_IMML_M1__VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2135 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19895 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEL_IMML_M1__VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not2L_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEL_IMML_M1__VECX) &&
        (
#line 2135 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19906 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV__REPLICATEL_IMML_M1__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not2L_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECX__REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2135 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19917 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECX__REPLICATEL_IMML_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not2L_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV_VECX__REPLICATEL_IMML_M1_) &&
        (
#line 2135 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19928 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV_VECX__REPLICATEL_IMML_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEI_IMMI_M1__VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19939 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEI_IMMI_M1__VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_10_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEI_IMMI_M1__VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19950 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV__REPLICATEI_IMMI_M1__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECX__REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19961 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECX__REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_9_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV_VECX__REPLICATEI_IMMI_M1_) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19972 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV_VECX__REPLICATEI_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_7_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATES_IMMI_M1__VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19983 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATES_IMMI_M1__VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_6_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATES_IMMI_M1__VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 19994 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV__REPLICATES_IMMI_M1__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECX__REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20005 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECX__REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_5_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV_VECX__REPLICATES_IMMI_M1_) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20016 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV_VECX__REPLICATES_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEB_IMMI_M1__VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20027 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEB_IMMI_M1__VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEB_IMMI_M1__VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20038 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV__REPLICATEB_IMMI_M1__VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECX__REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20049 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECX__REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _XORV_VECX__REPLICATEB_IMMI_M1_) &&
        (
#line 2120 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20060 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_XORV_VECX__REPLICATEB_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vand_not4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEI_IMMI_M1__VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20071 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEI_IMMI_M1__VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_10_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEI_IMMI_M1__VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20082 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV__REPLICATEI_IMMI_M1__VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECD__REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20093 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECD__REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_9_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV_VECD__REPLICATEI_IMMI_M1_) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20104 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV_VECD__REPLICATEI_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_7_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATES_IMMI_M1__VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20115 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATES_IMMI_M1__VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_6_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATES_IMMI_M1__VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20126 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV__REPLICATES_IMMI_M1__VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECD__REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20137 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECD__REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_5_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV_VECD__REPLICATES_IMMI_M1_) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20148 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV_VECD__REPLICATES_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV__REPLICATEB_IMMI_M1__VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20159 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV__REPLICATEB_IMMI_M1__VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV__REPLICATEB_IMMI_M1__VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20170 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV__REPLICATEB_IMMI_M1__VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _XORV_VECD__REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20181 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_XORV_VECD__REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _XORV_VECD__REPLICATEB_IMMI_M1_) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 20192 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_XORV_VECD__REPLICATEB_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vand_not2I_rule, c)
      }
    }
}
void  State::_sub_Op_AndReductionV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2528 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20207 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_andL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_andL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_andL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_andL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_andL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_andL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2505 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20223 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_andI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_andI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_andI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_andI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_andI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_andI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2488 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20240 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_andL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_andL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_andL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_andL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_andL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_andL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2471 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20268 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_andI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_andI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_andI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_andI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_andI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_andI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2451 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20299 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_andL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_andL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_andL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_andL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_andL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_andL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2430 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20327 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_andI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_andI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_andI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_andI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_andI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_andI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2413 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20358 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_andL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_andL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_andL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_andL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_andL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_andL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2396 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20386 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_andI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_andI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_andI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_andI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_andI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_andI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1640 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 20415 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_and2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_and2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_and2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_and2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_and2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_and2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1574 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 20441 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1514 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 20470 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1436 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 20499 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1364 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 20528 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1280 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 20557 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1202 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 20586 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_and8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_and8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_and8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_and8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_and8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_and8B_rule, c)
      }
    }
}
void  State::_sub_Op_OrV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1214 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20617 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vor_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1167 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20626 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vor_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMMLLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1091 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20637 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMMLLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorD_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMMLLOG_) &&
        (
#line 1091 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20648 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMMLLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMILOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1079 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20659 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMILOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorS_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMILOG_) &&
        (
#line 1079 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20670 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMILOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMSLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1067 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20681 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMSLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorH_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMSLOG_) &&
        (
#line 1067 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20692 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMSLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorH_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMBLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1055 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20703 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMBLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorB_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMBLOG_) &&
        (
#line 1055 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 20714 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMBLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vorB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4358 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 20725 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vor16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4343 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 4 ||
            n->as_Vector()->length_in_bytes() == 8
#line 20735 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vor8B_rule, c)
    }
}
void  State::_sub_Op_OrReductionV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2682 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20748 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_orL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_orL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_orL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_orL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_orL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_orL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2659 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20764 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_orI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_orI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_orI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_orI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_orI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_orI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2642 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20781 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_orL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_orL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_orL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_orL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_orL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_orL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2625 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20809 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2605 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20840 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_orL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_orL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_orL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_orL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_orL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_orL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2584 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 20868 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2567 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20899 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_orL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_orL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_orL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_orL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_orL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_orL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2550 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 20927 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1660 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 20956 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_orr2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_orr2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_orr2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_orr2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_orr2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_orr2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1596 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 20982 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1534 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 21011 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1462 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 21040 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1388 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 21069 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1308 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 21098 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1228 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 21127 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_orr8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_orr8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_orr8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_orr8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_orr8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_orr8B_rule, c)
      }
    }
}
void  State::_sub_Op_XorV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMML_M1_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_XORV__REPLICATEL_IMML_M1__VREG, _XorV__ReplicateL_immL_M1__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMML_M1_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMML_M1_];
        DFA_PRODUCTION(_XORV_VREG__REPLICATEL_IMML_M1_, _XorV_vReg__ReplicateL_immL_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_XORV__REPLICATEI_IMMI_M1__VREG, _XorV__ReplicateI_immI_M1__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VREG__REPLICATEI_IMMI_M1_, _XorV_vReg__ReplicateI_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_XORV__REPLICATES_IMMI_M1__VREG, _XorV__ReplicateS_immI_M1__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VREG__REPLICATES_IMMI_M1_, _XorV_vReg__ReplicateS_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VREG];
        DFA_PRODUCTION(_XORV__REPLICATEB_IMMI_M1__VREG, _XorV__ReplicateB_immI_M1__vReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VREG__REPLICATEB_IMMI_M1_, _XorV_vReg__ReplicateB_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1262 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21190 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMML_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vnotL_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMML_M1_) &&
        (
#line 1262 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21199 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMML_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21210 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21221 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21232 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21243 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21254 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) &&
        (
#line 1248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21265 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vnotI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1231 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21276 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxor_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1182 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21287 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxor_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMMLLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1139 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21298 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMMLLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorD_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMMLLOG_) &&
        (
#line 1139 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21309 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEL_IMMLLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMILOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21320 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMILOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorS_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMILOG_) &&
        (
#line 1127 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21331 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEI_IMMILOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMSLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1115 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21342 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMSLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorH_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMSLOG_) &&
        (
#line 1115 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21353 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATES_IMMSLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorH_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMBLOG_) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1103 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21364 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMBLOG_]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorB_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMBLOG_) &&
        (
#line 1103 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 21375 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[_REPLICATEB_IMMBLOG_] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vxorB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 4389 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21386 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vxor16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 4374 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 4 ||
            n->as_Vector()->length_in_bytes() == 8
#line 21396 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vxor8B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMML_M1_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_XORV__REPLICATEL_IMML_M1__VECX, _XorV__ReplicateL_immL_M1__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMML_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEL_IMML_M1_];
        DFA_PRODUCTION(_XORV_VECX__REPLICATEL_IMML_M1_, _XorV_vecX__ReplicateL_immL_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_XORV__REPLICATEI_IMMI_M1__VECX, _XorV__ReplicateI_immI_M1__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECX__REPLICATEI_IMMI_M1_, _XorV_vecX__ReplicateI_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_XORV__REPLICATES_IMMI_M1__VECX, _XorV__ReplicateS_immI_M1__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATES_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECX__REPLICATES_IMMI_M1_, _XorV_vecX__ReplicateS_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECX];
        DFA_PRODUCTION(_XORV__REPLICATEB_IMMI_M1__VECX, _XorV__ReplicateB_immI_M1__vecX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECX__REPLICATEB_IMMI_M1_, _XorV_vecX__ReplicateB_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_XORV__REPLICATEI_IMMI_M1__VECD, _XorV__ReplicateI_immI_M1__vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECD__REPLICATEI_IMMI_M1_, _XorV_vecD__ReplicateI_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_XORV__REPLICATES_IMMI_M1__VECD, _XorV__ReplicateS_immI_M1__vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATES_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECD__REPLICATES_IMMI_M1_, _XorV_vecD__ReplicateS_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECD];
        DFA_PRODUCTION(_XORV__REPLICATEB_IMMI_M1__VECD, _XorV__ReplicateB_immI_M1__vecD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_];
        DFA_PRODUCTION(_XORV_VECD__REPLICATEB_IMMI_M1_, _XorV_vecD__ReplicateB_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEL_IMML_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2090 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21461 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEL_IMML_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot2L_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEL_IMML_M1_) &&
        (
#line 2090 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21472 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEL_IMML_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21483 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21494 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21505 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21516 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATES_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21527 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) &&
        (
#line 2075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 21538 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vnot4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEI_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21549 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEI_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATEI_IMMI_M1_) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21560 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATEI_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATES_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21571 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATES_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATES_IMMI_M1_) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21582 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATES_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _REPLICATEB_IMMI_M1_) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21593 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_REPLICATEB_IMMI_M1_]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], _REPLICATEB_IMMI_M1_) &&
        (
#line 2060 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 21604 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[_REPLICATEB_IMMI_M1_] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vnot2I_rule, c)
      }
    }
}
void  State::_sub_Op_XorReductionV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2836 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 21619 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_eorL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_eorL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_eorL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_eorL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_eorL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_eorL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2813 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 21635 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_eorI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_eorI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_eorI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_eorI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_eorI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_eorI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2796 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 21652 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_eorL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_eorL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_eorL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_eorL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_eorL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_eorL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 2779 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 21680 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eorI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eorI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eorI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eorI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eorI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eorI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2759 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 21711 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_eorL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_eorL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_eorL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_eorL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_eorL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_eorL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2738 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 21739 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eorI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eorI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eorI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eorI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eorI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eorI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2721 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 21770 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_eorL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_eorL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_eorL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_eorL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_eorL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_eorL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2704 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 21798 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eorI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eorI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eorI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eorI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eorI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eorI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1680 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 21827 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_eor2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_eor2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_eor2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_eor2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_eor2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_eor2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1618 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 21853 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1554 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 21882 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1488 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 21911 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1412 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 21940 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1336 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 21969 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1254 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 21998 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_eor8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_eor8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_eor8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_eor8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_eor8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_eor8B_rule, c)
      }
    }
}
void  State::_sub_Op_MinV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1402 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 22029 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmin_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1360 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 22038 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmin_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5379 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 22049 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmin2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5365 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22058 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmin4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5351 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22069 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmin2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2338 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22078 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmin2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2306 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22089 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmin4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2292 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22100 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmin2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2278 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22111 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmin8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2264 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22122 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmin4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2250 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22133 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmin16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2235 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
(n->as_Vector()->length() == 4 || n->as_Vector()->length() == 8) &&
             n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22145 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmin8B_rule, c)
      }
    }
}
void  State::_sub_Op_MaxV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1422 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 22158 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vmax_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 1380 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 22167 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vmax_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5337 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 22178 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vmax2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 5323 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22187 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmax4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 5309 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22198 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vmax2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2321 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22207 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmax2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2221 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22218 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmax4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2207 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22229 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmax2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2193 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22240 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmax8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2179 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22251 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmax4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2165 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22262 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vmax16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2150 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
(n->as_Vector()->length() == 4 || n->as_Vector()->length() == 8) &&
             n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22274 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vmax8B_rule, c)
      }
    }
}
void  State::_sub_Op_MinReductionV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3428 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22289 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(VREGD, reduce_minD_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3407 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22300 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(VREGF, reduce_minF_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3392 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22311 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_minD_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3378 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22324 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_minF_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3358 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22337 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_minL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_minL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_minL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_minL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_minL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_minL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3334 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22354 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_minI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_minI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_minI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_minI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_minI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_minI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3317 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22371 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_minL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_minL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_minL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_minL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_minL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_minL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3298 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22400 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_minI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_minI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_minI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_minI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_minI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_minI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3278 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22431 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_minD_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3262 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22444 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_minD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3245 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22457 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_minF_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3229 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22470 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_minF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3211 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22483 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_minL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_minL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_minL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_minL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_minL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_minL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3189 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22512 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_minI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_minI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_minI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_minI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_minI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_minI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3172 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22543 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_minL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_minL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_minL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_minL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_minL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_minL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 3154 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22572 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_minI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_minI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_minI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_minI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_minI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_minI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1187 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 22601 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_min2D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1173 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22612 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_min4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1159 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 22623 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_min2F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1094 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22634 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_min2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_min2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_min2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_min2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_min2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_min2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1050 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22660 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1010 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 22689 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 990 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22718 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 970 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 22747 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 950 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22776 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 930 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 22805 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_min8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_min8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_min8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_min8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_min8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_min8B_rule, c)
      }
    }
}
void  State::_sub_Op_MaxReductionV(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3132 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22838 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(VREGD, reduce_maxD_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3111 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22849 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(VREGF, reduce_maxF_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGD_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3096 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22860 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGD_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_maxD_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREGF_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3082 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22873 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREGF_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_maxF_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3062 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22886 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, reduce_maxL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL, reduce_maxL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R0, reduce_maxL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R2, reduce_maxL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R3, reduce_maxL_masked_partial_rule, c)
        DFA_PRODUCTION(IREGL_R11, reduce_maxL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3038 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22903 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, reduce_maxI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI, reduce_maxI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, reduce_maxI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, reduce_maxI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, reduce_maxI_masked_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, reduce_maxI_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGL_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3021 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 22920 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGL_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_maxL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_maxL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_maxL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_maxL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_maxL_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_maxL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_IREGIORL2I_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 3002 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(1)->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 22949 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_IREGIORL2I_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_maxI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_maxI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_maxI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_maxI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_maxI_masked_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_maxI_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2982 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 22980 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_maxD_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2966 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 22993 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_maxD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2949 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 23006 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_maxF_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2933 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 23019 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VREG] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_maxF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2915 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 23032 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_maxL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_maxL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_maxL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_maxL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_maxL_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_maxL_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2893 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 23061 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_maxI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_maxI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_maxI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_maxI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_maxI_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_maxI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2876 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 23092 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_maxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_maxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_maxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_maxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_maxL_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_maxL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 2858 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(2)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            n->in(2)->bottom_type()->is_vect()->element_basic_type() != T_LONG &&
            is_integral_type(n->in(2)->bottom_type()->is_vect()->element_basic_type())
#line 23121 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_maxI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_maxI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_maxI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_maxI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_maxI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_maxI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1145 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 23150 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, reduce_max2D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1131 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 23161 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_max4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1117 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 23172 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, reduce_max2F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 1070 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 23183 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, reduce_max2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, reduce_max2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, reduce_max2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, reduce_max2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, reduce_max2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, reduce_max2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 1030 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 23209 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 910 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 23238 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 890 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 23267 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 870 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 23296 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 850 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 23325 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 830 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 23354 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, reduce_max8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, reduce_max8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, reduce_max8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, reduce_max8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, reduce_max8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, reduce_max8B_rule, c)
      }
    }
}
void  State::_sub_Op_LoadVector(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT];
        DFA_PRODUCTION(_LOADVECTOR_INDIRECT_, _LoadVector_indirect__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) &&
        (
#line 303 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() > 16 &&
            n->as_LoadVector()->memory_size() < MaxVectorSize
#line 23390 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+6 * SVE_COST;
        DFA_PRODUCTION(VREG, loadV_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM16) &&
        (
#line 279 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() == 16
#line 23399 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM16]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV16_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM8) &&
        (
#line 257 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() == 8
#line 23410 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM8]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV8_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM4) &&
        (
#line 235 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() == 4
#line 23421 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM4]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV4_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM2) &&
        (
#line 213 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() == 2
#line 23432 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM2]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV2_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) &&
        (
#line 179 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_LoadVector()->memory_size() >= 16 &&
            n->as_LoadVector()->memory_size() == MaxVectorSize
#line 23444 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM16) &&
        (
#line 69 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_LoadVector()->memory_size() == 16
#line 23455 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM16]+4 * INSN_COST;
        DFA_PRODUCTION(VECX, loadV16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM8) &&
        (
#line 58 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_LoadVector()->memory_size() == 8
#line 23464 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM8]+4 * INSN_COST;
        DFA_PRODUCTION(VECD, loadV8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM4) &&
        (
#line 47 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_LoadVector()->memory_size() == 4
#line 23473 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM4]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, loadV4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM2) &&
        (
#line 36 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_LoadVector()->memory_size() == 2
#line 23484 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM2]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, loadV2_rule, c)
      }
    }
}
void  State::_sub_Op_LoadVectorGather(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 5260 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVectorGather()->memory_size() < MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23500 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREG]+3 * SVE_COST + INSN_COST;
        DFA_PRODUCTION(VREG, gatherL_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 5243 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVectorGather()->memory_size() < MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23512 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREG]+2 * SVE_COST + INSN_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 5225 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVectorGather()->memory_size() == MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23526 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 5210 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVectorGather()->memory_size() == MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23540 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherI_rule, c)
      }
    }
}
void  State::_sub_Op_LoadVectorGatherMasked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 5334 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() < MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23556 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_PREGGOV]+4 * SVE_COST;
        DFA_PRODUCTION(VREG, gatherL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 5314 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() < MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23568 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_PREGGOV]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherI_masked_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 5296 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() == MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23582 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_PREGGOV]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 5281 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() == MaxVectorSize &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23596 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, gatherI_masked_rule, c)
      }
    }
}
void  State::_sub_Op_StoreVector(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _VECTORSTOREMASK_PREGGOV_IMMI_GT_1) &&
        (
#line 2105 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() > 16 &&
            type2aelembytes(n->as_StoreVector()->vect_type()->element_basic_type()) > 1 &&
            Matcher::vector_length_in_bytes(n->as_StoreVector()->in(MemNode::ValueIn)->in(1)) < MaxVectorSize
#line 23612 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_VECTORSTOREMASK_PREGGOV_IMMI_GT_1]+6 * SVE_COST;
        DFA_PRODUCTION(UNIVERSE, storeV_vstoremask_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _VECTORSTOREMASK_PREGGOV_IMMI_GT_1) &&
        (
#line 2084 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            Matcher::vector_length_in_bytes(n->as_StoreVector()->in(MemNode::ValueIn)->in(1)) == MaxVectorSize
#line 23622 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_VECTORSTOREMASK_PREGGOV_IMMI_GT_1]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV_vstoremask_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 323 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() > 16 &&
            n->as_StoreVector()->memory_size() < MaxVectorSize
#line 23634 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[VREG]+5 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM16) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 290 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() == 16
#line 23645 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM16]+_kids[1]->_cost[VREG]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV16_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM8) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 268 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() == 8
#line 23656 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM8]+_kids[1]->_cost[VREG]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV8_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM4) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 246 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() == 4
#line 23667 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM4]+_kids[1]->_cost[VREG]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV4_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM2) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 224 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() == 2
#line 23678 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM2]+_kids[1]->_cost[VREG]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV2_vreg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 195 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_StoreVector()->memory_size() >= 16 &&
            n->as_StoreVector()->memory_size() == MaxVectorSize
#line 23690 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[VREG]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM16) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 113 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_StoreVector()->memory_size() == 16
#line 23701 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM16]+_kids[1]->_cost[VECX]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM8) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 102 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_StoreVector()->memory_size() == 8
#line 23712 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM8]+_kids[1]->_cost[VECD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM4) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 91 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_StoreVector()->memory_size() == 4
#line 23723 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM4]+_kids[1]->_cost[VECD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV4_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VMEM2) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 80 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_StoreVector()->memory_size() == 2
#line 23734 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEM2]+_kids[1]->_cost[VECD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV2_rule, c)
      }
    }
}
void  State::_sub_Op_StoreVectorScatter(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 5407 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVectorScatter()->memory_size() < MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23750 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_VREG]+3 * SVE_COST + INSN_COST;
        DFA_PRODUCTION(UNIVERSE, scatterL_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 5389 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVectorScatter()->memory_size() < MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23762 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_VREG]+2 * SVE_COST + INSN_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterI_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 5371 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23776 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_VREG) &&
        (
#line 5356 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23790 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG_VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterI_rule, c)
      }
    }
}
void  State::_sub_Op_StoreVectorScatterMasked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__BINARY_VREG_PREGGOV) &&
        (
#line 5481 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() < MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23806 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG__BINARY_VREG_PREGGOV]+4 * SVE_COST;
        DFA_PRODUCTION(UNIVERSE, scatterL_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__BINARY_VREG_PREGGOV) &&
        (
#line 5461 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() < MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23818 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG__BINARY_VREG_PREGGOV]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterI_masked_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__BINARY_VREG_PREGGOV) &&
        (
#line 5443 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() == MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 23832 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG__BINARY_VREG_PREGGOV]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterL_masked_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], INDIRECT) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG__BINARY_VREG_PREGGOV) &&
        (
#line 5428 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() == MaxVectorSize &&
            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 23846 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[INDIRECT]+_kids[1]->_cost[_BINARY_VREG__BINARY_VREG_PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, scatterI_masked_rule, c)
      }
    }
}
void  State::_sub_Op_LoadVectorMasked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 360 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() < MaxVectorSize
#line 23860 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[PREGGOV]+6 * SVE_COST;
        DFA_PRODUCTION(VREG, loadV_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 345 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_LoadVector()->memory_size() == MaxVectorSize
#line 23870 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[PREGGOV]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, loadV_masked_rule, c)
      }
    }
}
void  State::_sub_Op_StoreVectorMasked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 395 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() < MaxVectorSize
#line 23884 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[_BINARY_VREG_PREGGOV]+6 * SVE_COST;
        DFA_PRODUCTION(UNIVERSE, storeV_masked_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VMEMA) && STATE__VALID_CHILD(_kids[1], _BINARY_VREG_PREGGOV) &&
        (
#line 380 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_StoreVector()->memory_size() == MaxVectorSize
#line 23894 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VMEMA]+_kids[1]->_cost[_BINARY_VREG_PREGGOV]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION(UNIVERSE, storeV_masked_rule, c)
      }
    }
}
void  State::_sub_Op_VectorMaskGen(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IREGL) &&
        (
#line 5767 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 23907 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmask_gen_rule, c)
        DFA_PRODUCTION(PREG, vmask_gen_rule, c)
    }
}
void  State::_sub_Op_VectorMaskTrueCount(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5699 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 23920 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+2 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, vmask_truecount_partial_rule, c)
        DFA_PRODUCTION(IREGI, vmask_truecount_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, vmask_truecount_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, vmask_truecount_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, vmask_truecount_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, vmask_truecount_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5655 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 23936 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_truecount_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_truecount_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_truecount_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_truecount_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_truecount_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_truecount_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 5471 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN
#line 23965 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+2 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_truecount16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_truecount16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_truecount16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_truecount16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_truecount16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_truecount16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 5455 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN
#line 23994 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+2 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_truecount8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_truecount8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_truecount8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_truecount8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_truecount8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_truecount8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorMaskFirstTrue(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5715 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 24026 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+3 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, vmask_firsttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI, vmask_firsttrue_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, vmask_firsttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, vmask_firsttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, vmask_firsttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, vmask_firsttrue_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5669 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 24042 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_firsttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_firsttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_firsttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_firsttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_firsttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_firsttrue_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 5537 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN
#line 24071 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+6 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_firsttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_firsttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_firsttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_firsttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_firsttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_firsttrue16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 5514 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN &&
            n->in(1)->bottom_type()->is_vect()->length() == 8
#line 24101 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_firsttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_firsttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_firsttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_firsttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_firsttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_firsttrue8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 5487 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN &&
            n->in(1)->bottom_type()->is_vect()->length() < 8
#line 24131 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+7 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_firsttrue_LT8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_firsttrue_LT8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_firsttrue_LT8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_firsttrue_LT8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_firsttrue_LT8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_firsttrue_LT8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorMaskLastTrue(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5733 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize
#line 24163 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+5 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, vmask_lasttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI, vmask_lasttrue_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, vmask_lasttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, vmask_lasttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, vmask_lasttrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, vmask_lasttrue_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5685 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize
#line 24179 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_lasttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_lasttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_lasttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_lasttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_lasttrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_lasttrue_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 5591 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN
#line 24208 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+5 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_lasttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_lasttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_lasttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_lasttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_lasttrue16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_lasttrue16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 5569 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN
#line 24237 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+4 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vmask_lasttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vmask_lasttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vmask_lasttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vmask_lasttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vmask_lasttrue8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vmask_lasttrue8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorMaskToLong(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 5750 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length() <= 64
#line 24269 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+13 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, vmask_tolong_rule, c)
        DFA_PRODUCTION(IREGL, vmask_tolong_rule, c)
        DFA_PRODUCTION(IREGL_R0, vmask_tolong_rule, c)
        DFA_PRODUCTION(IREGL_R2, vmask_tolong_rule, c)
        DFA_PRODUCTION(IREGL_R3, vmask_tolong_rule, c)
        DFA_PRODUCTION(IREGL_R11, vmask_tolong_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) ) {
      unsigned int c = _kids[0]->_cost[VECX]+11 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, vmask_tolong16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, vmask_tolong16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, vmask_tolong16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, vmask_tolong16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, vmask_tolong16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, vmask_tolong16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) ) {
      unsigned int c = _kids[0]->_cost[VECD]+5 * INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, vmask_tolong8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, vmask_tolong8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, vmask_tolong8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, vmask_tolong8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, vmask_tolong8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, vmask_tolong8B_rule, c)
      }
    }
}
void  State::_sub_Op_ReplicateB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI8) &&
        (
#line 3520 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24327 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI8] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateB_imm8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3476 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24336 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, replicateB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMBLOG) ) {
      unsigned int c = _kids[0]->_cost[IMMBLOG];
        DFA_PRODUCTION(_REPLICATEB_IMMBLOG_, _ReplicateB_immBLog__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMBADDSUBV) ) {
      unsigned int c = _kids[0]->_cost[IMMBADDSUBV];
        DFA_PRODUCTION(_REPLICATEB_IMMBADDSUBV_, _ReplicateB_immBAddSubV__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3138 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 16
#line 24355 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate16B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3125 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length() == 8 ||
                            n->as_Vector()->length() == 4)
#line 24365 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECD, replicate8B_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3113 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 16
#line 24374 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, replicate16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3100 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length() == 8 ||
                            n->as_Vector()->length() == 4)
#line 24386 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, replicate8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1];
        DFA_PRODUCTION(_REPLICATEB_IMMI_M1_, _ReplicateB_immI_M1__rule, c)
    }
}
void  State::_sub_Op_ReplicateS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI8_SHIFT8) &&
        (
#line 3531 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24403 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI8_SHIFT8] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateS_imm8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3487 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24412 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, replicateS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMSLOG) ) {
      unsigned int c = _kids[0]->_cost[IMMSLOG];
        DFA_PRODUCTION(_REPLICATES_IMMSLOG_, _ReplicateS_immSLog__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMIADDSUBV) ) {
      unsigned int c = _kids[0]->_cost[IMMIADDSUBV];
        DFA_PRODUCTION(_REPLICATES_IMMIADDSUBV_, _ReplicateS_immIAddSubV__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3188 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 8
#line 24431 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate8S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3175 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length() == 4 ||
                            n->as_Vector()->length() == 2)
#line 24441 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECD, replicate4S_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3163 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 8
#line 24450 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, replicate8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3150 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && (n->as_Vector()->length() == 4 ||
                            n->as_Vector()->length() == 2)
#line 24462 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, replicate4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1];
        DFA_PRODUCTION(_REPLICATES_IMMI_M1_, _ReplicateS_immI_M1__rule, c)
    }
}
void  State::_sub_Op_ReplicateI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI8_SHIFT8) &&
        (
#line 3542 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24479 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI8_SHIFT8] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateI_imm8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3498 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24488 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, replicateI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMILOG) ) {
      unsigned int c = _kids[0]->_cost[IMMILOG];
        DFA_PRODUCTION(_REPLICATEI_IMMILOG_, _ReplicateI_immILog__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMIADDSUBV) ) {
      unsigned int c = _kids[0]->_cost[IMMIADDSUBV];
        DFA_PRODUCTION(_REPLICATEI_IMMIADDSUBV_, _ReplicateI_immIAddSubV__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 3260 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24507 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate2L_zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3236 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 4
#line 24516 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, replicate4I_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 3224 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24527 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECD, replicate2I_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3212 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 4
#line 24536 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, replicate4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 3200 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24547 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, replicate2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1];
        DFA_PRODUCTION(_REPLICATEI_IMMI_M1_, _ReplicateI_immI_M1__rule, c)
    }
}
void  State::_sub_Op_ReplicateL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML8_SHIFT8) &&
        (
#line 3553 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24564 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML8_SHIFT8] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateL_imm8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) &&
        (
#line 3509 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24573 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, replicateL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMLLOG) ) {
      unsigned int c = _kids[0]->_cost[IMMLLOG];
        DFA_PRODUCTION(_REPLICATEL_IMMLLOG_, _ReplicateL_immLLog__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMLADDSUBV) ) {
      unsigned int c = _kids[0]->_cost[IMMLADDSUBV];
        DFA_PRODUCTION(_REPLICATEL_IMMLADDSUBV_, _ReplicateL_immLAddSubV__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) &&
        (
#line 3248 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24592 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate2L_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1];
        DFA_PRODUCTION(_REPLICATEL_IMML_M1_, _ReplicateL_immL_M1__rule, c)
    }
}
void  State::_sub_Op_ReplicateF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGF) &&
        (
#line 3564 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24607 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) &&
        (
#line 3287 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 4
#line 24616 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGF) &&
        (
#line 3274 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24625 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGF] + INSN_COST;
        DFA_PRODUCTION(VECD, replicate2F_rule, c)
    }
}
void  State::_sub_Op_ReplicateD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREGD) &&
        (
#line 3576 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24636 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD] + SVE_COST;
        DFA_PRODUCTION(VREG, replicateD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREGD) &&
        (
#line 3300 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 2
#line 24645 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREGD] + INSN_COST;
        DFA_PRODUCTION(VECX, replicate2D_rule, c)
    }
}
void  State::_sub_Op_ExtractB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4858 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24656 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, extractB_rule, c)
        DFA_PRODUCTION(IREGI, extractB_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, extractB_rule, c)
        DFA_PRODUCTION(IREGI_R2, extractB_rule, c)
        DFA_PRODUCTION(IREGI_R3, extractB_rule, c)
        DFA_PRODUCTION(IREGI_R4, extractB_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1886 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 16
#line 24671 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1874 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 8
#line 24700 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract8B_rule, c)
      }
    }
}
void  State::_sub_Op_ExtractS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4874 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24731 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, extractS_rule, c)
        DFA_PRODUCTION(IREGI, extractS_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, extractS_rule, c)
        DFA_PRODUCTION(IREGI_R2, extractS_rule, c)
        DFA_PRODUCTION(IREGI_R3, extractS_rule, c)
        DFA_PRODUCTION(IREGI_R4, extractS_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1910 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 8
#line 24746 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract8S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1898 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 4
#line 24775 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract4S_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract4S_rule, c)
      }
    }
}
void  State::_sub_Op_ExtractI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4891 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24806 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(IREGINOSP, extractI_rule, c)
        DFA_PRODUCTION(IREGI, extractI_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, extractI_rule, c)
        DFA_PRODUCTION(IREGI_R2, extractI_rule, c)
        DFA_PRODUCTION(IREGI_R3, extractI_rule, c)
        DFA_PRODUCTION(IREGI_R4, extractI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1934 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 4
#line 24821 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract4I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1922 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 2
#line 24850 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, extract2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, extract2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, extract2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, extract2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, extract2I_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, extract2I_rule, c)
      }
    }
}
void  State::_sub_Op_ExtractL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4905 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24881 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(IREGLNOSP, extractL_rule, c)
        DFA_PRODUCTION(IREGL, extractL_rule, c)
        DFA_PRODUCTION(IREGL_R0, extractL_rule, c)
        DFA_PRODUCTION(IREGL_R2, extractL_rule, c)
        DFA_PRODUCTION(IREGL_R3, extractL_rule, c)
        DFA_PRODUCTION(IREGL_R11, extractL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1946 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 2
#line 24895 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGLNOSP) || _cost[IREGLNOSP] > c) {
        DFA_PRODUCTION(IREGLNOSP, extract2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL) || _cost[IREGL] > c) {
        DFA_PRODUCTION(IREGL, extract2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R0) || _cost[IREGL_R0] > c) {
        DFA_PRODUCTION(IREGL_R0, extract2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R2) || _cost[IREGL_R2] > c) {
        DFA_PRODUCTION(IREGL_R2, extract2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R3) || _cost[IREGL_R3] > c) {
        DFA_PRODUCTION(IREGL_R3, extract2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGL_R11) || _cost[IREGL_R11] > c) {
        DFA_PRODUCTION(IREGL_R11, extract2L_rule, c)
      }
    }
}
void  State::_sub_Op_ExtractF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4919 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24923 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(VREGF, extractF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1971 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 4
#line 24932 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, extract4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1958 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 2
#line 24943 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGF) || _cost[VREGF] > c) {
        DFA_PRODUCTION(VREGF, extract2F_rule, c)
      }
    }
}
void  State::_sub_Op_ExtractD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 4933 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24956 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[IMMI]+2 * SVE_COST;
        DFA_PRODUCTION(VREGD, extractD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1984 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->in(1)->bottom_type()->is_vect()->length() == 2
#line 24965 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VREGD) || _cost[VREGD] > c) {
        DFA_PRODUCTION(VREGD, extract2D_rule, c)
      }
    }
}
void  State::_sub_Op_VectorMaskCmp(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], _BINARY_IMMI_PREGGOV) &&
        (
#line 1946 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24978 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[_BINARY_IMMI_PREGGOV] + SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmaskcmp_masked_rule, c)
        DFA_PRODUCTION(PREG, vmaskcmp_masked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1932 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 24988 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[IMMI] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskcmp_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskcmp_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_VECX) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 2014 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 25002 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_VECX]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECX, vcmpX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_VECD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1999 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 25011 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_VECD]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECD, vcmpD_rule, c)
    }
}
void  State::_sub_Op_VectorMaskCast(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 4563 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (Matcher::vector_length_in_bytes(n) * 2 == Matcher::vector_length_in_bytes(n->in(1)) ||
             Matcher::vector_length_in_bytes(n) * 4 == Matcher::vector_length_in_bytes(n->in(1)) ||
             Matcher::vector_length_in_bytes(n) * 8 == Matcher::vector_length_in_bytes(n->in(1)))
#line 25025 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+SVE_COST * 3;
        DFA_PRODUCTION(PREGGOV, vmaskcast_narrow_rule, c)
        DFA_PRODUCTION(PREG, vmaskcast_narrow_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREG) &&
        (
#line 4547 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (Matcher::vector_length_in_bytes(n) == 2 * Matcher::vector_length_in_bytes(n->in(1)) ||
             Matcher::vector_length_in_bytes(n) == 4 * Matcher::vector_length_in_bytes(n->in(1)) ||
             Matcher::vector_length_in_bytes(n) == 8 * Matcher::vector_length_in_bytes(n->in(1)))
#line 25038 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREG]+SVE_COST * 3;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskcast_extend_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskcast_extend_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) &&
        (
#line 4533 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->length() == n->in(1)->bottom_type()->is_vect()->length() &&
            n->bottom_type()->is_vect()->length_in_bytes() == n->in(1)->bottom_type()->is_vect()->length_in_bytes()
#line 25054 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV];
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskcast_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskcast_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2611 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 16 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 16 &&
            n->bottom_type()->is_vect()->length() == n->in(1)->bottom_type()->is_vect()->length()
#line 25070 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX];
        DFA_PRODUCTION(VECX, vmaskcastX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2597 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 8 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 8 &&
            n->bottom_type()->is_vect()->length() == n->in(1)->bottom_type()->is_vect()->length()
#line 25081 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD];
        DFA_PRODUCTION(VECD, vmaskcastD_rule, c)
    }
}
void  State::_sub_Op_VectorTest(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 5006 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne
#line 25094 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(IREGINOSP, vtest_anytrue_partial_rule, c)
        DFA_PRODUCTION(IREGI, vtest_anytrue_partial_rule, c)
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
        DFA_PRODUCTION(IREGI_R0, vtest_anytrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R2, vtest_anytrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R3, vtest_anytrue_partial_rule, c)
        DFA_PRODUCTION(IREGI_R4, vtest_anytrue_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4985 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() < MaxVectorSize &&
            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow
#line 25111 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vtest_alltrue_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vtest_alltrue_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vtest_alltrue_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vtest_alltrue_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vtest_alltrue_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vtest_alltrue_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4967 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne
#line 25142 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vtest_anytrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vtest_anytrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vtest_anytrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vtest_anytrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vtest_anytrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vtest_anytrue_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 4949 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == MaxVectorSize &&
            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow
#line 25173 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, vtest_alltrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, vtest_alltrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, vtest_alltrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, vtest_alltrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, vtest_alltrue_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, vtest_alltrue_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2917 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow
#line 25202 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, alltrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, alltrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, alltrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, alltrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, alltrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, alltrue_in_mask16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2897 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow
#line 25231 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, alltrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, alltrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, alltrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, alltrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, alltrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, alltrue_in_mask8B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2877 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne
#line 25260 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, anytrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, anytrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, anytrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, anytrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, anytrue_in_mask16B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, anytrue_in_mask16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2857 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne
#line 25289 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(IREGINOSP) || _cost[IREGINOSP] > c) {
        DFA_PRODUCTION(IREGINOSP, anytrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI) || _cost[IREGI] > c) {
        DFA_PRODUCTION(IREGI, anytrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGIORL2I) || _cost[IREGIORL2I] > c) {
        DFA_PRODUCTION(IREGIORL2I, iRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R0) || _cost[IREGI_R0] > c) {
        DFA_PRODUCTION(IREGI_R0, anytrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R2) || _cost[IREGI_R2] > c) {
        DFA_PRODUCTION(IREGI_R2, anytrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R3) || _cost[IREGI_R3] > c) {
        DFA_PRODUCTION(IREGI_R3, anytrue_in_mask8B_rule, c)
      }
      if (STATE__NOT_YET_VALID(IREGI_R4) || _cost[IREGI_R4] > c) {
        DFA_PRODUCTION(IREGI_R4, anytrue_in_mask8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorBlend(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 1962 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25320 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(VREG, vblend_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2370 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 16
#line 25329 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vbsl16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2357 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length_in_bytes() == 8
#line 25338 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vbsl8B_rule, c)
    }
}
void  State::_sub_Op_VectorRearrange(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], VREG) &&
        (
#line 5194 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25349 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, rearrange_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2829 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 &&
           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 25360 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, rearrange4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2804 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25370 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, rearrange8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2779 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25382 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, rearrange4S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], VECX) &&
        (
#line 2764 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25392 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, rearrange16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], VECD) &&
        (
#line 2749 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25404 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, rearrange8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorLoadMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADVECTOR_INDIRECT_) &&
        (
#line 2059 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_Vector()->length_in_bytes() > 16 &&
            n->as_Vector()->length_in_bytes() < MaxVectorSize &&
            type2aelembytes(n->bottom_type()->is_vect()->element_basic_type()) > 1
#line 25420 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADVECTOR_INDIRECT_]+6 * SVE_COST;
        DFA_PRODUCTION(PREGGOV, vloadmask_loadV_partial_rule, c)
        DFA_PRODUCTION(PREG, vloadmask_loadV_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADVECTOR_INDIRECT_) &&
        (
#line 2037 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_Vector()->length_in_bytes() == MaxVectorSize &&
            type2aelembytes(n->bottom_type()->is_vect()->element_basic_type()) > 1
#line 25432 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_LOADVECTOR_INDIRECT_]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vloadmask_loadV_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vloadmask_loadV_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 1992 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->bottom_type()->is_vect()->element_basic_type() != T_BYTE
#line 25446 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vloadmask_extend_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vloadmask_extend_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 1978 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25461 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vloadmaskB_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vloadmaskB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2557 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||
             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE)
#line 25477 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, loadmask2L_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2507 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 25488 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, loadmask4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2489 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 25501 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, loadmask2I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2447 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25510 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, loadmask8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2433 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25521 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, loadmask4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2397 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25532 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, loadmask16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2385 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25543 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, loadmask8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorLoadShuffle(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 5171 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25556 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, loadshuffle_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2712 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 &&
           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT)
#line 25567 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, loadshuffle4I_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2699 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25577 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, loadshuffle8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2686 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25589 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, loadshuffle4S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 2672 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25599 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, loadshuffle16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 2658 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25611 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, loadshuffle8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorLoadConst(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 5504 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25625 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0] + SVE_COST;
        DFA_PRODUCTION(VREG, loadconB_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2643 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 && n->as_Vector()->length() == 16 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25634 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(VECX, loadcon16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 2627 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
UseSVE == 0 &&
           (n->as_Vector()->length() == 2 || n->as_Vector()->length() == 4 ||
            n->as_Vector()->length() == 8) &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25646 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0] + INSN_COST;
        DFA_PRODUCTION(VECD, loadcon8B_rule, c)
    }
}
void  State::_sub_Op_VectorStoreMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], IMMI_GT_1) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[IMMI_GT_1];
        DFA_PRODUCTION(_VECTORSTOREMASK_PREGGOV_IMMI_GT_1, _VectorStoreMask_pRegGov_immI_gt_1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], IMMI_GT_1) &&
        (
#line 2020 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25661 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[IMMI_GT_1]+3 * SVE_COST;
        DFA_PRODUCTION(VREG, vstoremask_narrow_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], IMMI_1) &&
        (
#line 2009 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25670 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[IMMI_1] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vstoremaskB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI_8) &&
        (
#line 2577 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 25681 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI_8] + INSN_COST;
        DFA_PRODUCTION(VECD, storemask2L_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI_4) &&
        (
#line 2541 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 25690 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI_4] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, storemask4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI_4) &&
        (
#line 2525 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2
#line 25701 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI_4] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, storemask2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI_2) &&
        (
#line 2475 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 25712 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI_2] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, storemask8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI_2) &&
        (
#line 2461 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4
#line 25723 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI_2] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, storemask4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) && STATE__VALID_CHILD(_kids[1], IMMI_1) &&
        (
#line 2421 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 16
#line 25734 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX]+_kids[1]->_cost[IMMI_1] + INSN_COST;
        DFA_PRODUCTION(VECX, storemask16B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) && STATE__VALID_CHILD(_kids[1], IMMI_1) &&
        (
#line 2409 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8
#line 25743 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD]+_kids[1]->_cost[IMMI_1] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, storemask8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorReinterpret(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) &&
        (
#line 600 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_Vector()->length() != n->in(1)->bottom_type()->is_vect()->length() &&
            n->as_Vector()->length_in_bytes() == n->in(1)->bottom_type()->is_vect()->length_in_bytes()
#line 25758 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+2 * SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmask_reinterpret_diff_esize_rule, c)
        DFA_PRODUCTION(PREG, vmask_reinterpret_diff_esize_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) &&
        (
#line 587 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->as_Vector()->length() == n->in(1)->bottom_type()->is_vect()->length() &&
            n->as_Vector()->length_in_bytes() == n->in(1)->bottom_type()->is_vect()->length_in_bytes()
#line 25770 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV];
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmask_reinterpret_same_esize_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmask_reinterpret_same_esize_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 563 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length_in_bytes() !=
                          n->in(1)->bottom_type()->is_vect()->length_in_bytes()
#line 25785 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
        DFA_PRODUCTION(VREG, reinterpretResize_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 551 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length_in_bytes() ==
                          n->in(1)->bottom_type()->is_vect()->length_in_bytes()
#line 25795 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG];
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, reinterpret_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 223 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 4 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 8
#line 25807 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, reinterpretD2S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 209 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 8 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 4
#line 25817 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, reinterpretS2D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 195 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 4 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 16
#line 25829 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, reinterpretX2S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 181 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 16 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 4
#line 25841 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, reinterpretS2X_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 165 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 8 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 16
#line 25851 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, reinterpretX2D_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 149 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 16 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 8
#line 25863 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, reinterpretD2X_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 136 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 16 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 16
#line 25875 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX];
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, reinterpretX_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 123 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->length_in_bytes() == 8 &&
            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 8
#line 25887 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD];
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, reinterpretD_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastB2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4581 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 25900 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
        DFA_PRODUCTION(VREG, vcvtBtoX_extend_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 430 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 25909 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt4Bto4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 341 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 25918 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt4Bto4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 250 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25929 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt4Bto4S_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 239 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 25938 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt8Bto8S_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastS2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4613 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            type2aelembytes(Matcher::vector_element_basic_type(n)) > 2
#line 25952 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
        DFA_PRODUCTION(VREG, vcvtStoX_extend_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4598 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25962 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtStoB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 402 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 25973 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt4Sto4F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 283 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 25982 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt4Sto4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 272 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 25993 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt4Sto4B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 261 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 8 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26002 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt8Sto8B_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastI2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4687 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26016 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
        DFA_PRODUCTION(VREG, vcvtItoD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4674 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26026 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtItoF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4661 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26038 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtItoL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4646 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 26050 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtItoS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4631 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26062 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtItoB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 416 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26073 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt2Ito2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 380 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26082 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt4Ito4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 369 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26093 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt2Ito2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 327 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26102 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt4Ito4B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 305 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26113 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt2Ito2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 294 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 26124 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt4Ito4S_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastL2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4734 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26138 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
        DFA_PRODUCTION(VREG, vcvtLtoD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4717 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26148 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtLtoF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4701 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && is_integral_type(Matcher::vector_element_basic_type(n))
#line 26159 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtLtoX_narrow_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 391 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26170 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt2Lto2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 355 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26179 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt2Lto2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 316 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26188 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt2Lto2I_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastF2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4793 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26202 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+2 * SVE_COST;
        DFA_PRODUCTION(VREG, vcvtFtoD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4779 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG)
#line 26212 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+SVE_COST * 2;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtFtoL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4766 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 26224 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtFtoI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4747 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE ||
             n->bottom_type()->is_vect()->element_basic_type() == T_SHORT)
#line 26237 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtFtoX_narrow_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 546 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26248 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt2Fto2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 530 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26257 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt4Fto4B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 493 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 26266 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt4Fto4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 471 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 4 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26277 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt4Fto4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 460 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26288 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt2Fto2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECD) &&
        (
#line 446 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26299 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECD] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, vcvt2Fto2L_rule, c)
      }
    }
}
void  State::_sub_Op_VectorCastD2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4840 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26313 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
        DFA_PRODUCTION(VREG, vcvtDtoF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4827 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26323 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtDtoL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VREG) &&
        (
#line 4807 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE ||
             n->bottom_type()->is_vect()->element_basic_type() == T_SHORT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 26337 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VREG]+3 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, vcvtDtoX_narrow_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 557 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26348 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECD, vcvt2Dto2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 507 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26357 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, vcvt2Dto2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], VECX) &&
        (
#line 482 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->as_Vector()->length() == 2 && n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26368 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[VECX] + INSN_COST;
        DFA_PRODUCTION(VECX, vcvt2Dto2L_rule, c)
    }
}
void  State::_sub_Op_VectorInsert(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREGF) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5144 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length() > 32 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26380 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREGF]+_kids[1]->_cost[IMMI]+5 * SVE_COST;
        DFA_PRODUCTION(VREG, insertF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREGD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5123 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26390 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREGD]+_kids[1]->_cost[IMMI]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, insertD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5102 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26402 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_IREGL]+_kids[1]->_cost[IMMI]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, insertL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5075 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length() > 32 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE ||
             n->bottom_type()->is_vect()->element_basic_type() == T_SHORT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 26416 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_IREGIORL2I]+_kids[1]->_cost[IMMI]+5 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, insertI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_VREGF) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5054 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length() <= 32 &&
            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26428 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_VREGF]+_kids[1]->_cost[IMMI]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, insertF_small_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VREG_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 5029 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0 && n->as_Vector()->length() <= 32 &&
            (n->bottom_type()->is_vect()->element_basic_type() == T_BYTE ||
             n->bottom_type()->is_vect()->element_basic_type() == T_SHORT ||
             n->bottom_type()->is_vect()->element_basic_type() == T_INT)
#line 26442 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VREG_IREGIORL2I]+_kids[1]->_cost[IMMI]+4 * SVE_COST;
      if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {
        DFA_PRODUCTION(VREG, insertI_small_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_VREGD) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1855 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE
#line 26453 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_VREGD]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECX, insert2D_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_VREGF) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1838 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26462 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_VREGF]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, insert4F_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_VREGF) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1821 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT
#line 26473 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_VREGF]+_kids[1]->_cost[IMMI] + INSN_COST;
        DFA_PRODUCTION(VECD, insert2F_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_IREGL) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1804 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_LONG
#line 26482 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_IREGL]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, insert2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1787 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26493 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, insert4I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1770 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_INT
#line 26504 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, insert2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1753 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 26515 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, insert8S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1736 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_SHORT
#line 26526 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, insert4S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECX_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1719 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26537 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECX_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECX) || _cost[VECX] > c) {
        DFA_PRODUCTION(VECX, insert16B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_VECD_IREGIORL2I) && STATE__VALID_CHILD(_kids[1], IMMI) &&
        (
#line 1702 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_neon.ad"
n->bottom_type()->is_vect()->element_basic_type() == T_BYTE
#line 26548 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_VECD_IREGIORL2I]+_kids[1]->_cost[IMMI] + INSN_COST;
      if (STATE__NOT_YET_VALID(VECD) || _cost[VECD] > c) {
        DFA_PRODUCTION(VECD, insert8B_rule, c)
      }
    }
}
void  State::_sub_Op_MaskAll(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[IMML_M1];
        DFA_PRODUCTION(_MASKALL_IMML_M1_, _MaskAll_immL_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[IMMI_M1];
        DFA_PRODUCTION(_MASKALL_IMMI_M1_, _MaskAll_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IREGL) &&
        (
#line 469 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26569 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGL]+2 * SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmaskAllL_rule, c)
        DFA_PRODUCTION(PREG, vmaskAllL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMML) &&
        (
#line 451 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26579 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMML] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskAll_immL_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskAll_immL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IREGIORL2I) &&
        (
#line 435 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26593 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IREGIORL2I]+2 * SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskAllI_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskAllI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI) &&
        (
#line 417 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26607 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[IMMI] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmaskAll_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmaskAll_immI_rule, c)
      }
    }
}
void  State::_sub_Op_AndVMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], _XORVMASK_PREGGOV__MASKALL_IMML_M1_) &&
        (
#line 537 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26623 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[_XORVMASK_PREGGOV__MASKALL_IMML_M1_] + SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmask_and_notL_rule, c)
        DFA_PRODUCTION(PREG, vmask_and_notL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], _XORVMASK_PREGGOV__MASKALL_IMMI_M1_) &&
        (
#line 525 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26633 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[_XORVMASK_PREGGOV__MASKALL_IMMI_M1_] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmask_and_notI_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmask_and_notI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 487 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26647 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
      if (STATE__NOT_YET_VALID(PREGGOV) || _cost[PREGGOV] > c) {
        DFA_PRODUCTION(PREGGOV, vmask_and_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREG) || _cost[PREG] > c) {
        DFA_PRODUCTION(PREG, vmask_and_rule, c)
      }
    }
}
void  State::_sub_Op_OrVMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 499 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26663 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmask_or_rule, c)
        DFA_PRODUCTION(PREG, vmask_or_rule, c)
    }
}
void  State::_sub_Op_XorVMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], _MASKALL_IMML_M1_) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[_MASKALL_IMML_M1_];
        DFA_PRODUCTION(_XORVMASK_PREGGOV__MASKALL_IMML_M1_, _XorVMask_pRegGov__MaskAll_immL_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], _MASKALL_IMMI_M1_) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[_MASKALL_IMMI_M1_];
        DFA_PRODUCTION(_XORVMASK_PREGGOV__MASKALL_IMMI_M1_, _XorVMask_pRegGov__MaskAll_immI_M1__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], PREGGOV) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&
        (
#line 511 "/priv/d038402/git/reinrich/jdk/src/hotspot/cpu/aarch64/aarch64_sve.ad"
UseSVE > 0
#line 26683 "dfa_aarch64.cpp"
) ) {
      unsigned int c = _kids[0]->_cost[PREGGOV]+_kids[1]->_cost[PREGGOV] + SVE_COST;
        DFA_PRODUCTION(PREGGOV, vmask_xor_rule, c)
        DFA_PRODUCTION(PREG, vmask_xor_rule, c)
    }
}
bool State::DFA(int opcode, const Node *n) {
  switch(opcode) {
  case Op_RegN: { _sub_Op_RegN(n);
    break;
  }
  case Op_RegI: { _sub_Op_RegI(n);
    break;
  }
  case Op_RegP: { _sub_Op_RegP(n);
    break;
  }
  case Op_RegF: { _sub_Op_RegF(n);
    break;
  }
  case Op_RegD: { _sub_Op_RegD(n);
    break;
  }
  case Op_RegL: { _sub_Op_RegL(n);
    break;
  }
  case Op_VecA: { _sub_Op_VecA(n);
    break;
  }
  case Op_VecD: { _sub_Op_VecD(n);
    break;
  }
  case Op_VecX: { _sub_Op_VecX(n);
    break;
  }
  case Op_RegVectMask: { _sub_Op_RegVectMask(n);
    break;
  }
  case Op_RegFlags: { _sub_Op_RegFlags(n);
    break;
  }
  case Op_AbsD: { _sub_Op_AbsD(n);
    break;
  }
  case Op_AbsF: { _sub_Op_AbsF(n);
    break;
  }
  case Op_AbsI: { _sub_Op_AbsI(n);
    break;
  }
  case Op_AbsL: { _sub_Op_AbsL(n);
    break;
  }
  case Op_AddD: { _sub_Op_AddD(n);
    break;
  }
  case Op_AddF: { _sub_Op_AddF(n);
    break;
  }
  case Op_AddI: { _sub_Op_AddI(n);
    break;
  }
  case Op_AddL: { _sub_Op_AddL(n);
    break;
  }
  case Op_AddP: { _sub_Op_AddP(n);
    break;
  }
  case Op_AndI: { _sub_Op_AndI(n);
    break;
  }
  case Op_AndL: { _sub_Op_AndL(n);
    break;
  }
  case Op_AryEq: { _sub_Op_AryEq(n);
    break;
  }
  case Op_Binary: { _sub_Op_Binary(n);
    break;
  }
  case Op_Bool: { _sub_Op_Bool(n);
    break;
  }
  case Op_ReverseBytesI: { _sub_Op_ReverseBytesI(n);
    break;
  }
  case Op_ReverseBytesL: { _sub_Op_ReverseBytesL(n);
    break;
  }
  case Op_ReverseBytesUS: { _sub_Op_ReverseBytesUS(n);
    break;
  }
  case Op_ReverseBytesS: { _sub_Op_ReverseBytesS(n);
    break;
  }
  case Op_CacheWB: { _sub_Op_CacheWB(n);
    break;
  }
  case Op_CacheWBPreSync: { _sub_Op_CacheWBPreSync(n);
    break;
  }
  case Op_CacheWBPostSync: { _sub_Op_CacheWBPostSync(n);
    break;
  }
  case Op_CallDynamicJava: { _sub_Op_CallDynamicJava(n);
    break;
  }
  case Op_CallLeaf: { _sub_Op_CallLeaf(n);
    break;
  }
  case Op_CallLeafNoFP: { _sub_Op_CallLeafNoFP(n);
    break;
  }
  case Op_CallRuntime: { _sub_Op_CallRuntime(n);
    break;
  }
  case Op_CallNative: { _sub_Op_CallNative(n);
    break;
  }
  case Op_CallStaticJava: { _sub_Op_CallStaticJava(n);
    break;
  }
  case Op_CastDD: { _sub_Op_CastDD(n);
    break;
  }
  case Op_CastFF: { _sub_Op_CastFF(n);
    break;
  }
  case Op_CastII: { _sub_Op_CastII(n);
    break;
  }
  case Op_CastLL: { _sub_Op_CastLL(n);
    break;
  }
  case Op_CastVV: { _sub_Op_CastVV(n);
    break;
  }
  case Op_CastX2P: { _sub_Op_CastX2P(n);
    break;
  }
  case Op_CastP2X: { _sub_Op_CastP2X(n);
    break;
  }
  case Op_CastPP: { _sub_Op_CastPP(n);
    break;
  }
  case Op_CheckCastPP: { _sub_Op_CheckCastPP(n);
    break;
  }
  case Op_ClearArray: { _sub_Op_ClearArray(n);
    break;
  }
  case Op_CMoveD: { _sub_Op_CMoveD(n);
    break;
  }
  case Op_CMoveF: { _sub_Op_CMoveF(n);
    break;
  }
  case Op_CMoveI: { _sub_Op_CMoveI(n);
    break;
  }
  case Op_CMoveL: { _sub_Op_CMoveL(n);
    break;
  }
  case Op_CMoveP: { _sub_Op_CMoveP(n);
    break;
  }
  case Op_CMoveN: { _sub_Op_CMoveN(n);
    break;
  }
  case Op_CmpN: { _sub_Op_CmpN(n);
    break;
  }
  case Op_CmpD: { _sub_Op_CmpD(n);
    break;
  }
  case Op_CmpD3: { _sub_Op_CmpD3(n);
    break;
  }
  case Op_CmpF: { _sub_Op_CmpF(n);
    break;
  }
  case Op_CmpF3: { _sub_Op_CmpF3(n);
    break;
  }
  case Op_CmpI: { _sub_Op_CmpI(n);
    break;
  }
  case Op_CmpL: { _sub_Op_CmpL(n);
    break;
  }
  case Op_CmpL3: { _sub_Op_CmpL3(n);
    break;
  }
  case Op_CmpLTMask: { _sub_Op_CmpLTMask(n);
    break;
  }
  case Op_CmpP: { _sub_Op_CmpP(n);
    break;
  }
  case Op_CmpU: { _sub_Op_CmpU(n);
    break;
  }
  case Op_CmpUL: { _sub_Op_CmpUL(n);
    break;
  }
  case Op_CompareAndSwapB: { _sub_Op_CompareAndSwapB(n);
    break;
  }
  case Op_CompareAndSwapS: { _sub_Op_CompareAndSwapS(n);
    break;
  }
  case Op_CompareAndSwapI: { _sub_Op_CompareAndSwapI(n);
    break;
  }
  case Op_CompareAndSwapL: { _sub_Op_CompareAndSwapL(n);
    break;
  }
  case Op_CompareAndSwapP: { _sub_Op_CompareAndSwapP(n);
    break;
  }
  case Op_CompareAndSwapN: { _sub_Op_CompareAndSwapN(n);
    break;
  }
  case Op_WeakCompareAndSwapB: { _sub_Op_WeakCompareAndSwapB(n);
    break;
  }
  case Op_WeakCompareAndSwapS: { _sub_Op_WeakCompareAndSwapS(n);
    break;
  }
  case Op_WeakCompareAndSwapI: { _sub_Op_WeakCompareAndSwapI(n);
    break;
  }
  case Op_WeakCompareAndSwapL: { _sub_Op_WeakCompareAndSwapL(n);
    break;
  }
  case Op_WeakCompareAndSwapP: { _sub_Op_WeakCompareAndSwapP(n);
    break;
  }
  case Op_WeakCompareAndSwapN: { _sub_Op_WeakCompareAndSwapN(n);
    break;
  }
  case Op_CompareAndExchangeB: { _sub_Op_CompareAndExchangeB(n);
    break;
  }
  case Op_CompareAndExchangeS: { _sub_Op_CompareAndExchangeS(n);
    break;
  }
  case Op_CompareAndExchangeI: { _sub_Op_CompareAndExchangeI(n);
    break;
  }
  case Op_CompareAndExchangeL: { _sub_Op_CompareAndExchangeL(n);
    break;
  }
  case Op_CompareAndExchangeP: { _sub_Op_CompareAndExchangeP(n);
    break;
  }
  case Op_CompareAndExchangeN: { _sub_Op_CompareAndExchangeN(n);
    break;
  }
  case Op_GetAndAddI: { _sub_Op_GetAndAddI(n);
    break;
  }
  case Op_GetAndAddL: { _sub_Op_GetAndAddL(n);
    break;
  }
  case Op_GetAndSetI: { _sub_Op_GetAndSetI(n);
    break;
  }
  case Op_GetAndSetL: { _sub_Op_GetAndSetL(n);
    break;
  }
  case Op_GetAndSetP: { _sub_Op_GetAndSetP(n);
    break;
  }
  case Op_GetAndSetN: { _sub_Op_GetAndSetN(n);
    break;
  }
  case Op_ConN: { _sub_Op_ConN(n);
    break;
  }
  case Op_ConNKlass: { _sub_Op_ConNKlass(n);
    break;
  }
  case Op_ConD: { _sub_Op_ConD(n);
    break;
  }
  case Op_ConF: { _sub_Op_ConF(n);
    break;
  }
  case Op_ConI: { _sub_Op_ConI(n);
    break;
  }
  case Op_ConL: { _sub_Op_ConL(n);
    break;
  }
  case Op_ConP: { _sub_Op_ConP(n);
    break;
  }
  case Op_Conv2B: { _sub_Op_Conv2B(n);
    break;
  }
  case Op_ConvD2F: { _sub_Op_ConvD2F(n);
    break;
  }
  case Op_ConvD2I: { _sub_Op_ConvD2I(n);
    break;
  }
  case Op_ConvD2L: { _sub_Op_ConvD2L(n);
    break;
  }
  case Op_ConvF2D: { _sub_Op_ConvF2D(n);
    break;
  }
  case Op_ConvF2I: { _sub_Op_ConvF2I(n);
    break;
  }
  case Op_ConvF2L: { _sub_Op_ConvF2L(n);
    break;
  }
  case Op_ConvI2D: { _sub_Op_ConvI2D(n);
    break;
  }
  case Op_ConvI2F: { _sub_Op_ConvI2F(n);
    break;
  }
  case Op_ConvI2L: { _sub_Op_ConvI2L(n);
    break;
  }
  case Op_ConvL2D: { _sub_Op_ConvL2D(n);
    break;
  }
  case Op_ConvL2F: { _sub_Op_ConvL2F(n);
    break;
  }
  case Op_ConvL2I: { _sub_Op_ConvL2I(n);
    break;
  }
  case Op_CountedLoopEnd: { _sub_Op_CountedLoopEnd(n);
    break;
  }
  case Op_CountLeadingZerosI: { _sub_Op_CountLeadingZerosI(n);
    break;
  }
  case Op_CountLeadingZerosL: { _sub_Op_CountLeadingZerosL(n);
    break;
  }
  case Op_CountTrailingZerosI: { _sub_Op_CountTrailingZerosI(n);
    break;
  }
  case Op_CountTrailingZerosL: { _sub_Op_CountTrailingZerosL(n);
    break;
  }
  case Op_CreateEx: { _sub_Op_CreateEx(n);
    break;
  }
  case Op_DecodeN: { _sub_Op_DecodeN(n);
    break;
  }
  case Op_DecodeNKlass: { _sub_Op_DecodeNKlass(n);
    break;
  }
  case Op_DivD: { _sub_Op_DivD(n);
    break;
  }
  case Op_DivF: { _sub_Op_DivF(n);
    break;
  }
  case Op_DivI: { _sub_Op_DivI(n);
    break;
  }
  case Op_DivL: { _sub_Op_DivL(n);
    break;
  }
  case Op_EncodeISOArray: { _sub_Op_EncodeISOArray(n);
    break;
  }
  case Op_EncodeP: { _sub_Op_EncodeP(n);
    break;
  }
  case Op_EncodePKlass: { _sub_Op_EncodePKlass(n);
    break;
  }
  case Op_FastLock: { _sub_Op_FastLock(n);
    break;
  }
  case Op_FastUnlock: { _sub_Op_FastUnlock(n);
    break;
  }
  case Op_FmaD: { _sub_Op_FmaD(n);
    break;
  }
  case Op_FmaF: { _sub_Op_FmaF(n);
    break;
  }
  case Op_Goto: { _sub_Op_Goto(n);
    break;
  }
  case Op_Halt: { _sub_Op_Halt(n);
    break;
  }
  case Op_HasNegatives: { _sub_Op_HasNegatives(n);
    break;
  }
  case Op_If: { _sub_Op_If(n);
    break;
  }
  case Op_LShiftI: { _sub_Op_LShiftI(n);
    break;
  }
  case Op_LShiftL: { _sub_Op_LShiftL(n);
    break;
  }
  case Op_LoadB: { _sub_Op_LoadB(n);
    break;
  }
  case Op_LoadUB: { _sub_Op_LoadUB(n);
    break;
  }
  case Op_LoadUS: { _sub_Op_LoadUS(n);
    break;
  }
  case Op_LoadD: { _sub_Op_LoadD(n);
    break;
  }
  case Op_LoadF: { _sub_Op_LoadF(n);
    break;
  }
  case Op_LoadI: { _sub_Op_LoadI(n);
    break;
  }
  case Op_LoadKlass: { _sub_Op_LoadKlass(n);
    break;
  }
  case Op_LoadNKlass: { _sub_Op_LoadNKlass(n);
    break;
  }
  case Op_LoadL: { _sub_Op_LoadL(n);
    break;
  }
  case Op_LoadPLocked: { _sub_Op_LoadPLocked(n);
    break;
  }
  case Op_LoadP: { _sub_Op_LoadP(n);
    break;
  }
  case Op_LoadN: { _sub_Op_LoadN(n);
    break;
  }
  case Op_LoadRange: { _sub_Op_LoadRange(n);
    break;
  }
  case Op_LoadS: { _sub_Op_LoadS(n);
    break;
  }
  case Op_MulAddS2I: { _sub_Op_MulAddS2I(n);
    break;
  }
  case Op_MaxI: { _sub_Op_MaxI(n);
    break;
  }
  case Op_MaxD: { _sub_Op_MaxD(n);
    break;
  }
  case Op_MaxF: { _sub_Op_MaxF(n);
    break;
  }
  case Op_MemBarAcquire: { _sub_Op_MemBarAcquire(n);
    break;
  }
  case Op_LoadFence: { _sub_Op_LoadFence(n);
    break;
  }
  case Op_MemBarAcquireLock: { _sub_Op_MemBarAcquireLock(n);
    break;
  }
  case Op_MemBarRelease: { _sub_Op_MemBarRelease(n);
    break;
  }
  case Op_StoreFence: { _sub_Op_StoreFence(n);
    break;
  }
  case Op_StoreStoreFence: { _sub_Op_StoreStoreFence(n);
    break;
  }
  case Op_MemBarReleaseLock: { _sub_Op_MemBarReleaseLock(n);
    break;
  }
  case Op_MemBarVolatile: { _sub_Op_MemBarVolatile(n);
    break;
  }
  case Op_MemBarStoreStore: { _sub_Op_MemBarStoreStore(n);
    break;
  }
  case Op_MinI: { _sub_Op_MinI(n);
    break;
  }
  case Op_MinF: { _sub_Op_MinF(n);
    break;
  }
  case Op_MinD: { _sub_Op_MinD(n);
    break;
  }
  case Op_ModI: { _sub_Op_ModI(n);
    break;
  }
  case Op_ModL: { _sub_Op_ModL(n);
    break;
  }
  case Op_MoveI2F: { _sub_Op_MoveI2F(n);
    break;
  }
  case Op_MoveF2I: { _sub_Op_MoveF2I(n);
    break;
  }
  case Op_MoveL2D: { _sub_Op_MoveL2D(n);
    break;
  }
  case Op_MoveD2L: { _sub_Op_MoveD2L(n);
    break;
  }
  case Op_MulD: { _sub_Op_MulD(n);
    break;
  }
  case Op_MulF: { _sub_Op_MulF(n);
    break;
  }
  case Op_MulHiL: { _sub_Op_MulHiL(n);
    break;
  }
  case Op_MulI: { _sub_Op_MulI(n);
    break;
  }
  case Op_MulL: { _sub_Op_MulL(n);
    break;
  }
  case Op_NegD: { _sub_Op_NegD(n);
    break;
  }
  case Op_NegF: { _sub_Op_NegF(n);
    break;
  }
  case Op_OnSpinWait: { _sub_Op_OnSpinWait(n);
    break;
  }
  case Op_OrI: { _sub_Op_OrI(n);
    break;
  }
  case Op_OrL: { _sub_Op_OrL(n);
    break;
  }
  case Op_OverflowAddI: { _sub_Op_OverflowAddI(n);
    break;
  }
  case Op_OverflowSubI: { _sub_Op_OverflowSubI(n);
    break;
  }
  case Op_OverflowMulI: { _sub_Op_OverflowMulI(n);
    break;
  }
  case Op_OverflowAddL: { _sub_Op_OverflowAddL(n);
    break;
  }
  case Op_OverflowSubL: { _sub_Op_OverflowSubL(n);
    break;
  }
  case Op_OverflowMulL: { _sub_Op_OverflowMulL(n);
    break;
  }
  case Op_PartialSubtypeCheck: { _sub_Op_PartialSubtypeCheck(n);
    break;
  }
  case Op_PopCountI: { _sub_Op_PopCountI(n);
    break;
  }
  case Op_PopCountL: { _sub_Op_PopCountL(n);
    break;
  }
  case Op_PopCountVI: { _sub_Op_PopCountVI(n);
    break;
  }
  case Op_PrefetchAllocation: { _sub_Op_PrefetchAllocation(n);
    break;
  }
  case Op_RShiftI: { _sub_Op_RShiftI(n);
    break;
  }
  case Op_RShiftL: { _sub_Op_RShiftL(n);
    break;
  }
  case Op_Rethrow: { _sub_Op_Rethrow(n);
    break;
  }
  case Op_Return: { _sub_Op_Return(n);
    break;
  }
  case Op_RoundDoubleMode: { _sub_Op_RoundDoubleMode(n);
    break;
  }
  case Op_RoundDoubleModeV: { _sub_Op_RoundDoubleModeV(n);
    break;
  }
  case Op_RotateLeft: { _sub_Op_RotateLeft(n);
    break;
  }
  case Op_RotateRight: { _sub_Op_RotateRight(n);
    break;
  }
  case Op_SafePoint: { _sub_Op_SafePoint(n);
    break;
  }
  case Op_ShenandoahCompareAndExchangeP: { _sub_Op_ShenandoahCompareAndExchangeP(n);
    break;
  }
  case Op_ShenandoahCompareAndExchangeN: { _sub_Op_ShenandoahCompareAndExchangeN(n);
    break;
  }
  case Op_ShenandoahCompareAndSwapN: { _sub_Op_ShenandoahCompareAndSwapN(n);
    break;
  }
  case Op_ShenandoahCompareAndSwapP: { _sub_Op_ShenandoahCompareAndSwapP(n);
    break;
  }
  case Op_ShenandoahWeakCompareAndSwapN: { _sub_Op_ShenandoahWeakCompareAndSwapN(n);
    break;
  }
  case Op_ShenandoahWeakCompareAndSwapP: { _sub_Op_ShenandoahWeakCompareAndSwapP(n);
    break;
  }
  case Op_CopySignD: { _sub_Op_CopySignD(n);
    break;
  }
  case Op_CopySignF: { _sub_Op_CopySignF(n);
    break;
  }
  case Op_SignumD: { _sub_Op_SignumD(n);
    break;
  }
  case Op_SignumF: { _sub_Op_SignumF(n);
    break;
  }
  case Op_SqrtD: { _sub_Op_SqrtD(n);
    break;
  }
  case Op_SqrtF: { _sub_Op_SqrtF(n);
    break;
  }
  case Op_StoreB: { _sub_Op_StoreB(n);
    break;
  }
  case Op_StoreC: { _sub_Op_StoreC(n);
    break;
  }
  case Op_StoreCM: { _sub_Op_StoreCM(n);
    break;
  }
  case Op_StorePConditional: { _sub_Op_StorePConditional(n);
    break;
  }
  case Op_StoreIConditional: { _sub_Op_StoreIConditional(n);
    break;
  }
  case Op_StoreLConditional: { _sub_Op_StoreLConditional(n);
    break;
  }
  case Op_StoreD: { _sub_Op_StoreD(n);
    break;
  }
  case Op_StoreF: { _sub_Op_StoreF(n);
    break;
  }
  case Op_StoreI: { _sub_Op_StoreI(n);
    break;
  }
  case Op_StoreL: { _sub_Op_StoreL(n);
    break;
  }
  case Op_StoreP: { _sub_Op_StoreP(n);
    break;
  }
  case Op_StoreN: { _sub_Op_StoreN(n);
    break;
  }
  case Op_StoreNKlass: { _sub_Op_StoreNKlass(n);
    break;
  }
  case Op_StrComp: { _sub_Op_StrComp(n);
    break;
  }
  case Op_StrCompressedCopy: { _sub_Op_StrCompressedCopy(n);
    break;
  }
  case Op_StrEquals: { _sub_Op_StrEquals(n);
    break;
  }
  case Op_StrIndexOf: { _sub_Op_StrIndexOf(n);
    break;
  }
  case Op_StrIndexOfChar: { _sub_Op_StrIndexOfChar(n);
    break;
  }
  case Op_StrInflatedCopy: { _sub_Op_StrInflatedCopy(n);
    break;
  }
  case Op_SubD: { _sub_Op_SubD(n);
    break;
  }
  case Op_SubF: { _sub_Op_SubF(n);
    break;
  }
  case Op_SubI: { _sub_Op_SubI(n);
    break;
  }
  case Op_SubL: { _sub_Op_SubL(n);
    break;
  }
  case Op_TailCall: { _sub_Op_TailCall(n);
    break;
  }
  case Op_TailJump: { _sub_Op_TailJump(n);
    break;
  }
  case Op_ThreadLocal: { _sub_Op_ThreadLocal(n);
    break;
  }
  case Op_URShiftI: { _sub_Op_URShiftI(n);
    break;
  }
  case Op_URShiftL: { _sub_Op_URShiftL(n);
    break;
  }
  case Op_XorI: { _sub_Op_XorI(n);
    break;
  }
  case Op_XorL: { _sub_Op_XorL(n);
    break;
  }
  case Op_AddVB: { _sub_Op_AddVB(n);
    break;
  }
  case Op_AddVS: { _sub_Op_AddVS(n);
    break;
  }
  case Op_AddVI: { _sub_Op_AddVI(n);
    break;
  }
  case Op_AddReductionVI: { _sub_Op_AddReductionVI(n);
    break;
  }
  case Op_AddVL: { _sub_Op_AddVL(n);
    break;
  }
  case Op_AddReductionVL: { _sub_Op_AddReductionVL(n);
    break;
  }
  case Op_AddVF: { _sub_Op_AddVF(n);
    break;
  }
  case Op_AddReductionVF: { _sub_Op_AddReductionVF(n);
    break;
  }
  case Op_AddVD: { _sub_Op_AddVD(n);
    break;
  }
  case Op_AddReductionVD: { _sub_Op_AddReductionVD(n);
    break;
  }
  case Op_SubVB: { _sub_Op_SubVB(n);
    break;
  }
  case Op_SubVS: { _sub_Op_SubVS(n);
    break;
  }
  case Op_SubVI: { _sub_Op_SubVI(n);
    break;
  }
  case Op_SubVL: { _sub_Op_SubVL(n);
    break;
  }
  case Op_SubVF: { _sub_Op_SubVF(n);
    break;
  }
  case Op_SubVD: { _sub_Op_SubVD(n);
    break;
  }
  case Op_MulVB: { _sub_Op_MulVB(n);
    break;
  }
  case Op_MulVS: { _sub_Op_MulVS(n);
    break;
  }
  case Op_MulVI: { _sub_Op_MulVI(n);
    break;
  }
  case Op_MulReductionVI: { _sub_Op_MulReductionVI(n);
    break;
  }
  case Op_MulVL: { _sub_Op_MulVL(n);
    break;
  }
  case Op_MulReductionVL: { _sub_Op_MulReductionVL(n);
    break;
  }
  case Op_MulVF: { _sub_Op_MulVF(n);
    break;
  }
  case Op_MulReductionVF: { _sub_Op_MulReductionVF(n);
    break;
  }
  case Op_MulVD: { _sub_Op_MulVD(n);
    break;
  }
  case Op_MulReductionVD: { _sub_Op_MulReductionVD(n);
    break;
  }
  case Op_MulAddVS2VI: { _sub_Op_MulAddVS2VI(n);
    break;
  }
  case Op_FmaVD: { _sub_Op_FmaVD(n);
    break;
  }
  case Op_FmaVF: { _sub_Op_FmaVF(n);
    break;
  }
  case Op_DivVF: { _sub_Op_DivVF(n);
    break;
  }
  case Op_DivVD: { _sub_Op_DivVD(n);
    break;
  }
  case Op_AbsVB: { _sub_Op_AbsVB(n);
    break;
  }
  case Op_AbsVS: { _sub_Op_AbsVS(n);
    break;
  }
  case Op_AbsVI: { _sub_Op_AbsVI(n);
    break;
  }
  case Op_AbsVL: { _sub_Op_AbsVL(n);
    break;
  }
  case Op_AbsVF: { _sub_Op_AbsVF(n);
    break;
  }
  case Op_AbsVD: { _sub_Op_AbsVD(n);
    break;
  }
  case Op_NegVF: { _sub_Op_NegVF(n);
    break;
  }
  case Op_NegVD: { _sub_Op_NegVD(n);
    break;
  }
  case Op_SqrtVD: { _sub_Op_SqrtVD(n);
    break;
  }
  case Op_SqrtVF: { _sub_Op_SqrtVF(n);
    break;
  }
  case Op_LShiftCntV: { _sub_Op_LShiftCntV(n);
    break;
  }
  case Op_RShiftCntV: { _sub_Op_RShiftCntV(n);
    break;
  }
  case Op_LShiftVB: { _sub_Op_LShiftVB(n);
    break;
  }
  case Op_LShiftVS: { _sub_Op_LShiftVS(n);
    break;
  }
  case Op_LShiftVI: { _sub_Op_LShiftVI(n);
    break;
  }
  case Op_LShiftVL: { _sub_Op_LShiftVL(n);
    break;
  }
  case Op_RShiftVB: { _sub_Op_RShiftVB(n);
    break;
  }
  case Op_RShiftVS: { _sub_Op_RShiftVS(n);
    break;
  }
  case Op_RShiftVI: { _sub_Op_RShiftVI(n);
    break;
  }
  case Op_RShiftVL: { _sub_Op_RShiftVL(n);
    break;
  }
  case Op_URShiftVB: { _sub_Op_URShiftVB(n);
    break;
  }
  case Op_URShiftVS: { _sub_Op_URShiftVS(n);
    break;
  }
  case Op_URShiftVI: { _sub_Op_URShiftVI(n);
    break;
  }
  case Op_URShiftVL: { _sub_Op_URShiftVL(n);
    break;
  }
  case Op_AndV: { _sub_Op_AndV(n);
    break;
  }
  case Op_AndReductionV: { _sub_Op_AndReductionV(n);
    break;
  }
  case Op_OrV: { _sub_Op_OrV(n);
    break;
  }
  case Op_OrReductionV: { _sub_Op_OrReductionV(n);
    break;
  }
  case Op_XorV: { _sub_Op_XorV(n);
    break;
  }
  case Op_XorReductionV: { _sub_Op_XorReductionV(n);
    break;
  }
  case Op_MinV: { _sub_Op_MinV(n);
    break;
  }
  case Op_MaxV: { _sub_Op_MaxV(n);
    break;
  }
  case Op_MinReductionV: { _sub_Op_MinReductionV(n);
    break;
  }
  case Op_MaxReductionV: { _sub_Op_MaxReductionV(n);
    break;
  }
  case Op_LoadVector: { _sub_Op_LoadVector(n);
    break;
  }
  case Op_LoadVectorGather: { _sub_Op_LoadVectorGather(n);
    break;
  }
  case Op_LoadVectorGatherMasked: { _sub_Op_LoadVectorGatherMasked(n);
    break;
  }
  case Op_StoreVector: { _sub_Op_StoreVector(n);
    break;
  }
  case Op_StoreVectorScatter: { _sub_Op_StoreVectorScatter(n);
    break;
  }
  case Op_StoreVectorScatterMasked: { _sub_Op_StoreVectorScatterMasked(n);
    break;
  }
  case Op_LoadVectorMasked: { _sub_Op_LoadVectorMasked(n);
    break;
  }
  case Op_StoreVectorMasked: { _sub_Op_StoreVectorMasked(n);
    break;
  }
  case Op_VectorMaskGen: { _sub_Op_VectorMaskGen(n);
    break;
  }
  case Op_VectorMaskTrueCount: { _sub_Op_VectorMaskTrueCount(n);
    break;
  }
  case Op_VectorMaskFirstTrue: { _sub_Op_VectorMaskFirstTrue(n);
    break;
  }
  case Op_VectorMaskLastTrue: { _sub_Op_VectorMaskLastTrue(n);
    break;
  }
  case Op_VectorMaskToLong: { _sub_Op_VectorMaskToLong(n);
    break;
  }
  case Op_ReplicateB: { _sub_Op_ReplicateB(n);
    break;
  }
  case Op_ReplicateS: { _sub_Op_ReplicateS(n);
    break;
  }
  case Op_ReplicateI: { _sub_Op_ReplicateI(n);
    break;
  }
  case Op_ReplicateL: { _sub_Op_ReplicateL(n);
    break;
  }
  case Op_ReplicateF: { _sub_Op_ReplicateF(n);
    break;
  }
  case Op_ReplicateD: { _sub_Op_ReplicateD(n);
    break;
  }
  case Op_ExtractB: { _sub_Op_ExtractB(n);
    break;
  }
  case Op_ExtractS: { _sub_Op_ExtractS(n);
    break;
  }
  case Op_ExtractI: { _sub_Op_ExtractI(n);
    break;
  }
  case Op_ExtractL: { _sub_Op_ExtractL(n);
    break;
  }
  case Op_ExtractF: { _sub_Op_ExtractF(n);
    break;
  }
  case Op_ExtractD: { _sub_Op_ExtractD(n);
    break;
  }
  case Op_VectorMaskCmp: { _sub_Op_VectorMaskCmp(n);
    break;
  }
  case Op_VectorMaskCast: { _sub_Op_VectorMaskCast(n);
    break;
  }
  case Op_VectorTest: { _sub_Op_VectorTest(n);
    break;
  }
  case Op_VectorBlend: { _sub_Op_VectorBlend(n);
    break;
  }
  case Op_VectorRearrange: { _sub_Op_VectorRearrange(n);
    break;
  }
  case Op_VectorLoadMask: { _sub_Op_VectorLoadMask(n);
    break;
  }
  case Op_VectorLoadShuffle: { _sub_Op_VectorLoadShuffle(n);
    break;
  }
  case Op_VectorLoadConst: { _sub_Op_VectorLoadConst(n);
    break;
  }
  case Op_VectorStoreMask: { _sub_Op_VectorStoreMask(n);
    break;
  }
  case Op_VectorReinterpret: { _sub_Op_VectorReinterpret(n);
    break;
  }
  case Op_VectorCastB2X: { _sub_Op_VectorCastB2X(n);
    break;
  }
  case Op_VectorCastS2X: { _sub_Op_VectorCastS2X(n);
    break;
  }
  case Op_VectorCastI2X: { _sub_Op_VectorCastI2X(n);
    break;
  }
  case Op_VectorCastL2X: { _sub_Op_VectorCastL2X(n);
    break;
  }
  case Op_VectorCastF2X: { _sub_Op_VectorCastF2X(n);
    break;
  }
  case Op_VectorCastD2X: { _sub_Op_VectorCastD2X(n);
    break;
  }
  case Op_VectorInsert: { _sub_Op_VectorInsert(n);
    break;
  }
  case Op_MaskAll: { _sub_Op_MaskAll(n);
    break;
  }
  case Op_AndVMask: { _sub_Op_AndVMask(n);
    break;
  }
  case Op_OrVMask: { _sub_Op_OrVMask(n);
    break;
  }
  case Op_XorVMask: { _sub_Op_XorVMask(n);
    break;
  }
  
  default:
    tty->print("Default case invoked for: \n");
    tty->print("   opcode  = %d, \"%s\"\n", opcode, NodeClassNames[opcode]);
    return false;
  }
  return true;
}
