#line 1 "ad_aarch64_misc.cpp"
//
// Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.
// Copyright (c) 2014, 2021, Red Hat, Inc. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 2 only, as
// published by the Free Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// You should have received a copy of the GNU General Public License version
// 2 along with this work; if not, write to the Free Software Foundation,
// Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
//
// Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
// or visit www.oracle.com if you need additional information or have any
// questions.
//
//

// Machine Generated File.  Do Not Edit!

#include "precompiled.hpp"
#include "adfiles/ad_aarch64.hpp"
const RegMask &loadBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadB2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadUBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUB2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadS2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadUSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUS2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadI2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadUI2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadRangeNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadKlassNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadNKlassNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &loadDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &loadConINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadConLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadConPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadConP0Node::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadConP1Node::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadByteMapBaseNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadConNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadConN0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadConNKlassNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadConF_packedNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &loadConFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &loadConD_packedNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &loadConDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &storeimmCM0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmCM0_orderedNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeBNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmB0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeCNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmC0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeINode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmI0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeLNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmL0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storePNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeimmP0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeNNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeImmN0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeFNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeDNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeNKlassNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &prefetchallocNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadB_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadB2L_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadUB_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUB2L_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadS_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUS_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUS2L_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadS2L_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadI_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadUI2L_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadL_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadP_volatileNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &loadN_volatileNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &loadF_volatileNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &loadD_volatileNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &storeB_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeC_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeI_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeL_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeP_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeN_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeF_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeD_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cacheWBNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cacheWBPreSyncNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cacheWBPostSyncNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &bytes_reverse_intNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &bytes_reverse_longNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &bytes_reverse_unsigned_shortNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &bytes_reverse_shortNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &countLeadingZerosINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &countLeadingZerosLNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &countTrailingZerosINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &countTrailingZerosLNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &popCountINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &popCountI_memNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &popCountLNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &popCountL_memNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &load_fenceNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &unnecessary_membar_acquireNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_acquireNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_acquire_lockNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &store_fenceNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &unnecessary_membar_releaseNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_releaseNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_storestoreNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_storestore_0Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_release_lockNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &unnecessary_membar_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &membar_volatileNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &castX2PNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &castP2XNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convP2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convN2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &encodeHeapOopNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &encodeHeapOop_not_nullNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &decodeHeapOopNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &decodeHeapOop_not_nullNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &encodeKlass_not_nullNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &decodeKlass_not_nullNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &checkCastPPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &castPPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &castIINode::out_RegMask() const { return (ANY_REG32_mask()); }
const RegMask &castLLNode::out_RegMask() const { return (ANY_REG_mask()); }
const RegMask &castFFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &castDDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &castVVDNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &castVVXNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &castVVNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &castVVMaskNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &loadPLockedNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &storePConditionalNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &storeLConditionalNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &storeIConditionalNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compareAndSwapBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapLNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapPNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapBAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapSAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapIAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapLAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapPAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapNAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &compareAndExchangeNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangePNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &compareAndExchangeBAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeSAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeIAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeLAcqNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &compareAndExchangeNAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangePAcqNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &weakCompareAndSwapBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapLNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapPNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapBAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapSAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapIAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapLAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapNAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapPAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_setINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_setLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_setNNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_setPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &get_and_setIAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_setLAcqNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_setNAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_setPAcqNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &get_and_addLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_addL_no_resNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addLiNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_addLi_no_resNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_addI_no_resNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addIiNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_addIi_no_resNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addLAcqNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_addL_no_resAcqNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addLiAcqNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &get_and_addLi_no_resAcqNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addIAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_addI_no_resAcqNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &get_and_addIiAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &get_and_addIi_no_resAcqNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpL3_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmpL3_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUI_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUI_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_reg_zero_oneNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUI_reg_zero_oneNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovUL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovL_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovUL_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovL_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovUL_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &cmovP_reg_regNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovUP_reg_regNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovP_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovUP_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovP_zero_regNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovUP_zero_regNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &cmovN_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUN_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovN_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUN_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovN_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovUN_zero_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &cmovUF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &cmovD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &cmovUD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &addI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &addI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &addI_reg_imm_i2lNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &addP_reg_regNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &addP_reg_reg_extNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &addP_reg_reg_lslNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &addP_reg_reg_ext_shiftNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &lshift_extNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &addP_reg_immNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &addL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &addL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &subI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &subI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &subL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &subL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &negI_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &negL_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &mulINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &smulINode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smulI_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &mulLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &mulHiL_rRegNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &maddINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &maddI_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &msubINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &mnegINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &mnegI_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &maddLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &maddL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &msubLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &mnegLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &mnegL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smaddLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smaddL_1Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smaddL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smaddL_2Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smsubLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smsubL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smnegLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &smnegL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &muladdS2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &divINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &divLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &modINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &modLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &lShiftI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &lShiftI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &urShiftI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &urShiftI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rShiftI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rShiftI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &lShiftL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &lShiftL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &urShiftL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &urShiftL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &urShiftP_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &rShiftL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &rShiftL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &regL_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &regI_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_URShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_URShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_URShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_URShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RotateRight_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RotateRight_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RotateRight_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RotateRight_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_LShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_LShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_LShift_not_reg_1Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_LShift_not_reg_2Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_URShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_URShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_RShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_RShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_RotateRight_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_RotateRight_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_LShift_not_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_LShift_not_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndI_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndI_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AndL_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AndL_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorI_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorI_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &XorL_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &XorL_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrI_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrI_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &OrL_reg_RotateRight_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &OrL_reg_RotateRight_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddI_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddI_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddL_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddL_reg_URShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddI_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddI_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddL_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddL_reg_RShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddI_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddI_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddL_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddL_reg_LShift_reg_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubI_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubL_reg_URShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubI_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubL_reg_RShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubI_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubL_reg_LShift_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &sbfmLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &sbfmwINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfmLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfmwINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfxwINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfxLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfxIConvI2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfizwINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfizLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfizwIConvI2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfizLConvL2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfizIConvI2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &ubfizLConvL2IxNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &ubfizIConvI2LAndINode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extrOrLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extrOrL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extrOrINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extrOrI_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extrAddLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extrAddL_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extrAddINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extrAddI_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rorI_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rorL_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &rorI_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rorL_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &rolI_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &rolL_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtINode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtINode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_sxthNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxth_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxtbNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxtb_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxtbNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxtb_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtL_sxthNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxth_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtwNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtw_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtbNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtb_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtbNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtb_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_uxtb_andNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxtb_and_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxth_andNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxth_and_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtL_uxtb_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtb_and_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxth_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxth_and_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtw_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtw_and_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtI_uxtb_andNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtI_uxth_andNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtL_uxtb_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_uxth_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_uxtw_andNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtb_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtb_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxth_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxth_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtw_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_sxtw_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_sxtb_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_sxth_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_sxtw_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_sxtb_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxtb_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxth_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_sxth_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtI_sxtb_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtI_sxth_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtI_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtb_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtb_and_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxth_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxth_and_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtw_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtL_uxtw_and_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_uxtb_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_uxth_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &SubExtL_uxtw_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &AddExtI_uxtb_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxtb_and_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxth_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &AddExtI_uxth_and_shift_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtI_uxtb_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &SubExtI_uxth_and_shiftNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &addF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &addD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &subF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &subD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &mulF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &mulD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &maddF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &maddD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &msubF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &msubF_reg_reg_0Node::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &msubD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &msubD_reg_reg_0Node::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &mnaddF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &mnaddF_reg_reg_0Node::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &mnaddD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &mnaddD_reg_reg_0Node::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &mnsubF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &mnsubD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &maxF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &minF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &maxD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &minD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &divF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &divD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &negF_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &negD_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &absI_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &absL_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &absF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &absD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &absdF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &absdD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &sqrtD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &sqrtF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &roundD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &copySignD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &copySignF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &signumD_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &signumF_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &onspinwaitNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &andI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &andI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &orI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &orI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &xorI_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &xorI_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &andL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &andL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &orL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &orL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &xorL_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &xorL_reg_immNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convI2L_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convUI2L_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convL2I_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convI2BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convP2BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convD2F_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &convF2D_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &convF2I_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convF2L_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convI2F_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &convL2F_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &convD2I_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &convD2L_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &convI2D_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &convL2D_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &MoveF2I_stack_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &MoveI2F_stack_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &MoveD2L_stack_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &MoveL2D_stack_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &MoveF2I_reg_stackNode::out_RegMask() const { return ((Compile::current()->FIRST_STACK_mask())); }
const RegMask &MoveI2F_reg_stackNode::out_RegMask() const { return ((Compile::current()->FIRST_STACK_mask())); }
const RegMask &MoveD2L_reg_stackNode::out_RegMask() const { return ((Compile::current()->FIRST_STACK_mask())); }
const RegMask &MoveL2D_reg_stackNode::out_RegMask() const { return ((Compile::current()->FIRST_STACK_mask())); }
const RegMask &MoveF2I_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &MoveI2F_reg_regNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &MoveD2L_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &MoveL2D_reg_regNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &clearArray_reg_regNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &clearArray_imm_regNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &overflowAddI_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowAddI_reg_immNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowAddL_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowAddL_reg_immNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowSubI_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowSubI_reg_immNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowSubL_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowSubL_reg_immNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowNegI_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowNegL_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowMulI_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowMulI_reg_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &overflowMulL_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &overflowMulL_reg_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &compI_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compI_reg_immI0Node::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compI_reg_immIAddSubNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compI_reg_immINode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compU_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compU_reg_immI0Node::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compU_reg_immIAddSubNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compU_reg_immINode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compL_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compL_reg_immL0Node::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compL_reg_immLAddSubNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compL_reg_immLNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compUL_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compUL_reg_immL0Node::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compUL_reg_immLAddSubNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compUL_reg_immLNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compP_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compN_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &testP_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &testN_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compF_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compF_reg_zeroNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compD_reg_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compD_reg_zeroNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &compF3_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compD3_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compF3_reg_immF0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compD3_reg_immD0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmpLTMask_reg_regNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmpLTMask_reg_zeroNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_reg_reg_ltNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &minI_rRegNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &cmovI_reg_reg_gtNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &maxI_rRegNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &branchConNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &branchConUNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpI_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpL_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpP_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpN_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpP_narrowOop_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpUI_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpUL_imm0_branchNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpL_branch_signNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpI_branch_signNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpL_branch_bitNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpI_branch_bitNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &far_cmpL_branch_signNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &far_cmpI_branch_signNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &far_cmpL_branch_bitNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &far_cmpI_branch_bitNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpL_andNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &cmpI_andNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &cmpL_and_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &cmpI_and_regNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &branchLoopEndNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &branchLoopEndUNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &cmpFastLockNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &cmpFastUnlockNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &safePointNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallStaticJavaDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallDynamicJavaDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallRuntimeDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallLeafDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallLeafNoFPDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CallNativeDirectNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &TailCalljmpIndNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &TailjmpIndNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &CreateExceptionNode::out_RegMask() const { return (R0_REG_mask()); }
const RegMask &RethrowExceptionNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &RetNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &ShouldNotReachHereNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &partialSubtypeCheckNode::out_RegMask() const { return (R5_REG_mask()); }
const RegMask &partialSubtypeCheckVsZeroNode::out_RegMask() const { return (INT_FLAGS_mask()); }
const RegMask &string_compareUNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareLNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareULNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareLUNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexofUUNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexofLLNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexofULNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexof_conUUNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexof_conLLNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexof_conULNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_indexof_charNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &stringL_indexof_charNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_equalsLNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_equalsUNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &array_equalsBNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &array_equalsCNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &has_negativesNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compressNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_inflateNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &encode_iso_arrayNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &tlsLoadPNode::out_RegMask() const { return (THREAD_REG_mask()); }
const RegMask &loadV2Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadV4Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadV8Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadV16Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &storeV2Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeV4Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeV8Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeV16Node::out_RegMask() const { return (RegMask::Empty); }
const RegMask &reinterpretDNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &reinterpretXNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &reinterpretD2XNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &reinterpretX2DNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &reinterpretS2XNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &reinterpretX2SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &reinterpretS2DNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &reinterpretD2SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt8Bto8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt4Bto4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt8Sto8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Sto4BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Sto4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt4Ito4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt2Ito2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Lto2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Ito4BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Bto4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Lto2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt2Ito2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Ito4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Lto2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt4Sto4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Ito2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt4Bto4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Fto2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Fto2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Fto4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Dto2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt4Fto4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt2Dto2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt4Fto4BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcvt2Fto2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vcvt2Dto2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &reduce_add8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_mul8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_max8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_min2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_max2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_min2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_max2FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_max4FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_max2DNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_min2FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_min4FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_min2DNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_and8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orr4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eor4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_and2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_orr2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_eor2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &insert8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &insert16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &insert4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &insert8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &insert2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &insert4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &insert2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &insert2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &insert4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &insert2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &extract8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract4SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract8SNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extract2LNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extract2FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &extract4FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &extract2DNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &vcmpDNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vcmpXNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot2I_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot2I_1Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot2I_2Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot2I_3Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot2I_4Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vnot4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot4I_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot4I_1Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot4I_2Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot4I_3Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot4I_4Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vnot2L_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_1Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_2Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_3Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_5Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_4Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_6Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_7Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_9Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_8Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not2I_10Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand_not4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_1Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_2Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_3Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_5Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_4Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_6Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_7Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_9Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_8Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not4I_10Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not2L_1Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not2L_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand_not2L_2Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmax16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmax8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmax4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmin16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmin8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmin4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vbsl8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vbsl16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadmask8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadmask16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &storemask8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &storemask16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadmask4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadmask8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &storemask4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &storemask8SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadmask2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadmask4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &storemask2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &storemask4INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadmask2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &storemask2LNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmaskcastDNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmaskcastXNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadcon8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadcon16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadshuffle8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadshuffle16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadshuffle4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &loadshuffle8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &loadshuffle4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &rearrange8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &rearrange16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &rearrange4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &rearrange8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &rearrange4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &anytrue_in_mask8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &anytrue_in_mask16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &alltrue_in_mask8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &alltrue_in_mask16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vabs8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vabs16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabs4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vabs8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabs2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vabs4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabs2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabs2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vabs4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabs2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabd2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vabd4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vabd2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2L_zeroNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &replicate4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &replicate2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &reduce_add2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul2INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_mul4INode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_add2FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_add4FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_mul2FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_mul4FNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_add2DNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_mul2DNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &vadd8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vadd16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vadd4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vadd8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vadd2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vadd4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vadd2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vadd2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vadd4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vadd2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsub16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsub8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsub4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsub4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsub2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmul16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmul8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmul4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmul4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmul2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmla4S_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmla8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla8S_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmla2I_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmla4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla4I_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmla4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmla2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmls8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmls4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmls2F_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmls4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls4F_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmls2D_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmuladdS2INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vdiv2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vdiv4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vdiv2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsqrt2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsqrt4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsqrt2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vneg2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vneg4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vneg2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vand8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vand16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vor8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vor16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vxor8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vxor16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vshiftcnt8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vshiftcnt8B_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vshiftcnt16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vshiftcnt16B_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl8BNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl16BNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl4SNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl8SNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsll4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsra4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrl4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl2LNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsll2L_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsra2L_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrl2L_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa8B_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa16B_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa4S_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa8S_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa2I_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsraa4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa4I_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa2L_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsraa2L_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla8B_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla8B_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla16B_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla16B_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla4S_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla4S_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla8S_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla8S_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla2I_immNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla2I_imm_0Node::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vsrla4I_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla4I_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla2L_immNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vsrla2L_imm_0Node::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmax4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmax2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin2FNode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmin4FNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vmin2DNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vround2D_regNode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vpopcount4INode::out_RegMask() const { return (VECTORX_REG_mask()); }
const RegMask &vpopcount2INode::out_RegMask() const { return (VECTORD_REG_mask()); }
const RegMask &vmask_truecount8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_truecount16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_firsttrue_LT8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_firsttrue8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_firsttrue16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_lasttrue8BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_lasttrue16BNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_tolong8BNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &vmask_tolong16BNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &loadVNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeVNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV2_vregNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV2_vregNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV4_vregNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV4_vregNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV8_vregNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV8_vregNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV16_vregNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV16_vregNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadV_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &loadV_masked_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &storeV_maskedNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeV_masked_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &vmaskAll_immINode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskAllINode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskAll_immLNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskAllLNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_andNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_orNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_xorNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_and_notINode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_and_notLNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &reinterpretNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &reinterpretResizeNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmask_reinterpret_same_esizeNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmask_reinterpret_diff_esizeNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vabsBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vabsD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmI_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vaddImmL_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandHNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandH_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandD_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorHNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorH_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorD_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorHNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorH_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorD_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vandNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vorNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxorNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vor_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vxor_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotI_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotI_1Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotI_2Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotI_3Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotI_4Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnotL_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_1Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_2Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_3Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_5Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_4Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_6Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_7Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_9Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_8Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notI_10Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notL_1Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notL_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vand_notL_2Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vdivFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vdivDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfdivF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfdivD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vminNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmaxNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmin_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmax_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlaFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlaDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlaF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlaD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlsFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlsF_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlsDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfmlsD_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlaFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlaF_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlaDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlaD_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlsFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vfnmlsDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaI_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlaL_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlsBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlsSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlsINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmlsLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmulD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnegFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnegDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnegF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vnegD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vpopcountINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmaskcmpNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskcmp_maskedNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vblendNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vloadmaskBNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vloadmask_extendNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vstoremaskBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vstoremask_narrowNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vloadmask_loadVNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vloadmask_loadV_partialNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &storeV_vstoremaskNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &storeV_vstoremask_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &reduce_addINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_addLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_addFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_addDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_addI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_addL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_addF_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_addD_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_addI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_addL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_addF_maskedNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_addD_maskedNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_addI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_addL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_addF_masked_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_addD_masked_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_andINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_andLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_andI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_andL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_andI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_andL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_andI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_andL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_orINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_orI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_orI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_orI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_orL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_eorINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eorLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_eorI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eorL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_eorI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eorL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_eorI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_eorL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_maxINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_maxLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_maxI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_maxL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_maxFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_maxF_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_maxDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_maxD_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_maxI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_maxL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_maxI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_maxL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_maxF_maskedNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_maxD_maskedNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_maxF_masked_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_maxD_masked_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_minINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_minLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_minI_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_minL_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_minFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_minF_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_minDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_minD_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_minI_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_minL_maskedNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_minI_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &reduce_minL_masked_partialNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &reduce_minF_maskedNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_minD_maskedNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &reduce_minF_masked_partialNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &reduce_minD_masked_partialNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &vroundDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateB_imm8Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateS_imm8Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateI_imm8Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateL_imm8Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &replicateDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrB_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrS_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrI_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrL_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrB_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrS_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrI_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrL_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslB_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslS_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslI_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslL_immNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntB_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntS_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntI_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vshiftcntL_0Node::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrB_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrS_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrI_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vasrL_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrB_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrS_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrI_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlsrL_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslB_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslS_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslI_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vlslL_imm_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsqrtFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsqrtDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsqrtF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsqrtD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubB_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubS_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubF_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vsubD_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vmaskcastNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskcast_extendNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vmaskcast_narrowNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &vcvtBtoX_extendNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtStoBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtStoX_extendNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtItoBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtItoSNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtItoLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtItoFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtItoDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtLtoX_narrowNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtLtoFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtLtoDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtFtoX_narrowNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtFtoINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtFtoLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtFtoDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtDtoX_narrowNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtDtoLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &vcvtDtoFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &extractBNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extractSNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extractINode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &extractLNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &extractFNode::out_RegMask() const { return (FLOAT_REG_mask()); }
const RegMask &extractDNode::out_RegMask() const { return (DOUBLE_REG_mask()); }
const RegMask &vtest_alltrueNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vtest_anytrueNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vtest_alltrue_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vtest_anytrue_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &insertI_smallNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &insertF_smallNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &insertINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &insertLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &insertDNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &insertFNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &loadshuffleNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &rearrangeNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherINode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherLNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherI_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherL_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherI_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherL_maskedNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherI_masked_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &gatherL_masked_partialNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &scatterINode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterLNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterI_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterL_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterI_maskedNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterL_maskedNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterI_masked_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &scatterL_masked_partialNode::out_RegMask() const { return (RegMask::Empty); }
const RegMask &loadconBNode::out_RegMask() const { return (VECTORA_REG_mask()); }
const RegMask &stringL_indexof_char_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &stringU_indexof_char_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareLL_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareLU_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareUL_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &string_compareUU_sveNode::out_RegMask() const { return (INT_R0_REG_mask()); }
const RegMask &vmask_truecountNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_firsttrueNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_lasttrueNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_truecount_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_firsttrue_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_lasttrue_partialNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &vmask_tolongNode::out_RegMask() const { return (NO_SPECIAL_REG_mask()); }
const RegMask &vmask_genNode::out_RegMask() const { return (GOV_PR_mask()); }
const RegMask &compareAndSwapP_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapN_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapPAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndSwapNAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeN_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangeP_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &compareAndExchangeNAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &compareAndExchangePAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &weakCompareAndSwapN_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapP_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapNAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &weakCompareAndSwapPAcq_shenandoahNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &zLoadPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &zLoadPVolatileNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &zCompareAndSwapPNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &zCompareAndSwapP_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &zCompareAndSwapPAcqNode::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &zCompareAndSwapPAcq_0Node::out_RegMask() const { return (NO_SPECIAL_REG32_mask()); }
const RegMask &zCompareAndExchangePNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &zCompareAndExchangePAcqNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &zGetAndSetPNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
const RegMask &zGetAndSetPAcqNode::out_RegMask() const { return (NO_SPECIAL_PTR_REG_mask()); }
// Check consistency of C++ compilation with ADLC options:
// Check adlc -DLINUX=1
#ifndef LINUX
#  error "LINUX must be defined"
#endif // LINUX
// Check adlc -D_GNU_SOURCE=1
#ifndef _GNU_SOURCE
#  error "_GNU_SOURCE must be defined"
#endif // _GNU_SOURCE
// Check adlc -DAARCH64=1
#ifndef AARCH64
#  error "AARCH64 must be defined"
#endif // AARCH64
// Check adlc -D_LP64=1
#ifndef _LP64
#  error "_LP64 must be defined"
#endif // _LP64
