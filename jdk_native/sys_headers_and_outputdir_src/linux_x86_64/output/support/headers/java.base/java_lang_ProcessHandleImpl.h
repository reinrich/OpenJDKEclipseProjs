/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_ProcessHandleImpl */

#ifndef _Included_java_lang_ProcessHandleImpl
#define _Included_java_lang_ProcessHandleImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef java_lang_ProcessHandleImpl_NOT_A_CHILD
#define java_lang_ProcessHandleImpl_NOT_A_CHILD -2L
/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    initNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_ProcessHandleImpl_initNative
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    waitForProcessExit0
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_java_lang_ProcessHandleImpl_waitForProcessExit0
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    getCurrentPid0
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_ProcessHandleImpl_getCurrentPid0
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    parent0
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_java_lang_ProcessHandleImpl_parent0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    getProcessPids0
 * Signature: (J[J[J[J)I
 */
JNIEXPORT jint JNICALL Java_java_lang_ProcessHandleImpl_getProcessPids0
  (JNIEnv *, jclass, jlong, jlongArray, jlongArray, jlongArray);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    destroy0
 * Signature: (JJZ)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_ProcessHandleImpl_destroy0
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     java_lang_ProcessHandleImpl
 * Method:    isAlive0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_java_lang_ProcessHandleImpl_isAlive0
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
